name: Deployment status

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Reason"
  push:
    branches:
      - master
    paths-ignore: 
      - 'docs/**'
      - '.vscode/**'
      - '.gitub/**'
      - '!.github/workflows/deploy.yml' # re-deploy after changes to deployment workflow

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12.x

      - name: Store yarn directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Check yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Check node_modules cache
        id: node-modules-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Check Gatsby cache
        id: gatsby-cache
        uses: actions/cache@v2
        with:
          path: |
            .cache
            public
          key: ${{ runner.os }}-gatsby-${{ hashFiles('gatsby-*.js') }}-${{ hashFiles('package.json') }}

      - name: Install packages
        if: |
          steps.yarn-cache.outputs.cache-hit != 'true' ||
          steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --network-timeout 300000 && yarn clean

      - name: Build site
        run: yarn build

      - name: Install IBM Cloud CLI
        run: curl -fsSL https://clis.cloud.ibm.com/install/osx | sh

      - name: Install Cloud Foundry CLI
        run: ibmcloud cf install

      - name: Login to ibmcloud
        env:
          API_KEY: ${{ secrets.API_KEY }}
        run: ibmcloud login -a "https://cloud.ibm.com" -u apikey -p "$API_KEY" -o "carbon-design-system" -s "production" -r "us-south"

      - name: Deploy website
        run: |
          ibmcloud cf v3-zdt-push carbon-website -b https://github.com/cloudfoundry/nginx-buildpack.git
