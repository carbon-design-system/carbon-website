"use strict";(self.webpackChunkcarbondesignsystem=self.webpackChunkcarbondesignsystem||[]).push([[534481],{317619:function(e,t,a){a.r(t);var n=a(28453),l=a(296540),r=a(815929),s=a(9438);function c(e){const t=Object.assign({p:"p",h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",a:"a"},(0,n.R)(),e.components),{PageDescription:a,AnchorLinks:c,AnchorLink:i}=t;return i||o("AnchorLink",!0),c||o("AnchorLinks",!0),a||o("PageDescription",!0),l.createElement(l.Fragment,null,l.createElement(a,null,l.createElement(t.p,null,"Manual and automated tests assess the accessibility of Carbon components against\nestablished standards. Read on to learn about how components are tagged with\ntest statuses across the website.")),"\n",l.createElement(c,null,l.createElement(i,null,"Accessibility tag status"),l.createElement(i,null,"Accessibility test categories"),l.createElement(i,null,"All component accessibility status")),"\n",l.createElement(t.h2,null,"Accessibility tag status"),"\n",l.createElement(t.p,null,"Automated accessibility verification tests (AVT) are run for each change\nproposed to the Carbon codebase. Additional manual tests are done periodically,\nsuch as screenreader testing. These tests ensure a consistent baseline of\naccessibility for each stable component."),"\n",l.createElement(t.p,null,"Carbon implements a robust matrix of AVT to ensure that every Carbon component\nmeets the utmost standards of accessibility. The status of this testing is\noutlined across the website through a detailed matrix of test categories and\ntags, outlined below."),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,null,"Tag"),l.createElement(t.th,null,"Meaning"))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,null,l.createElement(s.A,{tag:"tested",tooltip:!1})),l.createElement(t.td,null,"Automated tests have been implemented, pass, and show no violations via the ",l.createElement(t.a,{href:"https://github.com/IBMa/equal-access"},"IBM Equal Access Accessibility Checker")," for a componentâ€™s default state, advanced states, and keyboard navigation.")),l.createElement(t.tr,null,l.createElement(t.td,null,l.createElement(s.A,{tag:"partial",tooltip:!1})),l.createElement(t.td,null,"Some testing has been done, but is still incomplete and in progress. For example, manual tests may not have covered all use cases, or automated tests may not cover all component states. Previously existing tests may have become invalid and are temporarily skipped or removed.")),l.createElement(t.tr,null,l.createElement(t.td,null,l.createElement(s.A,{tag:"manual",tooltip:!1})),l.createElement(t.td,null,"Manual testing has been performed and validated by a human to ensure proper accessibility, such as screen reader testing.")),l.createElement(t.tr,null,l.createElement(t.td,null,l.createElement(s.A,{tag:"notavailable",tooltip:!1})),l.createElement(t.td,null,"In some cases, testing data is not available for certain components or component states. For instance, keyboard navigation testing is not necessary for components that are non-interactive.")),l.createElement(t.tr,null,l.createElement(t.td,null,l.createElement(s.A,{tag:"nottested",tooltip:!1})),l.createElement(t.td,null,"Automated or manual testing has been deferred. Most often this applies to preview or unstable components that do not have testing performed until they are ",l.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/preview-code.md"},"moved to stable"),".")))),"\n",l.createElement(t.h2,null,"Accessibility test categories"),"\n",l.createElement(t.p,null,"Every accessibility test falls into one of four categories. Marked with the tags\nabove, these categories show the status for each of these discrete areas of\ntesting. This additional detail helps clarify exactly what ways a component has\nbeen tested for accessibility."),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,null,"Test"),l.createElement(t.th,null,"Meaning"),l.createElement(t.th,null,"Possible tags"))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,null,"Default state"),l.createElement(t.td,null,"Test(s) that ensure the initial render state of a component is accessible."),l.createElement(t.td,null,l.createElement(s.A,{tag:"tested"})," ",l.createElement("br"),l.createElement(s.A,{tag:"nottested"}),l.createElement("br"),l.createElement(s.A,{tag:"partial"}))),l.createElement(t.tr,null,l.createElement(t.td,null,"Advanced states"),l.createElement(t.td,null,"Tests that ensure additional states of the component are accessible. This could be interactive states of a component or its multiple variants."),l.createElement(t.td,null,l.createElement(s.A,{tag:"tested"})," ",l.createElement("br"),l.createElement(s.A,{tag:"nottested"}),l.createElement("br"),l.createElement(s.A,{tag:"partial"}))),l.createElement(t.tr,null,l.createElement(t.td,null,"Keyboard navigation"),l.createElement(t.td,null,"Tests that ensure focus is properly managed, and all interactive functions of a component have a proper keyboard-accessible equivalent."),l.createElement(t.td,null,l.createElement(s.A,{tag:"tested"})," ",l.createElement("br"),l.createElement(s.A,{tag:"notavailable"}),l.createElement("br"),l.createElement(s.A,{tag:"partial"}))),l.createElement(t.tr,null,l.createElement(t.td,null,"Screen reader"),l.createElement(t.td,null,"This manual testing ensures that the visual information on the screen is properly conveyed and read correctly by screen readers such as JAWS, VoiceOver, and NVDA."),l.createElement(t.td,null,l.createElement(s.A,{tag:"notavailable"}),l.createElement("br"),l.createElement(s.A,{tag:"nottested"}),l.createElement("br"),l.createElement(s.A,{tag:"manual"})," ",l.createElement("br"),l.createElement(s.A,{tag:"partial"}))))),"\n",l.createElement(r.A))}function o(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}t.default=function(e={}){const{wrapper:t}=Object.assign({},(0,n.R)(),e.components);return t?l.createElement(t,e,l.createElement(c,e)):c(e)}}}]);