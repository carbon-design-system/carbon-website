"use strict";(self.webpackChunkcarbondesignsystem=self.webpackChunkcarbondesignsystem||[]).push([[889482],{66250:function(e,n,t){t.r(n);var o=t(28453),a=t(296540);function i(e){const n=Object.assign({p:"p",h2:"h2",a:"a",h3:"h3",pre:"pre",code:"code",ul:"ul",li:"li",h4:"h4"},(0,o.R)(),e.components),{PageDescription:t,AnchorLinks:i,AnchorLink:r,Video:c}=n;return r||s("AnchorLink",!0),i||s("AnchorLinks",!0),t||s("PageDescription",!0),c||s("Video",!0),a.createElement(a.Fragment,null,a.createElement(t,null,a.createElement(n.p,null,"All components and patterns require usage, style, code, and accessibility\nguidance on the Carbon website. Check out the markdown templates and\ninstructions below to contribute documentation smoothly.")),"\n",a.createElement(i,null,a.createElement(r,null,"Documenting components"),a.createElement(r,null,"Documenting patterns"),a.createElement(r,null,"Writing better content"),a.createElement(r,null,"Publishing updates")),"\n",a.createElement(n.h2,null,"Documenting components"),"\n",a.createElement(n.p,null,"The website is written in markdown, which makes it easy for anyone to contribute\ncontent in a systematic way. Some components require more complex documentation\nthan others, but you should cover each topic included in the following markdown\ntemplates: usage, style, code, and accessibility."),"\n",a.createElement(n.p,null,"Check out Carbon’s handy markdown\n",a.createElement(n.a,{href:"https://github.com/carbon-design-system/carbon-website/wiki/Markdown-cheatsheet"},"styling cheatsheet"),"\nfor how to style content. You may also use the\n",a.createElement(n.a,{href:"https://www.figma.com/file/XQqHxu38CiY3Vx1iHdafIa/Image-production-guidelines?type=design&node-id=2651-218&mode=design&t=UbKwOlVeoU83hyGI-0"},"Figma template"),"\nto draft content and images"),"\n",a.createElement(n.h3,null,"Usage template: for components with one variant"),"\n",a.createElement(n.p,null,"The usage template helps describe when to use a component and how it works. The\ntemplate below provides example content from the\n",a.createElement(n.a,{href:"/components/accordion/usage"},"Accordion")," usage tab, along with many tips on best\nways to compose content and images. Check out\n",a.createElement(n.a,{href:"/components/content-switcher/usage"},"Content switcher")," or\n",a.createElement(n.a,{href:"/components/checkbox/usage"},"Checkbox")," for additional single variant references."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-markdown"},'---\ntitle: Accordion\ndescription:\n  An accordion is a vertically stacked list of headers that reveal or hide\n  associated sections of content.\ntabs: [\'Usage\', \'Style\', \'Code\', \'Accessibility\']\n---\n\nimport A11yStatus from \'components/A11yStatus\';\n\n\x3c!-- The page description should be the same as the component description, and no more than two sentences. Its purpose is to help readers quickly determine the general application of a component. More detailed information may be placed in the overview. --\x3e\n\n<PageDescription>\nAn accordion is a vertically stacked list of headers that reveal or hide\nassociated sections of content.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Live demo</AnchorLink> <AnchorLink>Overview</AnchorLink>\n<AnchorLink>Formatting</AnchorLink> <AnchorLink>Content</AnchorLink>\n<AnchorLink>Behaviors</AnchorLink> <AnchorLink>Modifiers</AnchorLink>\n<AnchorLink>AI presence</AnchorLink> <AnchorLink>Related</AnchorLink>\n<AnchorLink>References</AnchorLink> <AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Live demo\n\n\x3c!--\nSince there is only one variant, the Accordion is labeled as \'Default\' and no more variants are listed.\n--\x3e\n\n<StorybookDemo themeSelector url="https://react.carbondesignsystem.com"\nvariants={[ { label: \'Default\', variant: \'components-accordion--default\', }, ]}\n/>\n\n\x3c!--\nSince there is only one variant for the A11yStatus section, the only component listed is \'Accordion.\'\n--\x3e\n\n<A11yStatus layout="cards" components="Accordion" />\n\n## Overview\n\n\x3c!--\nInclude a paragraph or two that describes the primary use cases for the component and details about how it helps the user achieve specific tasks.\n--\x3e\n\nThe accordion component delivers large amounts of content in a small space\nthrough progressive disclosure. The header title gives the user a high level\noverview of the content allowing the user to decide which sections to read.\n\nAccordions can make information processing and discovering more effective.\nHowever, it does hide content from users and it\'s important to account for a\nuser not noticing or reading all of the included content.\n\n\x3c!--\nOverview image: Include an image that represents how the component is most often used in a product UI. The goal here is to show the component in context, rather than duplicating the Live Demo. Usually, this image is 8 columns, but in cases where the UI requires more space, 12 columns is permissible such as in [content switcher](/content-switcher/usage/#overview).\n--\x3e\n\n<Row>\n<Column colLg={8}>\n\n![accordion grid placement](images/accordion-placement-1.png)\n\n</Column>\n</Row>\n\n### When to use\n\n\x3c!--\nInclude examples of when to use this component and how it helps a user accomplish a task. You may write this section as a list as shown in the accordion example, or in 1-2 sentences as shown in the dropdown example.\n--\x3e\n\nExample: Dropdowns can be used in forms on full pages, in modals, or on side\npanels. The dropdown component is used to filter or sort contents on a page. It\nis a stylized version of the select component, and can be styled as needed.\n\n- To organize related information.\n- To shorten pages and reduce scrolling when content is not crucial to read in\n  full.\n- When space is at a premium and long content cannot be displayed all at once,\n  like on a mobile interface or in a side panel.\n\n  ### When not to use\n\n\x3c!--\nIf there are two seemingly similar components that should be used in distinctly different use cases, explain this distinction here. You may write this section as a list or in 1-2 sentences.\n--\x3e\n\nExample:\n\nIt is best practice not to use a dropdown if there are two or fewer options to\nchoose from. In this case, use a radio button group instead.\n\n- When organizing large amounts of information that can be nested, consider\n  using [tree view](/components/tree-view/usage) instead.\n- If a user is likely to read all of the content, then don\'t use an accordion as\n  it adds the burden of an extra click; instead use a full scrolling page with\n  normal headers.\n\n## Formatting\n\n### Anatomy\n\n\x3c!--\nThe anatomy section includes an image of the component with numbered callouts to each of the component elements. A list below provides the name of the element in bold and explains its purpose. Be sure to note if the element is optional.\n\nSee [Notification](https://www.carbondesignsystem.com/components/notification/usage#anatomy) for an additional example.\n--\x3e\n\n<Row>\n<Column colLg={8}>\n\n![accordion anatomy](images/accordion-anatomy.png)\n\n</Column>\n</Row>\n\n1. **Header**: contains the section title and is control for revealing the\n   panel.\n2. **Icon**: indicates if the panel is open or closed.\n3. **Panel**: the section of content associated with an accordion header.\n\n### Styling (optional)\n\n\x3c!--\nAdd this section if a component has different visual stylings but still shares the same functionality. For instance, form inputs usually have a default and fluid style. While the functionality stays the same, the visual appearance changes.\n\nProvide a brief description of what the different styles are. Beneath the description, include a table detailing the style, appearance, and use case of each style. Then, add an image below the table to show the visual difference.\n--\x3e\n\nExample:\n\nThere are two styles of number inputs: default and fluid. They share the same\nfunctionality but look visually different, influencing where to use them.\n\n| Style   | Appearance                                                                                                               | Use case                                                                                                                                         |\n| ------- | ------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------ |\n| Default | A traditional style where the label is positioned outside and above the input field.                                     | Use when white space is needed between input components or in productive moments where space is at a premium, and smaller components are needed. |\n| Fluid   | An alternative style where the label is placed inside of the input field and is stacked inline with the user input text. | Use in expressive moments, fluid forms, contained spaces, or attached to complex components, like a toolbar.                                     |\n\n<Row>\n<Column colLg={8}>\n\n![A default style input is shown on the left and fluid style is on the right.](images/number-input-usage-11.png)\n\n</Column>\n</Row>\n\n<Caption>\n  A default style input is shown on the left and fluid style is on the right.\n</Caption>\n\n### Sizing (optional)\n\n\x3c!--\nList out any component sizes that are available and provide some guidance about how to choose the best size for the use case. Other topics that may be covered here include considerations around maximum heights, maximum widths, and responsive resizing.\n--\x3e\n\nExample:\n\nThere are four responsive modal sizes: xs, small, default, large. Choose a size\nthat works best for the amount of modal content you have. Modals with short\nmessages should use a xs or small modal to avoid long single lines; for complex\ncomponents, like data table the default or large modal will be more\naccommodating.\n\n### Alignment (optional)\n\n\x3c!--\nThe alignment section focuses primarily on padding and alignment within the component. This is sometimes confused with the placement section, which focuses on where the component is typically placed within the broader context of the page layout (such as in a side panel or modal).\n\nIn the accordion example below, there are H4 headers for Flush alignment and Icon alignment. These headers will vary from component to component.\n--\x3e\n\n#### Flush alignment\n\nUse flush alignment when designing within smaller spaces on a page such as side\npanels or sidebars to achieve better text alignment with other content. Flush\nalignment is also used to help avoid converging rule lines between components\nthat are close to each other on a page.\n\n<Row>\n<Column colLg={8}>\n\n![accordion flush alignment](images/accordion-flush.png)\n\n</Column>\n</Row>\n\nFlush alignment places the row title and chevron icons with 0px padding, keeping\nthem flush to the rule dividers. For hover and focus interactive states, the\nleft and right padding receives an additional 16px padding.\n\n<Row>\n<Column colLg={8}>\n\n![accordion flush alignment spec](images/accordion-flush-spec.png)\n\n</Column>\n</Row>\n\n#### Icon alignment\n\nBy default the chevron icon is placed on the `end` side of the header. This\nallows for the title on the `start` side to align with other type elements in\nthe layout, which is the preferred alignment scenario.\n\nHowever, in some rare scenarios, the accordion may be modified to place the icon\nin `start` front of the title to function more like a tree. Most instances\nshould use the default `end` alignment, especially for any pure content or\ndocumentation purposes. Icon placement in accordions should be consistent\nthroughout your page and should not alternate.\n\n\x3c!--\nA Do/Don’t image is often useful for the alignment section. In the accordion example, two ‘Do’ images are provided.\n--\x3e\n\n<DoDontRow>\n<DoDont\ntype="do"\ncolMd={4} colLg={4}\ncaption="In most cases, use the default end icon alignment to keep accordion text aligned with other content on the page.">\n\n![Do use the default end icon alignment to keep accordion text aligned with other content on the page.](./images/accordion-alignment-do.png)\n\n</DoDont>\n<DoDont\ntype="do"\ncolMd={4} colLg={4}\ncaption="In rare cases, you can place icons on the start side for tree like functionality.">\n\n![Do place icons on the start side for tree like functionality.](./images/accordion-alignment-do-2.png)\n\n</DoDont>\n</DoDontRow>\n\n### Placement\n\n\x3c!--\nThe placement section focuses on where the component is typically placed within the broader context of the page layout.\n\nStart with an explanation on where it is typically placed in product UIs: main page content, a container, side panel, modal, etc. If placement impacts the component margins be sure to note this as well.\n--\x3e\n\nExample: Accordions can be placed with main page content or placed inside of a\ncontainer such as a side panel or tile.\n\n\x3c!--\nIncluding placement images helps readers understand how a component should appear in main body content, a side panel, a modal, etc.\n\nTips:\n- Create simplified illustrations of placement examples using the illustration library.\n- Try for 1, 2, or 4 examples. If you only have 3 examples, keep the images on a 2x2 grid and leave the 4th quadrant empty.\n--\x3e\n\n<Row>\n<Column colLg={12} colMd={12} colSm={4}>\n<ArtDirection>\n\n![accordion placement](images/accordion-placement-2m.png)\n\n![accordion placement](images/accordion-placement-2.png)\n\n![accordion placement](images/accordion-placement-2.png)\n\n</ArtDirection>\n</Column>\n</Row>\n\n\x3c!--\nOptional: You may add additional H4 sections to discuss how a component appears alongside other components, groups of the same component, and within the grid.\n--\x3e\n\n#### Grid placement\n\nWhen placing an accordion on the 2x Grid with its default alignment, the\nindented title and content align to the grid columns, and the top and bottom\nborders hang into the gutter. However, the accordion can be modified to have a\n[flush alignment](https://carbondesignsystem.com/components/accordion/usage#alignment)\nwhere the titles and content are instead flush aligned with the top and bottom\nborders having 0px padding.\n\n<Row>\n<Column colLg={8}>\n\n![accordion grid placement](images/accordion-placement-1.png)\n\n</Column>\n</Row>\n\n## Content\n\n### Main elements\n\n\x3c!--\nIdentify the content elements within the component, for example, title, label, placeholder text, links. Use H4s for the element names and provide guidelines underneath for each element.\n\nBriefly explain any particular rules such as phrase structure, word limits, and character limits. Where there\'s more than one rule, use bullets to list out the multiple rules for ease of reading. If necessary, refer out to main content guidelines for more detailed information, for example, capitalization, or recommended action labels.\n\nSee [Checkbox](https://www.carbondesignsystem.com/components/checkbox/usage#content) and [Modal](https://www.carbondesignsystem.com/components/modal/usage#content) for additional examples.\n--\x3e\n\n#### Label\n\n- The label should be as brief as possible while still being clear and\n  descriptive.\n- Each label should be wrapped in a\n  [role heading](https://www.w3.org/TR/wai-aria-practices-1.1/#wai-aria-roles-states-and-properties)\n  (h1-h6) that is appropriate for the information architecture of the page.\n\n#### Body copy\n\n- Content inside of a section may be split into paragraphs and include\n  sub-headers if needed.\n\n### Overflow content\n\n\x3c!--\nExplain how overflow content should be handled.\n--\x3e\n\nWhen the accordion content is longer than the viewport the whole accordion\nshould vertically scroll. Content should not scroll inside of an individual\npanel. Content should never scroll horizontally in an accordion.\n\n### Further guidance\n\n\x3c!--\nThis section should be the same in every component usage page.\n--\x3e\n\nFor further content guidance, see Carbon\'s\n[content guidelines](<[https://www.carbondesignsystem.com/guidelines/content/general](https://www.carbondesignsystem.com/guidelines/content/general)>).\n\n## Behaviors\n\n### States\n\n\x3c!--\nThe states section is one of the most complex and varied sections, but here are a few tips:\n\n- Make a distinction between main states (i.e. collapsed and expanded) and interactive states (i.e. focus, hover, and disabled).\n- Include a table that describes the user tasks associated with each state. Do not italicize states in the table.\n- When possible, include images showing the states, with captions. However, avoid overwhelming the reader with too many images, which can happen when the states section is complex or there are variants.\n- Link out to style tab for more details with the phrase ‘See the style tab for more details.’\n\nTake a look at [content switcher](/components/content-switcher/usage/#behaviors), our most recent, best example:\n--\x3e\n\n### States\n\nContent switcher\'s default-enabled state includes two types—**selected** and\n**unselected** with the selected state using a high contrast color. Other\ninteractive states are **hover**, **focus**, and **disabled**. Learn more about\nstates on the\n[Style](https://carbondesignsystem.com/components/content-switcher/style) tab.\n\n| State      | When to use                                                                                                                                                                  |\n| ---------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Unselected | When the first content tab is automatically selected.                                                                                                                        |\n| Selected   | When the content tab(s) after the first one is unselected.                                                                                                                   |\n| Hover      | When the user hovers the cursor over an unselected content tab.                                                                                                              |\n| Focus      | When the user presses the right or left arrow, or clicks on the content tab, it becomes focused, indicating the user has successfully navigated to the targeted content tab. |\n| Disabled   | When a user cannot interact with the entire content switcher or a content tab. The entire content switcher or the content tabs could be temporarily inactive or unavailable. |\n\n<Row>\n<Column colLg={8}>\n\n![Selected and unselected content switcher states.](images/contentswitcher-usage-4.png)\n\n</Column>\n</Row>\n\n<Caption>\n  Example shows selected and unselected content switcher states.\n</Caption>\n\nFor detailed visual information about the various interactive states for this\ncomponent, see the [Style](/components/content-switcher/style) tab.\n\nThe accordion component has two main states: **collapsed** and **expanded**. The\nchevron icon at the end of the accordion indicates which state the accordion is\nin. The chevron points down to indicate collapsed and up to indicate expanded.\n\nAccordions begin by default in the collapsed state with all content panels\nclosed. Starting in a collapsed state gives the user a high level overview of\nthe available information.\n\n<Row>\n<Column colLg={8}>\n\n![accordion states](images/accordion-state-1.png)\n\n</Column>\n</Row>\n\nA user can then independently expand each section of the accordion allowing for\nmultiple sections to be open at once.\n\n<Row>\n<Column colLg={8}>\n\n![multiple sections expanded](images/accordion-state-2.png)\n\n</Column>\n</Row>\n\nIn addition to the collapsed and expanded states, accordions also have\ninteractive states for focus, hover, and disabled. See the\n[style tab](/components/accordion/style) for more details.\n\n<Row>\n<Column colLg={8}>\n\n![accordion interactives states](images/accordion-state-3.png)\n\n</Column>\n</Row>\n\n### Interactions\n\n\x3c!--\nInclude all possible interactions with the component, including:\n\n- Mouse\n- Keyboard\n--\x3e\n\n#### Mouse\n\nUsers can trigger a state change by clicking on the chevron or clicking anywhere\nin the header area.\n\n<Row>\n<Column colLg={8}>\n\n![accordion click targets](images/accordion-click-target.png)\n\n</Column>\n</Row>\n\n#### Keyboard\n\nUsers can navigate between accordion headers by pressing `Tab` or `Shift-Tab`.\nUsers can trigger a state change by pressing `Enter` or `Space` while the header\narea has focus. For additional keyboard interactions, see the\n[accessibility tab](/components/accordion/accessibility#keyboard-interactions).\n\n### Validation\n\n\x3c!--\nInclude any guidelines for data validation and accompanying messaging. See [Form](https://www.carbondesignsystem.com/components/form/usage/#validation-and-errors) for an example.\n--\x3e\n\n### Responsive behavior\n\n\x3c!--\nInclude details about how the component should behave in responsive situations.\n--\x3e\n\n### Default selection\n\n\x3c!--\nCover guidance around default settings and provide rationale. See [Form](https://www.carbondesignsystem.com/components/form/usage/#default-values) and [Radio button](https://www.carbondesignsystem.com/components/radio-button/usage/#default-selection) for examples.\n--\x3e\n\n### Clickable areas\n\n\x3c!--\nProvide details about the clickable areas of the component.\n--\x3e\n\n### Loading\n\n\x3c!--\nIf applicable, use this section to cross reference to the specific loading type in the [Loading component](https://www.carbondesignsystem.com/patterns/loading-pattern) and/or the [Loading pattern](https://www.carbondesignsystem.com/patterns/loading-pattern/).\n--\x3e\n\n## Modifiers (optional)\n\n\x3c!--\nThe modifiers section shows different ways of styling the component. The most common modifiers documented here are adding icons and dividers to a component.\n\nIcon examples:\n- [Button](https://carbondesignsystem.com/components/button/usage/#buttons-with-icons)\n- [Content switcher](https://carbondesignsystem.com/components/content-switcher/usage/#content-switcher-with-icons)\n- [Tabs](https://carbondesignsystem.com/components/tabs/usage/#tabs-with-icons)\n\nDivider examples:\n- [Contained list](https://carbondesignsystem.com/components/contained-list/usage/#inset-row-dividers)\n- [Menu](https://carbondesignsystem.com/components/menu/usage/#modifiers)\n\nAccordion does not have modifiers. Below is an example from content switcher.\n--\x3e\n\n### Content switcher with icons\n\nUse icons instead of label text to indicate alternative views of similar or\nrelated content. Icon content switchers are often used when space is limited or\nwhen icons can adequately describe the sections (for example, a list view versus\na card view).\n\n<Row>\n<Column colLg={8}>\n\n![Example shows the content switcher with icons only](images/content-switcher-icon.png)\n\n</Column>\n</Row>\n\n<DoDontRow>\n  <DoDont type="do" caption="Do use consistent icon or text content tabs">\n\n![Do use consistent icon or text content tabs](images/content-switcher-usage-modifier-do.png)\n\n  </DoDont>\n  <DoDont type="dont" caption="Do not mix icon and text content tabs">\n\n![Do not mix icon and text content tabs](images/content-switcher-usage-modifier-dont.png)\n\n  </DoDont>\n</DoDontRow>\n\n## AI presence (optional)\n\n\x3c!--\nAdd this section if the component has a modification that takes on the AI visual styling when the AI label is present.\n\nProvide a brief description of what the AI visual styling modifications are.\n\nBeneath the description, include an image to show the visual. In some cases, you may need to add the tab image component if it has additional styling, for example, default and fluid styles.\n--\x3e\n\nExample:\n\nNumber input has a modification that takes on the AI visual styling when the AI\nlabel is present in the input. The AI variant of number input functions the same\nas the normal version except with the addition of the AI label which is both a\nvisual indicator and the trigger for the explainability popover.\n\nFor more information on designing for AI, see the\n[Carbon for AI guidelines](https://carbondesignsystem.com/guidelines/carbon-for-ai/).\n\n<Row>\n<Column colLg={8}>\n\n<Tabs>\n\n<Tab label="Default">\n\n![Default number input AI presence example](images/number-input-style-ai-default.png)\n\n</Tab>\n\n<Tab label="Fluid">\n\n![Fluid number input AI presence example](images/number-input-style-ai-fluid.png)\n\n</Tab>\n\n</Tabs>\n\n</Column>\n</Row>\n\n### Revert to AI\n\n\x3c!--\nProvide a brief description of the "revert to AI" functionality after you have overridden the AI-suggested content of the component.\n\nBeneath the description, include an image to show the visual. In some cases, you may need to add the tab image component if it has additional styling, for example, default and fluid styles.\n--\x3e\n\nExample:\n\nA number input can toggle between the AI variant and the non-AI variant\ndepending on the user’s interaction. If the user manually overrides the\nAI-suggested content then the input will change from the AI variant to the\nnon-AI variant. Once edited, the user should still be able to switch back to the\ninitially AI generated content via a revert to AI button.\n\n<Row>\n<Column colLg={8}>\n\n<Tabs>\n\n<Tab label="Default">\n\n![Default number input AI revert example](images/number-input-usage-13.png)\n\n</Tab>\n\n<Tab label="Fluid">\n\n![Fluid number input AI revert example](images/number-input-usage-15.png)\n\n</Tab>\n\n</Tabs>\n\n</Column>\n</Row>\n\n## Related\n\n\x3c!--\nList all components or patterns you referenced throughout the docs page here and explain why these components are related. For example, if you provide alternative components, explain how their usage differs. Some of this content may be similar to the \'What not to use\' section.\n--\x3e\n\nThe following components are additional ways to organize content. Consider the\ntype and length of content you are working with when choosing a content\ncontainer. Longer form content may benefit from tabs or a content switcher while\nvery short content might do better in a structured list.\n\n- [Content switchers](/components/content-switcher/usage) allow users to toggle\n  between two or more content sections within the same space on the screen.\n- [Progress indicators](/components/progress-indicator/usage) guide users\n  through any linear, multistep task by showing the user their completed,\n  current, and future steps.\n- [Structured lists](/components/structured-list/usage) group content that is\n  similar or related, such as terms and definitions.\n- [Tabs](/components/tabs/usage) organize related content by allowing the user\n  to navigate between groups of information that appear within the same context.\n- [Tree view](/components/tree-view/usage) is a hierarchical structure that\n  provides nested levels of navigation.\n\n## References\n\n\x3c!--\nInclude any research, citations, books or articles that you found helpful. Ensure that you select reputable, stable external links. Nielsen Norman is one adequate source.\n--\x3e\n\n- Hoa Loranger,\n  [Accordions Are Not Always the Answer for Complex Content on Desktops](https://www.nngroup.com/articles/accordions-complex-content/)\n  (Nielsen Norman Group, 2014)\n\n## Feedback\n\n\x3c!--\nThis section should be the same on every usage tab.\n--\x3e\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n')),"\n",a.createElement(n.h3,null,"Usage template: for components with multiple variants"),"\n",a.createElement(n.p,null,"Use this template for documenting components that have multiple variants. You\ncan see this template in use for\n",a.createElement(n.a,{href:"https://carbondesignsystem.com/components/dropdown/usage/"},"Dropdown"),",\n",a.createElement(n.a,{href:"https://carbondesignsystem.com/components/button/usage/"},"Button"),", and\n",a.createElement(n.a,{href:"https://carbondesignsystem.com/components/notification/usage/"},"Notification"),"."),"\n",a.createElement(n.p,null,"Follow this template when possible; however, for components with more complex\nvariants, it may be necessary to adapt the structure to more effectively\norganize and group variant content. See the\n",a.createElement(n.a,{href:"https://carbondesignsystem.com/components/tile/usage/"},"Tile")," component for an\nexample of this approach."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-markdown"},'---\ntitle: Component name\ndescription: Explains what the component is in one or two sentences.\ntabs: [\'Usage\', \'Style\', \'Code\', \'Accessibility\']\n---\n\n<PageDescription>\n\n\x3c!--\nExplains what the component is in one or two sentences.\n--\x3e\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Live demo</AnchorLink> <AnchorLink>Overview</AnchorLink>\n<AnchorLink>Formatting</AnchorLink> <AnchorLink>Content</AnchorLink>\n<AnchorLink>Universal behaviors</AnchorLink> <AnchorLink>Component variant\nname</AnchorLink> <AnchorLink>Modifiers</AnchorLink> <AnchorLink>AI\npresence</AnchorLink> <AnchorLink>Related</AnchorLink>\n<AnchorLink>References</AnchorLink> <AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Live demo\n\n\x3c!--\nInclude live demo here.\n--\x3e\n\n### Accessibility testing status\n\n\x3c!--\nInclude the four resource cards here.\n--\x3e\n\n## Overview\n\n\x3c!--\nInclude a paragraph or two that describes the primary use cases for the component and details about how it helps the user achieve any tasks.\n\nDo not directly copy the "Page Description" in this section.\n--\x3e\n\n### When to use\n\n\x3c!--\nInclude examples for when to use this component and how it addresses the use case / solves a problem for the user.\n--\x3e\n\n_Use a dialog to request information that is preventing the system from\ncontinuing a user-initiated process._\n\n### When not to use (optional)\n\n\x3c!--\nIf there are two similar components that are used for different use cases, spell that out here and explain which component to use for each use case.\n--\x3e\n\nExample: _Consider using a select dropdown if most of your experience is form\nbased or frequently used on mobile platforms. The native select works more\neasily with a native form when submitting data and is also easier to use on a\nmobile platform._\n\n### Variants\n\n\x3c!--\nVariants are defined as variations of a component with significant visual or interaction differences, such as a primary button versus a secondary button or a ghost button. Minor visual differences, such as optional decorative icons, should be placed under the "Modifiers" section.\n\nInclude a table with variants of components and their purpose. Include links on the variant names to the variants sections below. See the [Modal](https://carbondesignsystem.com/components/modal/usage/#modal-variants) component for an example.\n\nDo link each variant name in the table to its respective H2 section on the page. Do not italicize or semi-bold the variant name in the table.\n--\x3e\n\n### Feature flags (optional)\n\n\x3c!--\nThis section is only applicable to components that have visual feature flags. See the [Tile](https://carbondesignsystem.com/components/tile/usage/#feature-flags) and [Structured list](https://carbondesignsystem.com/components/structured-list/usage/#feature-flags) components feature flag sections for an example.\n\nIf displaying this section, remember to add a blue tag at the top of the Usage tab above the page description that says "Feature flag".\n\nInclude a brief description of feature flags, link to the components Code tab for code-specific information, and list out the main specific feature flags that are available for the component.\n\nInclude the tab image component to display the visual difference when the flag is enabled or disabled.\n--\x3e\n\nExample:\n\n<Row>\n<Column colLg={8}>\n<Tabs>\n\n<Tab label="Flag enabled">\n\n![Interactive tiles with the feature flag enabled](images/tile-usage-feature-flag-enabled.png)\n\n</Tab>\n\n<Tab label="Flag disabled">\n\n![Interactive tiles with the feature flag disabled](images/tile-usage-feature-flag-disabled.png)\n\n</Tab>\n\n</Tabs>\n\n</Column>\n</Row>\n\n## Formatting\n\n### Anatomy\n\n\x3c!--\nThe anatomy section has a set format and includes an example component with numbered callouts to each of the component elements. A list below provides the name of the element in semi-bold and explains its purpose. Be sure to note if the element is optional.\n\nSee the [Contained list](https://carbondesignsystem.com/components/contained-list/usage/#anatomy) component for an example.\n--\x3e\n\n### Styling (optional)\n\n\x3c!--\nAdd this section if a component has different visual stylings but still shares the same functionality. For instance, form inputs usually have a default and fluid style. While the functionality stays the same, the visual appearance changes.\n\nProvide a brief description of what the different styles are. Beneath the description, include a table detailing the style, appearance, and use case of each style. Then, add an image below the table to show the visual difference.\n\nNote: It may vary where to place this section depending on the complexity of the content. Place this section underneath the Formatting H2 following the Anatomy H3 if possible. However, if it makes more sense to do so, place this section under the component variant H2.\n--\x3e\n\nExample:\n\nThere are two styles of text inputs: default and fluid. They share the same\nfunctionality but look visually different, influencing where to use them.\n\n| Style   | Appearance                                                                                                               | Use case                                                                                                                                         |\n| ------- | ------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------ |\n| Default | A traditional style where the label is positioned outside and above the input field.                                     | Use when white space is needed between input components or in productive moments where space is at a premium, and smaller components are needed. |\n| Fluid   | An alternative style where the label is placed inside of the input field and is stacked inline with the user input text. | Use in expressive moments, fluid forms, contained spaces, or attached to complex components, like a toolbar.                                     |\n\n<Row>\n<Column colLg={8}>\n\n<Tabs>\n\n<Tab label="Default">\n\n![Default text input in the default style](images/text-input-text-default-style.png)\n\n</Tab>\n\n<Tab label="Fluid">\n\n![Fluid text input in the fluid style](images/text-input-text-fluid-style.png)\n\n</Tab>\n\n</Tabs>\n\n</Column>\n</Row>\n\n### Sizing (optional)\n\n\x3c!--\nList out any component sizes that are available and provide some guidance about how to choose the best size for the use case. We typically semi-bold the individual sizes in the sentence. Other topics that may be covered here include considerations around maximum heights, maximum widths, and responsive resizing.\n--\x3e\n\nExample:\n\nThere are four responsive modal sizes: **xs**, **small**, **default**, and\n**large**. Choose a size that works best for the amount of modal content you\nhave. Modals with short messages should use a xs or small modal to avoid long\nsingle lines; for complex components, like data table the default or large modal\nwill be more accommodating.\n\n### Alignment (optional)\n\n\x3c!--\nConsider the relationship with other items that are the same. How do they sit in groups? What is their juxtaposition. For example:\n\n- Checkbox, radio button—what is their relationship horizontally and vertically?\n- Notifications—how do they stack?\n- Button—what happens when there\'s more than one?\n\nAlignment content is covered in the Structure section of the Style tab, so consider the relationship between the two tabs and include a cross-reference if necessary.\n--\x3e\n\nExample:\n\nInside of a modal, body copy, including titles, have a 20% margin-right.\nHowever, form inputs and other components expand the full width of a modal\nwindow.\n\n### Placement\n\n\x3c!--\nDiscuss placement of the component in a broader context, that is:\n\n- alongside other components\n- within the grid\n\nYou may want to include a link here to the Structure section of the Style tab.\n--\x3e\n\nExample:\n\nThe checkbox component is often used in forms. Forms can be placed on a full\npage, in a modal or in a side panel. A checkbox can also be used for agreeing to\nterms and conditions or to filter information.\n\n## Content\n\n### Main elements\n\n\x3c!--\nIdentify the content elements within the component, for example, title, label, placeholder text, body copy, links. Use H4s for the element names and provide guidelines underneath for each element.\n\nBriefly explain any particular rules such as phrase structure, word limits, and character limits. Where there\'s more than one rule, use bullets to list out the multiple rules for ease of reading. If necessary, refer out to main content guidelines for more detailed information, for example, capitalization, recommended action labels.\n\nSee the [Checkbox](https://carbondesignsystem.com/components/checkbox/usage/#content) and [Modal](https://carbondesignsystem.com/components/modal/usage/#content) components for examples.\n--\x3e\n\n### Overflow content (optional)\n\n\x3c!--\nExplain how overflow content should be handled.\n--\x3e\n\nExample:\n\nWhen the modal content is longer than the modal height then the body section\nshould scroll vertically with the header and footer remaining fixed in place.\nThe content should visibly fade at the end of the modal body area to indicate\nthere is additional content out of view.\n\n### Further guidance\n\nFor further content guidance, see Carbon\'s\n[content guidelines](https://carbondesignsystem.com/guidelines/content/overview/).\n\n## Universal behaviors\n\n\x3c!--\nIf there are any *universal* behaviors that apply to all variants listed in the variants table above, include them here. For example, the modal component has a heading here for "Trap focus" as this applies to all modal variants.\n\nWhere behaviors are *unique* to each component variant, include them in the next section, which goes into detail about each variant.\n\nInclude the following line to introduce the universal behaviors:\n--\x3e\n\nExample:\n\nThe behaviors listed in this section are universal across all of the variants.\nFor behaviors that are unique to each variant, see each of the component variant\nsections below.\n\n\x3c!--\nChoose from this list of possible behaviors that are *universal* across all variants, and include them here as H3 headings.\n--\x3e\n\n### States\n\n\x3c!--\nIf there are states associated with a component, include them here in a sentence. Do semi-bold each state in the sentence. Include a table below the sentence with each component state and when to use them. Do not italicize or semi-bold the state name in the table. Do not include an image here; instead, link to the Style tab for more information.\n--\x3e\n\nExample:\n\nThe accordion component has two main states: **collapsed** and **expanded**. The\nchevron icon at the end of the accordion indicates which state the accordion is\nin. The chevron points down to indicate collapsed and up to indicate expanded.\nFor more For detailed visual information about the various states for this\ncomponent, see the\n[Style](https://carbondesignsystem.com/components/accordion/style/#interactive-states)\ntab.\n\n\x3c!--\nThe word "Style" should be hyperlinked and capitalized, because it is the name of the tab page.\n--\x3e\n\n### Interactions\n\n\x3c!--\nInclude all possible interactions with the component, including:\n\n- Mouse\n- Keyboard\n\nSee the [Content switcher](https://carbondesignsystem.com/components/content-switcher/usage/#interactions) component for an example.\n--\x3e\n\n### Validation (optional)\n\n\x3c!--\nInclude any guidelines for data validation and accompanying messaging. See the [Text input](https://carbondesignsystem.com/components/text-input/usage/#validation) component for an example.\n--\x3e\n\n### Responsive behavior\n\n\x3c!--\nInclude details about how the component should behave in responsive situations.\n--\x3e\n\n### Default selection (optional)\n\n\x3c!--\nCover guidance around default settings and provide rationale. See the [Form](https://carbondesignsystem.com/components/form/usage/#default-values) for an example.\n--\x3e\n\n### Clickable areas\n\n\x3c!--\nProvide details about the clickable areas of the component.\n--\x3e\n\n### Loading (optional)\n\n\x3c!--\nIf applicable, use this section to cross reference to the specific loading variant in the [Loading component](https://carbondesignsystem.com/components/loading/usage/) and/or the [Loading pattern](https://carbondesignsystem.com/patterns/loading-pattern/).\n--\x3e\n\n## Component variant name\n\n\x3c!--\nRename this H2 heading with the first component variant name, and include as many H2 sections as you have variants.\n\nThis section describes each of the component variants listed in the "Variants" table in the "Overview" section, and highlights any behavior that is *unique* to the component variant. Cover the topics from the "Universal behaviors" section above, as needed.\n\nAnd again, if any behavior is *universal* to the component, cover that in the "Universal behaviors" section above.\n\nFor examples of how to lay out this kind of information, see the [Dropdown](https://carbondesignsystem.com/components/dropdown/usage/#dropdown) component.\n--\x3e\n\n## Modifiers\n\n\x3c!--\nThe modifiers section shows different ways of styling the component. Here are some examples:\n\n- adding a non-interactive icon to a [Contained list](https://carbondesignsystem.com/components/contained-list/usage/#non-interactive-icons)\n- adding dividers to a [Menu](https://carbondesignsystem.com/components/menu/usage/#modifiers)\n- styling a [Dropdown](https://carbondesignsystem.com/components/dropdown/usage/#modifiers) to appear inline with other content\n- using high and low contrast styles for [Notifications](https://carbondesignsystem.com/components/notification/usage/#high-and-low-contrast)\n--\x3e\n\n## AI presence (optional)\n\n\x3c!--\nAdd this section if the component has a modification that takes on the AI visual styling when the AI label is present.\n\nProvide a brief description of what the AI visual styling modifications are.\n\nBeneath the description, include an image to show the visual. In some cases, you may need to add the tab image component if it has additional styling, for example, default and fluid styles.\n--\x3e\n\nExample:\n\nText input and text area have a modification that takes on the AI visual styling\nwhen the AI label is present in the input. The AI variant functions the same as\nthe normal version except with the addition of the AI label which is both a\nvisual indicator and the trigger for the explainability popover.\n\nFor more information on designing for AI, see the\n[Carbon for AI](https://carbondesignsystem.com/guidelines/carbon-for-ai/)\nguidelines.\n\n<Row>\n<Column colLg={8}>\n\n<Tabs>\n\n<Tab label="Default">\n\n![Default text input and text area AI presence example](images/text-input-text-area-ai-presence-default.png)\n\n</Tab>\n\n<Tab label="Fluid">\n\n![Fluid text input and text area AI presence example](images/text-input-text-area-ai-presence-fluid.png)\n\n</Tab>\n\n</Tabs>\n\n</Column>\n</Row>\n\n### Revert to AI\n\n\x3c!--\nProvide a brief description of the "revert to AI" functionality after you have overridden the AI-suggested content of the component.\n\nBeneath the description, include an image to show the visual. In some cases, you may need to add the tab image component if it has additional styling, for example, default and fluid styles.\n--\x3e\n\nExample:\n\nThe text input and text area can toggle between the AI variant and the non-AI\nvariant depending on the user’s interaction. If the user manually overrides the\nAI-suggested content then the input will change from the AI variant to the\nnon-AI variant. Once edited, the user should still be able to switch back to the\ninitially AI generated content via a revert to AI button.\n\n<Row>\n<Column colLg={8}>\n\n<Tabs>\n\n<Tab label="Default">\n\n![Default text input and text area AI revert example](images/text-input-text-area-ai-revert.png)\n\n</Tab>\n\n<Tab label="Fluid">\n\n![Fluid text input and text area AI revert example](images/text-input-text-area-ai-revert-fluid.png)\n\n</Tab>\n\n</Tabs>\n\n</Column>\n</Row>\n\n## Related\n\n\x3c!--\nDid you reference other components or patterns? List them here.\n\nIf necessary, clarify any differences between this component and related components.\n--\x3e\n\n## References\n\n\x3c!--\nInclude links to any research, citations, books or articles that you found helpful.\n--\x3e\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n')),"\n",a.createElement(n.h3,null,"Style template: for components with one variant"),"\n",a.createElement(n.p,null,"The style template helps describe how a component with one variant looks,\nincluding visual specifications such as color, typography, structure, and size.\nThe template below provides example content from the\n",a.createElement(n.a,{href:"https://carbondesignsystem.com/components/accordion/style"},"Accordion")," style\ntab, along with many tips on best ways to compose content and images."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-markdown"},"---\ntitle: [Component name]\ndescription: [Explains what the component is in one or two sentences.]\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nThe following page documents visual specifications such as color, typography,\nstructure, and size.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Color</AnchorLink> <AnchorLink>Typography</AnchorLink>\n<AnchorLink>Structure</AnchorLink> <AnchorLink>Size</AnchorLink> <AnchorLink>AI\npresence</AnchorLink> <AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Color\n\n\x3c!--\n**Table**\nUse the table to document properties and color tokens for the enabled state. You can reference this [table generator](https://www.tablesgenerator.com/markdown_tables) for easy table creation.\n\n**Image**\nAdd an image that shows the enabled state of the component.\n\nThe following table shows an example from [Checkbox](https://carbondesignsystem.com/components/checkbox/style#color).\n--\x3e\n\n| Element            | Property         | Color token       |\n| ------------------ | ---------------- | ----------------- |\n| Group label        | text color       | `$text-secondary` |\n| Checkbox label     | text color       | `$text-primary`   |\n| Checkbox:unchecked | border           | `$icon-primary`   |\n|                    | background-color | transparent       |\n| Checkbox:checked   | background-color | `$icon-primary`   |\n|                    | checkmark        | `$icon-inverse`   |\n| Helper text        | text color       | `$text-secondary` |\n\n<Row>\n<Column colLg={8}>\n\n![Checkbox states](images/checkbox-style-1.png)\n\n</Column>\n</Row>\n\n### Interactive state color\n\n\x3c!--\n**Table**\nUse the table to document properties and color tokens for interactive states. Begin the table with the State column, not the Element column; this helps users scan faster and better reference accompanying images, which are also organized by state. You can reference this [table generator](https://www.tablesgenerator.com/markdown_tables) for easy table creation.\n\n**Image**\nAdd an image that shows all listed states in the table. The states are typically laid out in a grid.\n\nThe following table shows an example from [Checkbox](https://carbondesignsystem.com/components/checkbox/style#interactive-states).\n--\x3e\n\n| State     | Element         | Property   | Color token        |\n| --------- | --------------- | ---------- | ------------------ |\n| Focus     | Checkbox        | border     | `$focus`           |\n| Disabled  | Label           | text color | `$text-disabled`   |\n|           | Checkbox        | border     | `$icon-disabled`   |\n|           |                 | background | `$icon-disabled`   |\n| Read-only | Label           | text color | `$text-primary`    |\n|           | Checkbox        | border     | `$icon-disabled`   |\n|           |                 | inner fill | `$icon-primary`    |\n| Error     | Label           | text color | `$text-primary`    |\n|           | Checkbox        | border     | `$support-error`   |\n|           | Error message   | text color | `$text-error`      |\n|           | Error icon      | svg        | `$support-error`   |\n| Warning   | Label           | text color | `$text-primary`    |\n|           | Checkbox        | border     | `$icon-primary`    |\n|           | Warning message | text color | `$text-primary`    |\n|           | Warning icon    | svg        | `$support-warning` |\n|           |                 | inner fill | `$black`           |\n\n<Row>\n<Column colLg={12}>\n\n![Checkbox interactive states](images/checkbox-style-2.png)\n\n</Column>\n</Row>\n\n## Typography\n\n\x3c!--\nBegin this section with any brief content guidelines. Link out to additional guidelines if needed. No images are required for this section.\n\n*Table*\nUse a table to document font-size, font-weight, and type tokens in this section. You can reference this [table generator](https://www.tablesgenerator.com/markdown_tables) for easy table creation.\n\nThe following table shows an example from [Checkbox](https://carbondesignsystem.com/components/checkbox/style#typography).\n--\x3e\n\nCheckbox labels and group labels should be sentence case, with only the first\nword in a phrase and any proper nouns capitalized. Checkbox labels and group\nlabels should not exceed three words.\n\n| Element         | Font-size (px/rem) | Font-weight   | Type token         |\n| --------------- | ------------------ | ------------- | ------------------ |\n| Group label     | 12 / 0.75          | Regular / 400 | `$label-01`        |\n| Checkbox label  | 14 / 0.875         | Regular / 400 | `$body-compact-01` |\n| Helper text     | 12 / 0.75          | Regular / 400 | `$helper-text-01`  |\n| Error message   | 12 / 0.75          | Regular / 400 | `$label-01`        |\n| Warning message | 12 / 0.75          | Regular / 400 | `$label-01`        |\n\n## Structure\n\n\x3c!--\n*Table*\nBegin the structure section with a table to document states, spacing, and any other component-specific configurations. You can reference this [table generator](https://www.tablesgenerator.com/markdown_tables) for easy table creation.\n\n*Images*\nAdd supporting images to this section, with at least one image showing structure and another showing spacing measurements. Images should be accompanied by a descriptive caption and relate to the spec charts. Note we use the `image--fixed` markdown component in the Structure section to maintain size accuracy.\n\n*Modifiers*\nIf you need to document additional ways of styling a component, add h3 sections under Structure as needed.\n\nThe following content shows example documentation from [Checkbox](https://carbondesignsystem.com/components/checkbox/style#structure), which has no variants and therefore does not need any h3 headers.\n--\x3e\n\n| Element        | Property       | px / rem | Spacing token |\n| -------------- | -------------- | -------- | ------------- |\n| Checkbox       | height & width | 16px     | –             |\n|                | border         | 1px      | –             |\n| Checkbox:focus | border         | 2px      | –             |\n|                | border inset   | 1px      | –             |\n| Group label    | margin-bottom  | 8 / 0.5  | `$spacing-03` |\n| Checkbox label | padding-left   | 8 / 0.5  | `$spacing-03` |\n| Checkbox item  | margin-bottom  | 4 / 0.25 | `$spacing-02` |\n\n<div className=\"image--fixed\">\n\n![Structure and spacing measurements for a checkbox group](images/checkbox-style-3.png)\n\n</div>\n\n<Caption fullwidth>\n  Structure and spacing measurements for a checkbox group | px / rem\n</Caption>\n\n<div className=\"image--fixed\">\n\n![Structure and spacing measurements for vertical and horizontal checkbox groupings](images/checkbox-style-4.png)\n\n</div>\n\n<Caption fullwidth>\n  Structure and spacing measurements for vertical and horizontal checkbox\n  groupings | px / rem\n</Caption>\n\n## Size\n\n\x3c!--\n**Body**\nUsing body copy below the header, cross-link this to the size section in the usage tab, which is where you should provide guidance about how to choose the best size for a given use case.\n\n*Table*\nIn the size section, provide a table of component size names and height.\n\n**Image**\nEach size listed in the table should be included in the image, typically stacked horizontally or vertically. Note we use the `image--fixed` markdown component in the Size section to maintain size accuracy.\n\nIf a component does not have sizes (i.e. Checkbox) then you can skip this section. The following shows an example from [Tag](https://carbondesignsystem.com/components/tag/style#size).\n--\x3e\n\nThere are three tag sizes: small, medium, and large. See\n[sizing](/components/tag/usage#sizing) on the usage tab for more information\nabout specific use cases for each tag size.\n\n| Element   | Size        | Height (px/rem) |\n| --------- | ----------- | --------------- |\n| Container | Small (sm)  | 18 / 1.125      |\n|           | Medium (md) | 24 / 1.5        |\n|           | Large (lg)  | 32 / 2          |\n\n<div className=\"image--fixed\">\n\n![Small, medium, and large sizes of tag](images/tag-style-size.png)\n\n</div>\n\n<Caption>Small, medium, and large sizes of tag</Caption>\n\n<Row>\n<Column colLg={8}>\n\n![Button sizes](images/button_usage_3.png)\n\n</Column>\n</Row>\n\n## AI presence\n\n\x3c!--\n**Body**\nInclude any content to help define the scope of the AI style in the component. Then add a link to the Carbon for AI guidelines page so the user can learn more about the AI styling.\n\n**Table**\nProvide a table of any AI specific color tokens and elements used in the component. You do not need to repeat any tokens that are the same as the default version.\n\n**Images**\nShow the component with AI presence in an image. You only need to show the enabled and revert states.\n\nThe following content shows an example from (Checkbox)[https://carbondesignsystem.com/components/checkbox/style#ai-presence]\n--\x3e\n\nThe only style modification an AI version of the checkbox has is the addition of\nthe slug. All other tokens in the component remain the same as the non-AI\nvariants.\n\nFor more information on the AI style elements, see the\n[Carbon for AI](/guidelines/carbon-for-ai/) guidelines.\n\n| Element | Property | Token / Size |\n| ------- | -------- | ------------ |\n| AI slug | size     | mini         |\n\n<Row>\n<Column colLg={8}>\n\n![Structure and spacing measurements for checkbox with AI presence](images/checkbox-style-5.png)\n\n</Column>\n</Row>\n\n## Feedback\n\n\x3c!--\nInclude a request for feedback here.\n--\x3e\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n")),"\n",a.createElement(n.h3,null,"Style template: for components with multiple variants"),"\n",a.createElement(n.p,null,"This style template helps describe how a component with multiple variants look,\nincluding visual specifications such as color, typography, structure, and size.\nThe template below provides example content from the\n",a.createElement(n.a,{href:"https://carbondesignsystem.com/components/text-input/style"},"Text input")," style\ntab, along with many tips on best ways to compose content and images."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-markdown"},'---\ntitle: [Component name]\ndescription: [Explains what the component is in one or two sentences.]\ntabs: [\'Usage\', \'Style\', \'Code\', \'Accessibility\']\n---\n\n<PageDescription>\n\nThe following page documents visual specifications such as color, typography,\nstructure, size, and AI presence.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Color</AnchorLink> <AnchorLink>Typography</AnchorLink>\n<AnchorLink>Structure</AnchorLink> <AnchorLink>Size</AnchorLink> <AnchorLink>AI\npresence</AnchorLink> <AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Color\n\n\x3c!--\nThe color section for components with multiple variants is subdivided by `H3` headings to create separate color specifications for each variant.\n--\x3e\n\n### Variant 1 color\n\n\x3c!--\n**Header**\nIn the h3 header, replace the text `Variant 1` with the variant’s name. For example: “Text input color.”\n\n**Table**\nUse the table to document properties and color tokens for the enabled state of the first variant. If a variant includes multiple styles (such as default and fluid) that share the same color tokens then those stylings can be presented together in the same table. You can reference this [table generator](https://www.tablesgenerator.com/markdown_tables) for easy table creation.\n\n**Images**\nAdd an image that shows the enabled state of the variant. If a variant includes multiple styles (such as default and fluid) that share the same color tokens, those stylings can be presented together as a tabbed or side-by-side image.\n\nThe following content is an example from text input: https://carbondesignsystem.com/components/text-input/style#color\n--\x3e\n\n| Element          | Property         | Color token         |\n| ---------------- | ---------------- | ------------------- |\n| Label            | text color       | `$text-secondary`   |\n| Field text       | text color       | `$text-primary`     |\n| Placeholder text | text color       | `$text-placeholder` |\n| Helper text      | text color       | `$text-helper`      |\n| Field            | background-color | `$field` \\*         |\n|                  | border-bottom    | `$border-strong` \\* |\n\n<Caption fullWidth>\n  \\* Denotes a contextual color token that will change values based on the layer\n  it is placed on.\n</Caption>\n\n<Row>\n<Column colLg={8}>\n\n<Tabs>\n\n<Tab label="Default">\n\n![Example of an enabled text input in the default style](images/text-input-style-color-fixed.png)\n\n</Tab>\n\n<Tab label="Fluid">\n\n![Example of an enabled text input in the fluid style](images/text-input-style-color-fluid.png)\n\n</Tab>\n\n</Tabs>\n\n</Column>\n</Row>\n\n#### Variant 1 interactive state color\n\n\x3c!--\n**Header**\nIn the h4 header, replace the text `Variant 1` with the variant’s name. For example: “Text input interactive states color.”\n\n**Table**\nUse a table to document properties and color tokens for the interactive states of the first variant. This table will have four columns, beginning with the State column, not the Element column; this helps users scan faster and better reference accompanying images, which are also organized by state. You can reference this [table generator](https://www.tablesgenerator.com/markdown_tables) for easy table creation.\n\n**Images**\nEach state listed in the table should be included in the image, typically laid out in a gridded image.\n\nThe following content is an example from text input: https://carbondesignsystem.com/components/text-input/style#text-input-color\n--\x3e\n\n| State     | Element              | Property      | Color token         |\n| --------- | -------------------- | ------------- | ------------------- |\n| Focus     | Field                | border        | `$focus`            |\n| Invalid   | Field                | border        | `$support-error`    |\n|           | Error message        | text color    | `$text-error`       |\n|           | Error icon           | svg           | `$support-error`    |\n| Warning   | Warning message      | text color    | `$text-primary`     |\n|           | Warning icon         | svg           | `$support-warning`  |\n| Disabled  | Field                | background    | `$field` \\*         |\n|           | Field (default)      | border-bottom | transparent         |\n|           | Field (fluid)        | border-bottom | `$border-subtle` \\* |\n|           | Field text           | text color    | `$text-disabled`    |\n| Read-only | Field (default)      | background    | transparent         |\n|           | Field (fluid)        | background    | `$field` \\*         |\n|           | Field text (default) | text color    | `$text-primary`     |\n|           | Field text (fluid)   | text color    | `$text-secondary`   |\n|           | Field                | border-bottom | `$border-subtle` \\* |\n\n<Caption fullWidth>\n  \\* Denotes a contextual color token that will change values based on the layer\n  it is placed on.\n</Caption>\n\n<Row>\n<Column colLg={12}>\n\n<Tabs>\n\n<Tab label="Default">\n\n![Examples of text input states in the default style](images/text-input-style-states-fixed.png)\n\n</Tab>\n\n<Tab label="Fluid">\n\n![Examples of text input states in the fluid style](images/text-input-style-states-fluid.png)\n\n</Tab>\n\n</Tabs>\n\n</Column>\n</Row>\n\n### Variant 2 color\n\n\x3c!--\nUse the same guidance as in the `Variant 1 color` section.\n\nThe following content is an example without additional styles.\n--\x3e\n\n| Element          | Property         | Color token         |\n| ---------------- | ---------------- | ------------------- |\n| Label            | text color       | `$text-secondary`   |\n| Field text       | text color       | `$text-primary`     |\n| Placeholder text | text color       | `$text-placeholder` |\n| Helper text      | text color       | `$text-helper`      |\n| Field            | background-color | `$field` \\*         |\n|                  | border-bottom    | `$border-strong` \\* |\n\n<Caption fullWidth>\n  \\* Denotes a contextual color token that will change values based on the layer\n  it is placed on.\n</Caption>\n\n<Row>\n<Column colLg={8}>\n\n![Examples of text area enabled state](images/text-area-style-1.png)\n\n</Column>\n</Row>\n\n#### Variant 2 interactive state color\n\n\x3c!--\nUse the same guidance as in the `Variant 1 interactive state color` section.\n\nThe following content is an example without additional styles.\n--\x3e\n\n| State     | Element              | Property      | Color token         |\n| --------- | -------------------- | ------------- | ------------------- |\n| Focus     | Field                | border        | `$focus`            |\n| Invalid   | Field                | border        | `$support-error`    |\n|           | Error message        | text color    | `$text-error`       |\n|           | Error icon           | svg           | `$support-error`    |\n| Warning   | Warning message      | text color    | `$text-primary`     |\n|           | Warning icon         | svg           | `$support-warning`  |\n| Disabled  | Field                | background    | `$field` \\*         |\n|           | Field (default)      | border-bottom | transparent         |\n|           | Field (fluid)        | border-bottom | `$border-subtle` \\* |\n|           | Field text           | text color    | `$text-disabled`    |\n| Read-only | Field (default)      | background    | transparent         |\n|           | Field (fluid)        | background    | `$field` \\*         |\n|           | Field text (default) | text color    | `$text-primary`     |\n|           | Field text (fluid)   | text color    | `$text-secondary`   |\n|           | Field                | border-bottom | `$border-subtle` \\* |\n\n<Caption fullWidth>\n  \\* Denotes a contextual color token that will change values based on the layer\n  it is placed on.\n</Caption>\n\n<Row>\n<Column colLg={12}>\n\n![Examples of text area interactive states](images/text-area-style-2.png)\n\n</Column>\n</Row>\n\n## Typography\n\n\x3c!--\nTypically, variants use similar type styling and can be grouped together in one table.  If the type is different across variants then subdivide this section with H3 for each variant.\n--\x3e\n\n### Variant 1 typography\n\n\x3c!--\nBegin this section with any brief content guidelines. Link out to additional guidelines if needed. No images are needed for this section.\n\n**Table**\nUse a table to document font-size, font-weight, and type tokens in this section. You can reference this [table generator](https://www.tablesgenerator.com/markdown_tables) for easy table creation.\n\nThe following example is from [Text input](https://carbondesignsystem.com/components/text-input/style#typography).\n--\x3e\n\nText input labels and field text should be set in sentence case, with only the\nfirst word in a phrase and any proper nouns capitalized. See the text input\n[content guidelines](/components/text-input/usage#content) for more details.\n\n| Element                   | Font-size (px/rem) | Font-weight   | Type token         |\n| ------------------------- | ------------------ | ------------- | ------------------ |\n| Label                     | 12 / 0.75          | Regular / 400 | `$label-01`        |\n| Field text                | 14 / 0.875         | Regular / 400 | `$body-compact-01` |\n| Helper text               | 12 / 0.75          | Regular / 400 | `$helper-text-01`  |\n| Error and warning message | 12 / 0.75          | Regular / 400 | `$label-01`        |\n\n### Variant 2 typography\n\n\x3c!--\nUse the same guidance as in the `Variant 1 typography` section.\n--\x3e\n\n## Structure\n\n\x3c!--\nThe structure section for components with multiple variants is subdivided by `H3` headings to create separate specifications for each variant.\n--\x3e\n\n### Variant 1 structure\n\n\x3c!--\n**Header**\nIn the h3 header, replace the text `Variant 1` with the variant’s name. For example: “Text input structure.” When an additional categorization is needed, keep the variant name first, for example: "Text input fluid structure."\n\n**Table**\nBegin the first variant structure section with a table to document the padding, spacing, and measurements of the component, including any specifications related to states or other configurations. You can reference this [table generator](https://www.tablesgenerator.com/markdown_tables) for easy table creation.\n\n**Images**\nAdd supporting images under the table, with at least one image of the component that illustrates the spacing and measurements with annotations. Images should be accompanied by a descriptive caption and relate to the table. Note we use the `image--fixed` markdown component in the Structure section to maintain size accuracy.\n--\x3e\n\n| Element     | Property                    | px / rem | Spacing token |\n| ----------- | --------------------------- | -------- | ------------- |\n| Label       | margin-bottom               | 8 / 0.5  | `$spacing-03` |\n| Helper text | margin-top                  | 4 / 0.25 | `$spacing-02` |\n| Input text  | padding-left, padding-right | 16 / 1   | `$spacing-05` |\n| Field       | border-bottom               | 1px      | –             |\n| Focus       | border                      | 2px      | –             |\n| Error       | border                      | 2px      | –             |\n\n<div className="image--fixed">\n\n![Structure and spacing measurements for default text input](images/text-input-style-structure-fixed.png)\n\n</div>\n\n<Caption fullwidth>\n  Structure and spacing measurements for default text input | px / rem\n</Caption>\n\n#### Variant 1 modifier structure\n\n\x3c!--\nOptional: Some variants may have modifiers that can change the structure of the component. Use an H4 section under the parent variant and create a separate table and image for the modifier. For an example see tabs: https://carbondesignsystem.com/components/tabs/style#line-tab-structure\n--\x3e\n\n| Element      | Property      | px / rem | Spacing token |\n| ------------ | ------------- | -------- | ------------- |\n| Element name | property type | 0 / 0    | `$token`      |\n\n<div className="image--fixed">\n\n![Text describing the image](images/component-style-structure-modifier.png)\n\n</div>\n\n<Caption fullwidth>\n  Structure and spacing measurements for default component with modifier | px / rem\n</Caption>\n\n### Variant 2 structure\n\n\x3c!--\nUse the same guidance as in the `Variant 1 structure` section.\n--\x3e\n\n| Element | Property                    | px / rem    | Spacing token |\n| ------- | --------------------------- | ----------- | ------------- |\n| Label   | padding-bottom              | 4 / 0.25    | `$spacing-02` |\n| Field   | height                      | 64 / 4      | `$spacing-10` |\n|         | padding-left, padding-right | 16 / 1      | `$spacing-05` |\n|         | padding-top, padding-bottom | 13 / 0.8125 | –             |\n|         | border-bottom               | 1px         | –             |\n| Focus   | border                      | 2px         | –             |\n| Error   | border                      | 2px         | –             |\n\n<br />\n\n<div className="image--fixed">\n\n![Structure and spacing measurements for fluid text input](images/text-input-style-structure-fluid.png)\n\n</div>\n\n<Caption>\n  Structure Structure and spacing measurements for fluid text input | px / rem\n</Caption>\n\n## Size\n\n\x3c!--\nThe size section for components with multiple variants can be subdivided by `H3` headings to create separate specifications for each variant.\n--\x3e\n\n### Variant 1 size\n\n\x3c!--\n**Header**\nIn the h3 header, replace `Variant 1` with the second variant’s name. For example: “Text input sizes.”\n\n**Body**\nUsing body copy below the header, cross-link this to the size section in the usage tab, which is where you should provide guidance about how to choose the best size for a given use case.\n\n**Table**\nProvide a table of component size names and heights. If needed, you can add another column to clarify which component element is changing with the size.\n\n**Image**\nEach size listed in the table should be included in the image, typically stacked horizontally or vertically. Note we use the `image--fixed` markdown component in the Size section to maintain size accuracy.\n\nThe following content shows an example from text input: https://carbondesignsystem.com/components/text-input/style/#size.\n--\x3e\n\nThese following sizes apply only to the default style of text input. See\n[sizing](/components/text-input/usage#sizing) on the Usage tab for more\ninformation about specific use cases for each size.\n\n| Element | Size        | Height (px / rem) |\n| ------- | ----------- | ----------------- |\n| Input   | Small (sm)  | 32 / 2            |\n|         | Medium (md) | 40 / 2.5          |\n|         | Large (lg)  | 48 / 3            |\n\n<div className="image--fixed">\n\n![Sizes for text input](images/text-input-style-size.png)\n\n</div>\n\n<Caption>Text input default style sizes | px / rem</Caption>\n\n### Variant 2 size\n\n\x3c!--\nUse the same guidance as in the `Variant 1 size` section.\n--\x3e\n\n## AI presence\n\n\x3c!--\nThe AI presence section for components with multiple variants is typically combined into one section because the variants tend to share the same AI styling. If the AI styling is different across variants then subdivide this section with H3 for each AI variant.\n\n**Body**\nInclude any content to help define the scope of the AI style in the component. Then add a link to the Carbon for AI guidelines page so the user can learn more about the AI styling.\n\n**Table**\nProvide a table of any AI specific color tokens and elements used in the component. You do not need to repeat any tokens that are the same as the default version.\n\n**Images**\nShow each variant that has an AI presence in a group or tabbed image.  You only need to show the enabled and revert states.\n\nThe following content shows an example from text input: https://carbondesignsystem.com/components/text-input/style/#ai-presence.\n--\x3e\n\nThe following are the unique styles applied to the component when the AI slug is\npresent. Unless specified, all other tokens in the component remain the same as\nthe non-AI variant.\n\nFor more information on the AI style elements, see the\n[Carbon for AI](/guidelines/carbon-for-ai/) guidelines.\n\n| Element         | Property         | Token / Size        |\n| --------------- | ---------------- | ------------------- |\n| Linear gradient | start            | `$ai-aura-start-sm` |\n|                 | stop             | `$ai-aura-stop`     |\n| Field           | border-bottom    | `$ai-border-strong` |\n|                 | background color | `$field`\\*          |\n| AI Slug         | size             | mini                |\n\n<Caption fullWidth>\n  \\* Denotes a contextual color token that will change values based on the layer\n  it is placed on.\n</Caption>\n\n<Row>\n<Column colLg={8}>\n\n<Tabs>\n\n<Tab label="Default">\n\n![Default text input and text area AI example](images/text-input-text-area-ai-presence-ai-revert-default.png)\n\n</Tab>\n\n<Tab label="Fluid">\n\n![Fluid text input and text area AI example](images/text-input-text-area-ai-presence-ai-revert-fluid.png)\n\n</Tab>\n\n</Tabs>\n\n</Column>\n</Row>\n\n## Feedback\n\n\x3c!--\nInclude a request for feedback here.\n--\x3e\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n')),"\n",a.createElement(n.h3,null,"Code template"),"\n",a.createElement(n.p,null,"The code template helps developers implement your component. Be specific,\ninclude code snippets, and be sure to update as dependencies and versions\nchange."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-markdown"},"---\ntitle: Component name (you won't need to write this)\ndescription: Component description (you won't need to write this)\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\n\x3c!--\nHow to build a [component name] using React. For code usage with other\nframeworks, please follow the links in the live demo on the usage tab.\n--\x3e\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink> <AnchorLink>[Component use-case]</AnchorLink>\n<AnchorLink>Component API</AnchorLink> <AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\n\x3c!--\nThis should include the default use-case(s) for a component, at most 2.\nThis should be the most common way the component is used.\nIt should summarize what this common is for and provide snippets for how\nto accomplish these common use-cases.\n\nExample: You can build a breadcrumb using a combination of the Breadcrumb and BreadcrumbItem components. The Breadcrumb component accepts a list of BreadcrumbItem components as children and each BreadcrumbItem is responsible for displaying the page links in the hierarchy.\n--\x3e\n\n### Skeleton\n\n\x3c!--\nInclude which component/s to use for the skeleton state and why it might be useful.\n\nExample:\n\n*You can use the BreadcrumbSkeleton component to render a skeleton variant of an breadcrumb. This is useful to display while content in your breadcrumb is being fetched from an external resource like an API.*\n--\x3e\n\n## [Use case, for example, Skeleton state or Sorting]\n\n\x3c!--\nEach use-case of this component becomes its own section. For example,\nif an accordion had a skeleton then you would name this section Skeleton.\n\nIf the component had a specific piece of functionality or behavior, like\nhow you can sort with a Data Table, then Sorting would be the name of this\nsection.\n\nThis section should include an explainer for the use-case and when to use it,\nalong with a code snippet that someone could bring into their project.\n--\x3e\n\n## Component API\n\n### [Component name] props\n\n| Prop        | Type     | Required | Default | Description |\n| ----------- | -------- | -------- | ------- | ----------- |\n| `className` | `string` | –        | –       | –           |\n\n\x3c!--\n* Only specific required as `true`, if it's false you don't need to indicate that\n* Specify the default value if applicable\n* Provide a description if applicable\n* Annotate the type using TypeScript type annotations\n* Empty cells should be filled with en dashes (–)\n* Table should be sorted in alphabetical order\n--\x3e\n\n#### [Component name][prop name]\n\n\x3c!--\nUsed to clarify prop usage, provide additional info or snippets\n--\x3e\n\n## References\n\n\x3c!--\nA place for references, links, or a way clarify points made earlier\nin the documentation.\n--\x3e\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n")),"\n",a.createElement(n.h3,null,"Accessibility template"),"\n",a.createElement(n.p,null,"The accessibility template helps designers and developers ensure components are\naccessible. The published information helps users understand all the\naccessibility considerations that are baked into Carbon. Refer to our guidance\non creating the\n",a.createElement(n.a,{href:"https://github.com/hiraaeth/component-contribution-accessibility/wiki/High-fidelity-keyboard-interaction-visuals"},"keyboard interaction visuals"),".\nAlso check out Button’s ",a.createElement(n.a,{href:"/components/button/accessibility/"},"Accessibility")," tab\nfor additional references."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-markdown"},"---\ntitle: Component name (you won't need to write this)\ndescription: Component description (you won't need to write this)\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport A11yStatus from 'components/A11yStatus';\n\n<PageDescription>\n\n\x3c!--\nThere are 2 stock page descriptions.\nChoose the first example if designers need to include annotations in their wireframes to make the component accessible. Choose the second if the component is accessible without additional design decisions.\n** If example 2 is used, the Design recommendations section and its anchor link should be removed.\n\nExample 1:\nDesign annotations are needed for specific instances shown below, but for the\nstandard [component_name] component, Carbon already incorporates accessibility.\n\nExample 2:\nNo accessibility annotations are needed for [component_name]s, but keep these considerations in\nmind if you are modifying Carbon or creating a custom component.\n--\x3e\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>What Carbon provides</AnchorLink>\n  \x3c!--\n  Only include Design recommendations if there are actually tasks for a designer to do\n  --\x3e\n  <AnchorLink>Design recommendations</AnchorLink>\n  <AnchorLink>Development considerations</AnchorLink>\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via the keyboard. Carbon incorporates many\nother accessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\n\x3c!--\nThis keyboard section introduction text can give details of keyboard operation. For actionable components, begin by talking about the navigation via the tab stop, then discuss common interactions keys. For components with subcomponents, unless there is little interaction for the subcomponent, consider splitting the subcomponent considerations into a separate paragraph, separated by an illustration. Where operation is more complicated, separate headings for Keyboard navigation and Keyboard interaction can exist.Keyboard keys should be referred to with code styling.\n\nExample 1:\n--\x3e\n\nEach accordion is a tab stop. `Space` or `Enter` keys expand or collapse\naccordions, which are collapsed by default. Interactive elements within expanded\naccordions integrate into the tab order automatically.\n\n\x3c!--\nExample 2:\nEach page link in the breadcrumb is reached by `Tab` and activated by `Enter`. The current\npage, if listed in the breadcrumb, is not a link. If the breadcrumb is truncated, the ellipsis button\nfor the overflow menu is in the tab order. See [overflow menu]((https://carbondesignsystem.com/components/overflow-menu/usage/)) for details on its keyboard operation\n--\x3e\n\n\x3c!--\n**Images**\nUse one image to document keyboard navigation. If the component has limited operation functionality, it may also be incorporated in the same image. Otherwise, the operation should be dealt with in a separate image.\nNormally these images go across 8 columns.\nimages should follow the naming convention (component_name-accessibility-1.png)\nThe ALT text text for the first image can be fairly generic, since the image is just restating information in the prior paragraph.\nThe caption should likewise summarize something already described in the preceding paragraph. No new information should be given in the caption. Due to technology constraints, keystroke names in the captions are not given any markdown styling.\nExample:\n![example of breadcrumb keyboard interaction](images/breadcrumb-accessibility-1.png)\n<Caption>\n  The breadcrumb's links are reached by Tab and activated by Enter.\n</Caption>\n--\x3e\n\n<Row>\n<Column colLg={8}>\n\n![example of (component_name) keyboard interaction](images/component_name-accessibility-1.png)\n\n<Caption>\n  The (component_name) is reached by Tab and activated by Enter.\n</Caption>\n\n</Column>\n</Row>\n\n\x3c!--\nThe Design recommendations section should only be included if annotations are needed\n--\x3e\n\n## Design recommendations\n\nDesign annotations are needed for the following instances.\n\n\x3c!--\nSome of the possible subheadings here include:\n- headings\n- alignment\n- labeling\n- meaningful order\n\nEach should have a level 3 heading, a descriptive paragraph and a supporting image.\n\nExample:\n\n### Headings\nCarbon accordions are not set as headings by default. For improved accessibility, annotate accordions as headings on the first occurrence in a product. Annotate the heading level of accordions as needed.\n\n--\x3e\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component:\n\n\x3c!--\nProvide a bulleted list of implementation considerations for ensuring accessibility. If there is the ability to reference the IBM toolkit or the ARIA authoring practices, that should be done.\n\n- Use dashed bullets and ensure code is styled as code and consistently appears with the\nfollowing symbols: <element>, 'variable' and \"value\".\n- End each bulleted list item with a period.\n\nExample:\n- See the [ARIA authoring practices](https://w3c.github.io/aria-practices/#tooltip) for more considerations.\n\n<A11yStatus layout=\"table\" components=\"Component name\" />\n\n--\x3e\n")),"\n",a.createElement(n.h2,null,"Documenting patterns"),"\n",a.createElement(n.p,null,"Patterns show reusable combinations of components and templates that address\ncommon user objectives with sequences and flows. Because they are more\ncomplicated than components, you may need to adjust the topic order to best tell\nthe story — but your pattern should cover all of the topics outlined in the\nfollowing templates."),"\n",a.createElement(n.h3,null,"Pattern template: for one variant"),"\n",a.createElement(n.p,null,"Use this template for documenting patterns that have a single variant. You can\nsee this template in use for ",a.createElement(n.a,{href:"/patterns/text-toolbar-pattern/"},"Toolbar"),"."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-markdown"},"---\ntitle: Pattern name\ndescription: Explain the pattern in one or two sentences.\n---\n\n<PageDescription>\n\nExplain the pattern in one or two sentences.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>  \n<AnchorLink>Designing with [pattern]</AnchorLink>  \n<AnchorLink>Accessibility</AnchorLink>  \n<AnchorLink>Related</AnchorLink>  \n<AnchorLink>References</AnchorLink>  \n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nThis section answers the question: “What problem does this pattern solve?”\n\n- Define the use of your pattern and what it does.\n- Explain a user’s needs and how the pattern meets those needs.\n\n### Anatomy\n\nInclude an image with callouts explaining each part of the pattern. See the\n[Forms pattern](https://www.carbondesignsystem.com/patterns/forms-pattern#anatomy-of-a-form)\nfor an example.\n\n### When to use\n\nInclude a short list describing situations where this pattern could be applied.\n\nFor example, use this pattern when:\n\n- Situation 1\n- Situation 2\n\n### When not to use (optional)\n\nIf required, include a short explanation about when not to use this pattern.\n\n## Designing with [pattern]\n\nThis section explains the pattern in detail. Use a combination of written\nexplanations and visuals to tell the story.\n\nDescribe the elements, components, and content that make up the pattern.\n\nShow the pattern in context. Use visuals throughout your written commentary to\nillustrate your guidance.\n\nDifferent patterns require different visuals to best explain the behaviors and\nhierarchy. Choose the options that make the most sense for the story you are\ntelling.\n\n- Use annotated wireframes or sketches to explain the visual hierarchy of\n  components.\n- Create high-level user flows to explain the big picture.\n- Create a functional prototype if that is the best way to illustrate the\n  pattern's behavior.\n\nProvide a Sketch file with any symbols you've created in the development of this\npattern.\n\nUse the following headings as guidelines for the kind of information to include.\nDepending on the requirements of your pattern, you may choose to present these\nheadings as H2 headings or as H3 headings underneath a more general \"Designing\nwith [pattern]\" heading. See the\n[Dialogs pattern](https://www.carbondesignsystem.com/patterns/dialog-pattern/#designing-with-dialogs)\nas an example.\n\n### Types of [pattern]\n\nIf the pattern has different types or visual treatments that serve different use\ncases, cover them here and be sure to explain when to use each type.\n\nSee the\n[Empty states](https://www.carbondesignsystem.com/patterns/empty-states-pattern#when-to-use)\npattern and the\n[Notification](https://www.carbondesignsystem.com/patterns/notification-pattern#notification-types)\npattern for examples.\n\n### Behaviors\n\nDescribe behaviors, including guidance on interactions, and changes in states\nand content.\n\n### Best practices\n\nAre there any do's and don'ts specific to this variant? Include them here.\n\nFor examples of how to lay out this kind of information, see\n[Dropdown](https://www.carbondesignsystem.com/components/dropdown/usage) and\n[Modal](https://www.carbondesignsystem.com/components/modal/usage#variations).\n\n### Visual guidance\n\nCover any important topics such as alignment, image choice considerations, or\nspecial treatments in situations with no data or multiple instances of elements.\nSee the\n[Empty states pattern](https://www.carbondesignsystem.com/patterns/empty-states-pattern#visual-guidelines-for-smaller-empty-spaces)\nand the\n[Forms pattern](https://www.carbondesignsystem.com/patterns/forms-pattern#designing-a-form)\nfor examples.\n\n### Other use cases\n\nIf there are use cases that require a different solution, include those here\nwith corresponding explanations and visuals. Be sure to explain the reasons for\nusing one solution over another.\n\n## Accessibility\n\nEvaluate your pattern to ensure it meets\n[accessibility standards](notion://www.notion.so/guidelines/accessibility/overview)\nand guidelines, and provide details of compliance.\n\nFor example, “Users should be able to TAB into the input field of the search box\nto begin typing and press ENTER to run the search query.”\n\nFor examples, see the\n[Text toolbar pattern](https://www.carbondesignsystem.com/patterns/text-toolbar-pattern#accessibility)\nand the\n[Search pattern](https://www.carbondesignsystem.com/patterns/search-pattern#accessibility).\n\n## Related\n\nWhich components are used when building this pattern? Did you reference other\npatterns? List them here.\n\nIf necessary, clarify any differences between this pattern and related patterns.\n\n## References\n\nHelp designers understand your process by explaining your rationale for the way\nyou implemented the pattern. Include any research, citations, books or articles\nthat you found helpful.\n\n## Feedback\n\nHelp us improve this pattern by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n")),"\n",a.createElement(n.h3,null,"Pattern template: for multiple variants"),"\n",a.createElement(n.p,null,"Use this template for documenting patterns that have multiple types or variants.\nYou can see this template in use for ",a.createElement(n.a,{href:"/patterns/dialog-pattern/"},"Dialog")," and\n",a.createElement(n.a,{href:"/patterns/loading-pattern/"},"Loading"),"."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-markdown"},"---\ntitle: Pattern name (multiple variants)\ndescription: Explain the pattern in one or two sentences.\n---\n\n<PageDescription>\n\nExplain the pattern in one or two sentences.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>  \n<AnchorLink>Designing with [pattern]</AnchorLink>  \n<AnchorLink>[Pattern] variant</AnchorLink>  \n<AnchorLink>Accessibility</AnchorLink>  \n<AnchorLink>Related</AnchorLink>  \n<AnchorLink>References</AnchorLink>  \n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nInclude a paragraph or two that describes the primary use cases for the pattern\nand details about how it helps the user achieve any tasks.\n\nThe purpose of this overview section is to set context for your readers.\n\n### Anatomy\n\nIt can be helpful to show images of all of the variants in small form together.\nSee the\n[Dialogs pattern](https://www.carbondesignsystem.com/patterns/dialog-pattern#modal-variants)\nand the\n[Notifications pattern](https://www.carbondesignsystem.com/patterns/notification-pattern#notification-types)\nfor examples of this visual treatment.\n\nAlternatively, if there is one variant that includes common aspects of the\npattern that are seen across all or most variants, include an image with\ncallouts explaining each part of the pattern. See the\n[Forms pattern](https://www.carbondesignsystem.com/patterns/forms-pattern#anatomy-of-a-form)\nfor an example.\n\n### [Pattern] variants\n\nInclude a table with the variants discussed in this pattern. Include a short\ndescription about the usage of each pattern variant. The table in\n[Modal component](https://www.carbondesignsystem.com/components/modal/usage/#variants)\nis a good example of the level of detail required.\n\nThe variant names should link to the H2 headings for the variants below.\n\nAdd more columns, if needed. For example, you could add a column that includes\nshort explanations about when not to use the variant and guide the user to an\nalternative that may be more appropriate.\n\n## Designing with [pattern]\n\nThis section covers _universal_ content related to all variants, and depending\non the requirements of your pattern, may include the following H3s.\n\n### When to use\n\nIf you need to elaborate on the content included in the pattern variants table\nin the Overview, include that detail here. The\n[Notifications pattern](https://www.carbondesignsystem.com/patterns/notification-pattern#when-to-use)\nis a good example of the kind of content to include.\n\n### When not to use (optional)\n\nIf required, include a short explanation about when not to use this pattern and\nprovide alternatives.\n\n### Universal behaviors\n\nDescribe any behaviors that are universal to all pattern variants, and include\nguidance on interactions, and changes in states and content.\n\n### Best practices\n\nList out best practices and include any design considerations that help with\nmaking choices.\n\n- Do's\n- Dont's\n\n### Visual guidance\n\nCover any important topics such as alignment, image choice considerations, or\nspecial treatments in situations with no data or multiple instances of elements.\nSee\n[Empty states](https://www.carbondesignsystem.com/patterns/empty-states-pattern#visual-guidelines-for-smaller-empty-spaces)\nfor an example.\n\n### Other considerations\n\nIf there are any other considerations particular to your pattern that are\napplicable to all variants, include them here.\n\n## [Pattern] variant\n\nRename this H2 heading with the first pattern variant name, and repeat for all\nvariants within this pattern. These sections should map directly to the variant\ntable in the Overview.\n\nThis section describes the pattern variant in detail, and highlights content\nthat is _unique_ to the pattern variant. Use a combination of written\nexplanations and visuals to tell the story.\n\nThe H3s headings below are suggested that be included and adapted to suit the\nrequirements and complexity of the variant.\n\nInclude an introductory paragraph about the pattern variant to set context.\n\n### [Pattern variant] anatomy\n\nInclude an image with callouts explaining each part of the pattern variant. See\nthe\n[Forms pattern](https://www.carbondesignsystem.com/patterns/forms-pattern#anatomy-of-a-form)\nfor an example.\n\n### When to use\n\nProvide use cases and situations for when this pattern should be used.\n\n### When not to use\n\nIf required, also include a \"When not to use\" section with details about when\nnot to use and suggest alternatives.\n\n### Designing with [pattern variant]\n\nDescribe the elements, components, and content that make up the pattern.\n\nShow the variant in context. Use visuals throughout your written commentary to\nillustrate your guidance.\n\nDifferent patterns require different visuals to best explain the behaviors and\nhierarchy. Choose the options that make the most sense for the story you are\ntelling.\n\n- Use annotated wireframes or sketches to explain the visual hierarchy of\n  components.\n- Create high-level user flows to explain the big picture.\n- Create a functional prototype if that is the best way to illustrate the\n  pattern's behavior.\n\nProvide a Sketch file with any symbols you've created in the development of this\npattern.\n\n### [Pattern variant] behaviors\n\nDescribe behaviors specific to the pattern variant, including guidance on\ninteractions, and changes in states and content.\n\n### Best practices\n\nList out best practices and include any design considerations that help with\nmaking choices.\n\n- Do's\n- Dont's\n\nFor examples of how to lay out this kind of information, see the\n[Dropdown component](https://www.carbondesignsystem.com/components/dropdown/usage)\nand the\n[Modal component](https://www.carbondesignsystem.com/components/modal/usage#variations).\n\n### Visual guidance\n\nCover any important topics such as alignment, image choice considerations, or\nspecial treatments in situations with no data or multiple instances of elements.\nSee the\n[Empty states pattern](https://www.carbondesignsystem.com/patterns/empty-states-pattern#visual-guidelines-for-smaller-empty-spaces)\nand the\n[Forms pattern](https://www.carbondesignsystem.com/patterns/forms-pattern#designing-a-form)\nfor examples.\n\n### Other use cases\n\nIf there are similar use cases that may require a different solution, include\ndetails here and explain the reasons for using one solution over another.\n\nRepeat the H2 heading `Pattern variant` with the necessary H3 headings for each\nvariant within the pattern.\n\n## Accessibility\n\nEvaluate your pattern to ensure it meets\n[accessibility standards](/guidelines/accessibility/overview) and guidelines,\nand provide details of compliance.\n\nFor example, “Users should be able to TAB into the input field of the search box\nto begin typing and press ENTER to run the search query.”\n\n## Related\n\nWhich components did you use when building this pattern? Did you reference other\npatterns? List them here.\n\nIf necessary, clarify any differences between this pattern and related patterns.\n\n## References\n\nHelp designers understand your process by explaining your rationale for the way\nyou implemented the pattern. Include any research, citations, books or articles\nthat you found helpful.\n\n## Feedback\n\nHelp us improve this pattern by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n")),"\n",a.createElement(n.h2,null,"Writing better content"),"\n",a.createElement(n.p,null,"As you fill out the templates above, please keep these things in mind when\nwriting content for Carbon."),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Aim for a friendly and encouraging tone."),"\n",a.createElement(n.li,null,"Speak directly to the user. You can use the second person pronoun (“you”)."),"\n",a.createElement(n.li,null,"Keep sentences and paragraphs short and focused."),"\n",a.createElement(n.li,null,"Be clear and concise by removing unnecessary words. The more concise the text,\nthe easier it is for all users to understand."),"\n",a.createElement(n.li,null,"Use sentence case for everything, including component names, e.g. Content\nswitcher and Data table."),"\n"),"\n",a.createElement(n.h2,null,"Publishing updates"),"\n",a.createElement(n.p,null,"Ready to get your work reviewed and published? There are two ways to do this,\ndepending on your experience with GitHub. You may also draft your content and\nbring it to\n",a.createElement(n.a,{href:"https://ec.yourlearning.ibm.com/w3/series/10289694?layout=grid&_ga=2.129990351.257088430.1694013487-309583455.1691093939&_gl=1*16l2j5q*_ga*MzA5NTgzNDU1LjE2OTEwOTM5Mzk.*_ga_FYECCCS21D*MTY5NDAzMjgwMi4xMS4xLjE2OTQwMzQ0OTEuMC4wLjA."},"office hours"),"\nto get further guidance."),"\n",a.createElement(n.h3,null,"Editing in browser"),"\n",a.createElement(n.h4,null,"How to edit an existing page"),"\n",a.createElement(n.p,null,"If you are editing an existing docs page, the easiest option is to click on the\n",a.createElement(n.code,null,"Edit this page on GitHub")," link that appears at the bottom of every page on the\nsite. The link opens the specific GitHub page where you can edit the content and\nthen propose the change with a pull request. Your changes will be reviewed by\nthe Carbon team. This is the easiest and most commonly used approach by\ncontributors."),"\n",a.createElement(c,{src:"/videos/edit-this-page-contribution.mp4",poster:"/videos/edit-this-page-contribution.png"},a.createElement("track",{default:!0,srcLang:"en",title:"How to edit an existing page"})),"\n",a.createElement(n.h4,null,"How to add a new page or image"),"\n",a.createElement(n.p,null,"To start, go to the Carbon website repository\n",a.createElement(n.a,{href:"https://github.com/carbon-design-system/carbon-website"},"here"),". Navigate to the\nleft hand corner above the files and click ",a.createElement(n.code,null,"main"),". From here, type in a new\nbranch name that reflects your work. For\nexample,",a.createElement(n.code,null,"add-accordion-accessibility-guidance"),". Once that new branch is created,\nnavigate to where the new file will be stored for a\n",a.createElement(n.a,{href:"https://github.com/carbon-design-system/carbon-website/tree/main/src/pages/components"},"component"),"\nor\n",a.createElement(n.a,{href:"https://github.com/carbon-design-system/carbon-website/tree/main/src/pages/patterns"},"pattern"),"."),"\n",a.createElement(n.p,null,"Ensure you are in the branch you created, then navigate to ",a.createElement(n.code,null,"Add file")," in the\nupper right-hand corner. To add a new guidance page, click ",a.createElement(n.code,null,"create new file"),"\nbutton. Title the file one of the following: ",a.createElement(n.code,null,"usage.mdx"),", ",a.createElement(n.code,null,"style.mdx"),",\n",a.createElement(n.code,null,"code.mdx"),", or ",a.createElement(n.code,null,"accessibility.mdx"),". To add an image, make sure you are in the\nimage folder and click ",a.createElement(n.code,null,"Upload files"),"."),"\n",a.createElement(n.p,null,"After filling out the markdown template or adding an image, click\n",a.createElement(n.code,null,"Commit changes"),". Describe your work and double check that you are on the branch\nyou created. If you are in the wrong branch, you will have to copy your content\ninto the correct branch."),"\n",a.createElement(c,{src:"/videos/inline-edit-contribution.mp4",poster:"/videos/inline-edit-contribution.png"},a.createElement("track",{default:!0,srcLang:"en",title:"How to add a new page or image"})),"\n",a.createElement(n.p,null,"Once you have committed your changes, go to the\n",a.createElement(n.a,{href:"https://github.com/carbon-design-system/carbon-website/pulls"},"Pull requests"),"\npage. Compare ",a.createElement(n.code,null,"base: main")," to your branch and click ",a.createElement(n.code,null,"Create new pull request"),".\nYour contribution will be reviewed by the Carbon team!"),"\n",a.createElement(n.h3,null,"Editing in a local environment"),"\n",a.createElement(n.p,null,"Alternatively, if you are planning regular or more comprehensive content updates\nand are up for a more advanced option, you’ll want to fork the repo and install\nsome of the tools we use to build the website. This will create an easier\nworkflow for you long term, but takes some time to set up."),"\n",a.createElement(n.p,null,"If you are familiar with this process, you can\n",a.createElement(n.a,{href:"https://github.com/carbon-design-system/carbon-website/blob/main/.github/CONTRIBUTING.md#submission-guidelines"},"fork the repo"),"\nand get started. Otherwise, reach out to the Carbon team on slack or\n",a.createElement(n.a,{href:"https://ec.yourlearning.ibm.com/w3/series/10289694?layout=grid&_ga=2.129990351.257088430.1694013487-309583455.1691093939&_gl=1*16l2j5q*_ga*MzA5NTgzNDU1LjE2OTEwOTM5Mzk.*_ga_FYECCCS21D*MTY5NDAzMjgwMi4xMS4xLjE2OTQwMzQ0OTEuMC4wLjA."},"office hours"),"\nand we’ll help you find the best way to contribute."))}function s(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=Object.assign({},(0,o.R)(),e.components);return n?a.createElement(n,e,a.createElement(i,e)):i(e)}}}]);