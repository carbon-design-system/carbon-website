"use strict";(self.webpackChunkcarbondesignsystem=self.webpackChunkcarbondesignsystem||[]).push([[656619],{807410:function(e,t,n){n.r(t);var a=n(28453),l=n(296540);function r(e){const t=Object.assign({p:"p",code:"code",a:"a",h2:"h2",h3:"h3",pre:"pre"},(0,a.R)(),e.components),{PageDescription:n,InlineNotification:r,AnchorLinks:c,AnchorLink:s,Row:i,Column:m,ResourceCard:u,MdxIcon:d}=t;return s||o("AnchorLink",!0),c||o("AnchorLinks",!0),m||o("Column",!0),r||o("InlineNotification",!0),d||o("MdxIcon",!0),n||o("PageDescription",!0),u||o("ResourceCard",!0),i||o("Row",!0),l.createElement(l.Fragment,null,l.createElement(n,null,l.createElement(t.p,null,"The Carbon Grid package helps developers build digital experiences with the 2x\nGrid. The project allows you to use CSS grid to build a variety of layouts.")),"\n",l.createElement(r,null,l.createElement(t.p,null,"If you’re using ",l.createElement(t.code,null,"@carbon/react"),", you you probably don’t need to install the grid\npackage separately. See our ",l.createElement(t.a,{href:"/developing/frameworks/react/"},"Carbon React")," guide\nto start building.")),"\n",l.createElement(c,null,l.createElement(s,null,"Documentation"),l.createElement(s,null,"API & Helpers"),l.createElement(s,null,"Legacy")),"\n",l.createElement(t.h2,null,"Documentation"),"\n",l.createElement(t.h3,null,"CSS Grid"),"\n",l.createElement(t.p,null,"Carbon provides grid components, using CSS Grid to help developers use the 2x\nGrid. These components include ",l.createElement(t.code,null,"Grid")," and ",l.createElement(t.code,null,"Column")," and allow you to define\ncolumn widths by breakpoint, based on a 16 column grid."),"\n",l.createElement(i,{className:"resource-card-group"},l.createElement(m,{colLg:4,colMd:4,noGutterSm:!0},l.createElement(u,{subTitle:"React",href:"https://react.carbondesignsystem.com/?path=/docs/elements-grid--default"},l.createElement(d,{name:"react"}))),l.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},l.createElement(u,{subTitle:"CSS Grid demo",href:"https://carbon-elements.netlify.app/grid/examples/css-grid/"},l.createElement(d,{name:"bee"})))),"\n",l.createElement(r,{kind:"info"},l.createElement(t.p,null,"The Carbon grid is an important tool for placing elements on the screen. When\nused correctly, complex layouts can be achieved with little or no custom CSS\n(",l.createElement(t.code,null,"display: flex"),", ",l.createElement(t.code,null,"position")," declarations, size/width overrides, etc.)")),"\n",l.createElement(t.h3,null,"AspectRatio"),"\n",l.createElement(t.p,null,"When designing fluid layouts, it’s helpful for an asset or card to be a specific\naspect ratio. The ",l.createElement(t.code,null,"AspectRatio")," component supports rendering your content in a\nspecific aspect ratio through the ratio prop. This allows you to specify the\nproportion between the width and the height of your content."),"\n",l.createElement(i,{className:"resource-card-group"},l.createElement(m,{colLg:4,colMd:4,noGutterSm:!0},l.createElement(u,{subTitle:"React",href:"https://react.carbondesignsystem.com/?path=/story/components-aspectratio--default"},l.createElement(d,{name:"react"}))),l.createElement(m,{colLg:4,colMd:4,noGutterSm:!0},l.createElement(u,{subTitle:"Vue",href:"https://vue.carbondesignsystem.com/?path=/story/components-cvaspectratio--default"},l.createElement(d,{name:"vue"})))),"\n",l.createElement(t.h2,null,"API & Helpers"),"\n",l.createElement(t.p,null,"There are many ways to make the 2x Grid work for your application using our API.\nThe examples below illustrate two ways of removing visibility of a given\ncomponent based on the breakpoint."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-css"},"@use '@carbon/grid' as *;\n\n.component {\n  display: block;\n\n  /* applies styles inside mixin on md breakpoint or below, like max-width */\n  @include breakpoint-down('md') {\n    display: none;\n  }\n}\n\n.component {\n  display: none;\n\n  /* applies styles inside mixin on lg breakpoint and above */\n  @include breakpoint('lg') {\n    display: block;\n  }\n}\n")),"\n",l.createElement(t.p,null,"In addition, you can also use Helpers to control what is being displayed on the\nscreen at a given breakpoint."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-css"},"@use '@carbon/styles/scss/utilities/helper-classes';\n\n.my-class {\n  @include helper-classes.hide-at-sm();\n}\n")),"\n",l.createElement(i,{className:"resource-card-group"},l.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},l.createElement(u,{subTitle:"Carbon grid package",href:"https://github.com/carbon-design-system/carbon/tree/main/packages/grid"},l.createElement(d,{name:"github"}))),l.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},l.createElement(u,{subTitle:"Carbon grid docs API",href:"https://github.com/carbon-design-system/carbon/blob/main/packages/grid/docs/sass.md#api"},l.createElement(d,{name:"github"}))),l.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},l.createElement(u,{subTitle:"Hide at Breakpoint Helpers on Storybook",href:"https://react.carbondesignsystem.com/?path=/story/helpers-hideatbreakpoint--hide-at-breakpoint"},l.createElement(d,{name:"react"})))),"\n",l.createElement(t.h2,null,"Legacy"),"\n",l.createElement(t.h3,null,"Flexbox Grid"),"\n",l.createElement(t.p,null,"The default grid in v11 is based off of CSS Grid, to enable the legacy\n",l.createElement(t.a,{href:"https://react.carbondesignsystem.com/?path=/docs/elements-flexgrid--auto-columns"},"FlexGrid"),"\nimplementation, built using Flexbox, you will need to include the following in\nyour Sass files:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-scss"},"@use '@carbon/grid';\n\n// Emit the flex-grid styles\n@include grid.flex-grid();\n")),"\n",l.createElement(i,{className:"resource-card-group"},l.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},l.createElement(u,{subTitle:"React",href:"https://react.carbondesignsystem.com/?path=/story/elements-flexgrid--auto-columns"},l.createElement(d,{name:"react"}))),l.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},l.createElement(u,{subTitle:"Angular",href:"https://angular.carbondesignsystem.com/?path=/story/components-grid--basic"},l.createElement(d,{name:"angular"}))),l.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},l.createElement(u,{subTitle:"Vue",href:"https://vue.carbondesignsystem.com/?path=/story/components-cvgrid--auto-columns"},l.createElement(d,{name:"vue"}))),l.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},l.createElement(u,{subTitle:"FlexGrid demo",href:"https://carbon-elements.netlify.app/grid/examples/preview/"},l.createElement(d,{name:"bee"})))))}function o(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}t.default=function(e={}){const{wrapper:t}=Object.assign({},(0,a.R)(),e.components);return t?l.createElement(t,e,l.createElement(r,e)):r(e)}}}]);