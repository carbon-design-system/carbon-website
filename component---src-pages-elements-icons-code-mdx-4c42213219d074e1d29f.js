"use strict";(self.webpackChunkcarbondesignsystem=self.webpackChunkcarbondesignsystem||[]).push([[375289],{621893:function(e,n,t){t.r(n);var l=t(28453),a=t(296540);function c(e){const n=Object.assign({p:"p",h2:"h2",code:"code",a:"a",pre:"pre",em:"em",h3:"h3",h4:"h4"},(0,l.R)(),e.components),{PageDescription:t,AnchorLinks:c,AnchorLink:o,Row:s,Column:i,ResourceCard:m,MdxIcon:u}=n;return o||r("AnchorLink",!0),c||r("AnchorLinks",!0),i||r("Column",!0),u||r("MdxIcon",!0),t||r("PageDescription",!0),m||r("ResourceCard",!0),s||r("Row",!0),a.createElement(a.Fragment,null,a.createElement(t,null,a.createElement(n.p,null,"Carbon icons are provided through a set of packages allowing the use of icons in\nmultiple frameworks. Icons are supported in vanilla, React, Angular, and Vue.")),"\n",a.createElement(c,null,a.createElement(o,null,"Get started"),a.createElement(o,null,"Usage"),a.createElement(o,null,"Resources")),"\n",a.createElement(n.h2,null,"Get started"),"\n",a.createElement(n.p,null,"To install ",a.createElement(n.code,null,"@carbon/icons-react")," in your project, you will need to run the\nfollowing command using ",a.createElement(n.a,{href:"https://www.npmjs.com/"},"npm"),":"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"npm install -S @carbon/icons-react\n")),"\n",a.createElement(n.p,null,"If you prefer ",a.createElement(n.a,{href:"https://yarnpkg.com/en/"},"Yarn"),", use the following command\ninstead:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"yarn add @carbon/icons-react\n")),"\n",a.createElement(n.h2,null,"Usage"),"\n",a.createElement(n.p,null,"Icons in this package can be accessed through importing them by name."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-jsx"},"import { Add } from '@carbon/icons-react';\n")),"\n",a.createElement(n.p,null,"Icons in this package support the following sizes: ",a.createElement(n.code,null,"16"),", ",a.createElement(n.code,null,"20"),", ",a.createElement(n.code,null,"24"),", and ",a.createElement(n.code,null,"32"),"\npixels. These sizes refer to the width and height of the icon. Icons default to\nsize ",a.createElement(n.code,null,"16"),". You can change the size of the icon by adding the ",a.createElement(n.code,null,"size")," prop:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},'<Add size="24" />\n')),"\n",a.createElement(n.p,null,a.createElement(n.em,null,"Note: if you would like to find the import path for an icon, you can reference\nour ",a.createElement(n.a,{href:"https://www.carbondesignsystem.com/elements/icons/library"},"Icon Library"))),"\n",a.createElement(n.h3,null,"Icon fill"),"\n",a.createElement(n.p,null,"All icons from the library support being styled by the ",a.createElement(n.code,null,"fill")," property. You can\nchange the color of an icon by passing in a custom class name that sets this\nproperty (preferred), or by passing in an inline style. For example:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-css"},"// CSS custom class name to set the fill of the icon to `rebeccapurple`\nsvg.my-custom-class {\n  fill: rebeccapurple;\n}\n")),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-jsx"},'import { Add } from \'@carbon/icons-react\';\n\nfunction MyComponent() {\n  return (\n    <button>\n      <Add aria-label="Add" className="my-custom-class" />\n    </button>\n  );\n}\n')),"\n",a.createElement(n.h4,null,"Two-tone icons"),"\n",a.createElement(n.p,null,"Certain icons in the library support two distinct fill colors. You can target\nthe inner path by using the ",a.createElement(n.code,null,'[data-icon-path="inner-path"]')," attribute selector.\nFor example:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-scss"},"// CSS custom class name to set the fill of the icon to `yellow`\nsvg.outer-icon-fill {\n  fill: yellow;\n}\n\n// Use the `data-icon-path` attribute selector to target the inner path\n// where we want to set the fill to `black`. We also set `opacity` to `1` so\n// that this inner-path is visible.\nsvg.outer-icon-fill [data-icon-path='inner-path'] {\n  fill: black;\n  opacity: 1;\n}\n")),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-jsx"},'import { WarningFilled } from \'@carbon/icons-react\';\n\nfunction MyComponent() {\n  return <WarningFilled aria-label="Add" className="my-custom-class" />;\n}\n')),"\n",a.createElement(n.h3,null,"Focus and ",a.createElement(n.code,null,"aria-label")),"\n",a.createElement(n.p,null,"By default, the icon components from ",a.createElement(n.code,null,"@carbon/icons-react")," are treated as\ndecorative content. This means that we set ",a.createElement(n.code,null,'aria-hidden="true"')," unless certain\nprops are passed to the component."),"\n",a.createElement(n.p,null,"If you would like the icon to be announced by a screen reader, you can supply an\n",a.createElement(n.code,null,"aria-label")," or ",a.createElement(n.code,null,"aria-labelledby"),". For example:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-jsx"},"import { Add } from '@carbon/icons-react';\n\nfunction MyComponent() {\n  return (\n    <button>\n      <Add aria-label=\"Add\" />\n    </button>\n  );\n}\n")),"\n",a.createElement(n.p,null,"Doing this will add the appropriate ",a.createElement(n.code,null,"role")," to the ",a.createElement(n.code,null,"<svg>")," node, as well."),"\n",a.createElement(n.p,null,"If you would like the ",a.createElement(n.code,null,"<svg>")," to receive focus, you will need to pass in a\n",a.createElement(n.code,null,"tabIndex")," value. For example:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-jsx"},'import { Add } from \'@carbon/icons-react\';\n\nfunction MyComponent() {\n  return <Add aria-label="Add" tabIndex="0" />;\n}\n')),"\n",a.createElement(n.p,null,"Including ",a.createElement(n.code,null,"tabIndex")," and ",a.createElement(n.code,null,"aria-label")," (or ",a.createElement(n.code,null,"aria-labelledby"),") will set the\ncorresponding ",a.createElement(n.code,null,"tabindex")," on the underlying ",a.createElement(n.code,null,"<svg>")," and verify support in older\nbrowsers like Internet Explorer 11 by setting ",a.createElement(n.code,null,"focusable")," to ",a.createElement(n.code,null,"true"),"."),"\n",a.createElement(n.h2,null,"Resources"),"\n",a.createElement(s,{className:"resource-card-group"},a.createElement(i,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(m,{subTitle:"Carbon icons package",href:"https://github.com/carbon-design-system/carbon/tree/main/packages/icons"},a.createElement(u,{name:"bee"}))),a.createElement(i,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(m,{subTitle:"Icon package demo",href:"https://carbon-elements.netlify.app/icons/examples/preview/"},a.createElement(u,{name:"bee"})))))}function r(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=Object.assign({},(0,l.R)(),e.components);return n?a.createElement(n,e,a.createElement(c,e)):c(e)}}}]);