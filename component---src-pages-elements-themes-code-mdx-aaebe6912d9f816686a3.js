"use strict";(self.webpackChunkcarbondesignsystem=self.webpackChunkcarbondesignsystem||[]).push([[329187],{719417:function(e,n,t){t.r(n);var a=t(28453),c=t(296540);function s(e){const n=Object.assign({p:"p",code:"code",a:"a",h2:"h2",h3:"h3",pre:"pre",h4:"h4"},(0,a.R)(),e.components),{PageDescription:t,InlineNotification:s,Row:r,Column:m,ResourceCard:o,MdxIcon:h}=n;return m||l("Column",!0),s||l("InlineNotification",!0),h||l("MdxIcon",!0),t||l("PageDescription",!0),o||l("ResourceCard",!0),r||l("Row",!0),c.createElement(c.Fragment,null,c.createElement(t,null,c.createElement(n.p,null,"Use the themes package to customize your product while maintaining consistency.")),"\n",c.createElement(s,null,c.createElement(n.p,null,"If you’re using ",c.createElement(n.code,null,"@carbon/react"),", you probably don’t need need to install the\nthemes package separately. See our ",c.createElement(n.a,{href:"/developing/frameworks/react/"},"Carbon React"),"\nguide to start building.")),"\n",c.createElement(n.h2,null,"Usage"),"\n",c.createElement(n.p,null,"You can use ",c.createElement(n.code,null,"@carbon/themes")," in JavaScript or Sass by including this package in\nyour project. By default, ",c.createElement(n.code,null,"@carbon/themes")," provides a set of color tokens that\nare pre-defined for a specific theme. Currently, we offer the following color\nthemes: white, gray 10, gray 90, gray 100."),"\n",c.createElement(n.p,null,"You can preview all of the token values for this on the\n",c.createElement(n.a,{href:"/elements/color/usage"},"color guidelines")," page."),"\n",c.createElement(n.h3,null,"Sass"),"\n",c.createElement(n.p,null,"If your project is using Sass, you can include this package and the\ncorresponding default theme by writing the following in your Sass file:"),"\n",c.createElement(n.pre,null,c.createElement(n.code,{className:"language-scss"},"@use '@carbon/themes';\n\n.my-component {\n  // Use tokens from the theme, this will map to a CSS Custom Property\n  color: themes.$token-01;\n}\n\n:root {\n  // Emit CSS Custom Properties for the current theme\n  @include themes.theme();\n}\n\n// Get the value of a specific token\n$custom-variable: rgba(themes.get('token-01'), 0.25);\n")),"\n",c.createElement(n.p,null,"By default, the white theme will be initialized. If you would like to include\nanother theme, you can do so by configuring the sass module using ",c.createElement(n.code,null,"with"),". For\nexample:"),"\n",c.createElement(n.pre,null,c.createElement(n.code,{className:"language-scss"},"@use '@carbon/themes/scss/themes' as *;\n@use '@carbon/themes' with (\n  $theme: $g100\n);\n")),"\n",c.createElement(n.p,null,"Inline theming of theme switching can be done by using the mixin. For example:"),"\n",c.createElement(n.pre,null,c.createElement(n.code,{className:"language-scss"},"@use '@carbon/themes/scss/themes' as *;\n@use '@carbon/themes';\n\n:root {\n  @include themes.theme($white);\n}\n\n[data-carbon-theme='g10'] {\n  @include themes.theme($g10);\n}\n\n[data-carbon-theme='g90'] {\n  @include themes.theme($g90);\n}\n\n[data-carbon-theme='g100'] {\n  @include themes.theme($g100);\n}\n")),"\n",c.createElement(n.p,null,"Themes can also be extended with your own custom tokens:"),"\n",c.createElement(n.pre,null,c.createElement(n.code,{className:"language-scss"},"@use '@carbon/themes/scss/themes';\n@use '@carbon/themes' with (\n  $fallback: themes.$g100,\n  $theme: (\n    token-01: #000000,\n  )\n);\n")),"\n",c.createElement(n.h4,null,"System preferences"),"\n",c.createElement(n.p,null,"Modern browsers and systems have adopted the idea of dark and light themes\napplied at a system level. Where no user preference has been specified their\nsystem level theme should be matched."),"\n",c.createElement(n.p,null,"For example applying ",c.createElement(n.code,null,"g10")," or ",c.createElement(n.code,null,"g100")," automatically based on system preferences."),"\n",c.createElement(n.pre,null,c.createElement(n.code,{className:"language-scss"},"@use '@carbon/themes/scss/themes' as *;\n@use '@carbon/themes';\n\n/* system preference theme by default */\n:root {\n  @include themes.theme($g10);\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    @include themes.theme($g100);\n  }\n}\n\n/* user has configured a theme preference for the current page/app */\n[data-carbon-theme='white'] {\n  @include themes.theme($white);\n}\n\n[data-carbon-theme='g10'] {\n  @include themes.theme($g10);\n}\n\n[data-carbon-theme='g90'] {\n  @include themes.theme($g90);\n}\n\n[data-carbon-theme='g100'] {\n  @include themes.theme($g100);\n}\n")),"\n",c.createElement(n.p,null,"Some designs include a sections in the opposite theme."),"\n",c.createElement(n.pre,null,c.createElement(n.code,{className:"language-scss"},"@mixin theme-scheme($default, $compliment) {\n  /* apply default theme */\n  @include theme($default, true);\n\n  /* apply to the compliment theme */\n  [data-carbon-theme--compliment] {\n    @include theme($compliment, true);\n  }\n\n  /* apply the default theme */\n  /* to switch back from within a compliment */\n  [data-carbon-theme] {\n    @include theme($default, true);\n  }\n}\n\n/* system preference theme by default */\n:root {\n  @include theme-scheme(themes.$g10, themes.$g100);\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    @include theme-scheme(themes.$g100, themes.$g10);\n  }\n}\n\n/* user has configured a theme preference for the current page/app */\n[data-carbon-theme='white'] {\n  @include theme-scheme(themes.$white, themes.$g90);\n}\n\n[data-carbon-theme='g10'] {\n  @include theme-scheme(themes.$g10, themes.$g100);\n}\n\n[data-carbon-theme='g90'] {\n  @include theme-scheme(themes.$g90, themes.$white);\n}\n\n[data-carbon-theme='g100'] {\n  @include theme-scheme(themes.$g100, themes.$g10);\n}\n")),"\n",c.createElement(n.h3,null,"JavaScript"),"\n",c.createElement(n.p,null,"If you’re looking to use these themes in JavaScript, we export a variety of\nbindings for you to use, including:"),"\n",c.createElement(n.pre,null,c.createElement(n.code,{className:"language-js"},"import {\n  // An object of all themes\n  themes,\n\n  // Direct theme values\n  white,\n  g10,\n  g90,\n  g100,\n\n  // Specific token values\n  interactive01,\n  interactive02,\n} from '@carbon/themes';\n")),"\n",c.createElement(n.h2,null,"Resources"),"\n",c.createElement(r,{className:"resource-card-group"},c.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},c.createElement(o,{subTitle:"Carbon theme package",href:"https://github.com/carbon-design-system/carbon/tree/main/packages/themes"},c.createElement(h,{name:"bee"}))),c.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},c.createElement(o,{subTitle:"Themes package demo",href:"https://carbon-elements.netlify.app/themes/examples/preview/"},c.createElement(h,{name:"bee"})))))}function l(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=Object.assign({},(0,a.R)(),e.components);return n?c.createElement(n,e,c.createElement(s,e)):s(e)}}}]);