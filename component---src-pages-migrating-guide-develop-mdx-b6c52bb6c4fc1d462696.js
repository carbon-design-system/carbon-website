"use strict";(self.webpackChunkcarbondesignsystem=self.webpackChunkcarbondesignsystem||[]).push([[731088],{238576:function(e,t,n){n.r(t);var l=n(28453),a=n(296540);n(50721);function r(e){const t=Object.assign({p:"p",h2:"h2",a:"a",code:"code",ul:"ul",li:"li",h3:"h3",pre:"pre",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",strong:"strong",ol:"ol",h4:"h4"},(0,l.R)(),e.components),{PageDescription:n,AnchorLinks:r,AnchorLink:c,InlineNotification:s,Row:i,Column:m,ResourceCard:u,MdxIcon:d}=t;return c||o("AnchorLink",!0),r||o("AnchorLinks",!0),m||o("Column",!0),s||o("InlineNotification",!0),d||o("MdxIcon",!0),n||o("PageDescription",!0),u||o("ResourceCard",!0),i||o("Row",!0),a.createElement(a.Fragment,null,a.createElement(n,null,a.createElement(t.p,null,"Step-by-step guide to updating your code from Carbon v10 to v11.")),"\n",a.createElement(r,null,a.createElement(c,null,"Overview"),a.createElement(c,null,"Migrating a React app or library"),a.createElement(c,null,"Migrating an app or library using just styles"),a.createElement(c,null,"Migrating carbon-icons"),a.createElement(c,null,"Migrating Carbon elements")),"\n",a.createElement(t.h2,null,"Overview"),"\n",a.createElement(t.p,null,"This guide helps you update your project to Carbon v11. It is broken into\nsections based on how you are using Carbon in your project today. For most teams\nusing Carbon, you’ll want to use the\n",a.createElement(t.a,{href:"#migrating-a-react-app"},"Migrating a React app")," section."),"\n",a.createElement(t.p,null,"One of the biggest changes to Carbon in v11 is that we moved to dedicated\npackages under the ",a.createElement(t.code,null,"@carbon")," scope. What this means for you is that if you were\npreviously using the following packages:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.code,null,"carbon-components")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"carbon-components-react")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"carbon-icons")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"@carbon/icons-react")),"\n"),"\n",a.createElement(t.p,null,"You can access all of this work under one single package: ",a.createElement(t.code,null,"@carbon/react"),". This\npackage will re-export all of the styles and icons for Carbon all in one\ndependency."),"\n",a.createElement(t.p,null,"If you were previously using ",a.createElement(t.code,null,"carbon-components"),", the styles from this package\nare available under ",a.createElement(t.code,null,"@carbon/styles"),". They are also re-exported through\n",a.createElement(t.code,null,"@carbon/react")),"\n",a.createElement(t.p,null,"Both the ",a.createElement(t.code,null,"carbon-components")," and ",a.createElement(t.code,null,"carbon-components-react")," packages are now\n",a.createElement(t.a,{href:"/deprecations"},"deprecated"),"."),"\n",a.createElement(t.h2,null,"Migrating a React app or library"),"\n",a.createElement(t.p,null,"Starting in v11, the React components for Carbon live in the ",a.createElement(t.code,null,"@carbon/react"),"\npackage."),"\n",a.createElement(t.p,null,"The ",a.createElement(t.code,null,"@carbon/react")," package also includes the styles for Carbon along with\nicons."),"\n",a.createElement(t.h3,null,"Step 1: Install @carbon/react"),"\n",a.createElement(t.p,null,"To get started, uninstall the following packages if they exist in your project:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.code,null,"carbon-components")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"carbon-components-react")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"carbon-icons")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"@carbon/icons-react")),"\n"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"npm uninstall carbon-components carbon-components-react carbon-icons @carbon/icons-react\n")),"\n",a.createElement(t.p,null,"Or, with ",a.createElement(t.a,{href:"https://yarnpkg.com/"},"Yarn"),":"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"yarn remove carbon-components carbon-components-react carbon-icons @carbon/icons-react\n")),"\n",a.createElement(t.p,null,"Next, install the ",a.createElement(t.code,null,"@carbon/react")," package:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"npm install @carbon/react\n")),"\n",a.createElement(t.p,null,"Or, with ",a.createElement(t.a,{href:"https://yarnpkg.com/"},"Yarn"),":"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"yarn add @carbon/react\n")),"\n",a.createElement(t.p,null,"Now that you’ve removed the old packages and brought in the new ones, run the\ncodemod below to fix your pathing."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"npx @carbon/upgrade migrate update-carbon-components-react-import-to-scoped --write\n")),"\n",a.createElement(t.p,null,"After running the command, your code should start looking like this:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"// Before\nimport { Accordion, AccordionItem } from 'carbon-components-react';\n// After\nimport { Accordion, AccordionItem } from '@carbon/react';\n")),"\n",a.createElement(s,null,a.createElement(t.p,null,"For full details, including options and commands available when using the\n",a.createElement(t.code,null,"@carbon/upgrade")," CLI, see the\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/tree/main/packages/upgrade"},"package documentation"),".")),"\n",a.createElement(t.h3,null,"Step 2: Install Dart Sass"),"\n",a.createElement(t.p,null,"If you were previously importing styles from ",a.createElement(t.code,null,"carbon-components"),", you can now\nimport styles directly from ",a.createElement(t.code,null,"@carbon/react")," or the ",a.createElement(t.code,null,"@carbon/react/scss")," folder."),"\n",a.createElement(t.p,null,"Before you’re able to bring in these styles, you’ll need to make sure your\nproject is setup to use Dart Sass. Starting in v11, Carbon styles requires Dart\nSass through the ",a.createElement(t.code,null,"sass")," package in order to compile. This change comes from our\nmigration to Sass Modules in order to improve our compilation times and overall\nproject structure."),"\n",a.createElement(t.p,null,"First, let’s remove ",a.createElement(t.code,null,"node-sass")," from your project. If you don’t have\n",a.createElement(t.code,null,"node-sass"),", no worries, just skip down and begin adding ",a.createElement(t.code,null,"sass"),"."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"npm uninstall node-sass\n")),"\n",a.createElement(t.p,null,"Or, with ",a.createElement(t.a,{href:"https://yarnpkg.com/"},"Yarn"),":"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"yarn remove node-sass\n")),"\n",a.createElement(t.p,null,"Now, let’s install ",a.createElement(t.code,null,"sass"),":"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"npm install sass --save-dev\n")),"\n",a.createElement(t.p,null,"Or, with ",a.createElement(t.a,{href:"https://yarnpkg.com/"},"Yarn"),":"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"yarn add sass --dev\n")),"\n",a.createElement(t.p,null,"Once you have Dart Sass installed, it’s important that you configure your\nproject to support resolving imports in Sass from ",a.createElement(t.code,null,"node_modules"),". Typically,\nthis means adding ",a.createElement(t.code,null,"node_modules")," to your ",a.createElement(t.code,null,"includePaths")," config for Sass in your\nbundler or toolchain of choice."),"\n",a.createElement(t.p,null,"To learn more about how to configure your specific toolchain to support this,\nread the documentation for configuration\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/packages/styles/docs/sass.md#configuration"},"here"),".\nWe also have published a guide over on\n",a.createElement(t.a,{href:"https://medium.com/carbondesign/migrating-from-node-sass-to-sass-eba9db004a3a"},"Medium"),"\nto help out with common problems that come from this migration."),"\n",a.createElement(i,{className:"resource-card-group"},a.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(u,{subTitle:"Sass Configuration",href:"https://github.com/carbon-design-system/carbon/blob/main/packages/styles/docs/sass.md#configuration",actionIcon:"launch"},a.createElement(d,{name:"github"}))),a.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(u,{subTitle:"One quick way to get ready for Carbon v11",href:"https://medium.com/carbondesign/migrating-from-node-sass-to-sass-eba9db004a3a",actionIcon:"launch"},a.createElement(d,{name:"medium"})))),"\n",a.createElement(t.h3,null,"Step 3: Update style import paths"),"\n",a.createElement(t.p,null,"Now, open your project’s root stylesheet to make the following changes:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-diff"},"- @import 'carbon-components/scss/globals/scss/styles.scss';\n+ @use '@carbon/react';\n")),"\n",a.createElement(t.p,null,"If you were providing any configuration options before you imported Carbon you\ncan now provide them using the ",a.createElement(t.code,null,"with")," syntax:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-scss"},"@use '@carbon/react' with (\n  $css--default-type: true,\n  $css--reset: true\n);\n")),"\n",a.createElement(t.p,null,"If you were using any feature flags in v10, you can safely remove them in v11."),"\n",a.createElement(t.p,null,"You can also use @import to bring in Carbon, if you prefer, although @use is\nrecommended."),"\n",a.createElement(t.p,null,"For cases where your projects does’t need to include everything via\n",a.createElement(t.code,null,"@use '@carbon/react'"),"; and just want to do individual component styles."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-scss"},"// Configure feature flags if needed, if not these\n// lines can be removed\n@use '@carbon/react/scss/config' with (\n  $font-path: '@ibm/plex',\n  $use-flexbox-grid: 'true'\n);\n\n// Emit the css reset\n@use '@carbon/react/scss/reset';\n\n// Emit the Plex font-face declarations\n@use '@carbon/react/scss/fonts';\n\n// Optional: emit the grid styles if using the grid.\n// This will emit the flex-grid styles if\n// $use-flexbox-grid is configured to 'true'\n@use '@carbon/react/scss/grid';\n\n// Emit the layer styles\n@use '@carbon/react/scss/layer';\n\n// Emit individual component styles\n@use '@carbon/react/scss/components/button';\n@use '@carbon/react/scss/components/tile';\n\n// Use additional local stylesheets\n@use 'sample-grid';\n")),"\n",a.createElement(t.p,null,"When migrating your custom components, some of our most used sass assets are\nincluded below, along with what you would need to have at the top of your file\nto use it. Essentially, all we are doing is including the path where we would\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/tree/main/packages/react/scss"},"find these styles"),"\nin our package."),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Carbon sass I’m using"),a.createElement(t.th,null,"Sass modules to include"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,"Type tokens"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/react/scss/type' as *;"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Theme tokens"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/react/scss/theme' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Theme mixins"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/react/scss/themes' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Design language color tokens"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/react/scss/colors' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Spacing tokens"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/react/scss/spacing' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Breakpoint mixins"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/react/scss/breakpoint' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Motion tokens and functions"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/react/scss/motion' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Rem and other convert functions"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/react/scss/utilities/convert' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Z-index helper"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/react/scss/utilities/z-index' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Focus outline helper"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/react/scss/utilities/focus-outline' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Transform rotate helper"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/react/scss/utilities/rotate' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Skeleton animation helper"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/react/scss/utilities/skeleton' as *"))))),"\n",a.createElement(t.p,null,"Now that you’ve migrated all of your imports, do a find/replace using your\nfavorite code editor. The prefix ",a.createElement(t.code,null,"carbon--")," is no longer necessary. You can do a\nfind for ",a.createElement(t.code,null,"carbon--")," and replace it with nothing to remove across all your files\nlike the example below. The full list of changes are available in our\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#changing-import-paths-from-scssglobalsscss-to-scss"},"Migration Docs"),"."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-diff"},"- @include carbon--breakpoint(lg) {\n+ @include breakpoint(lg) {\n      width: 42%;\n  }\n")),"\n",a.createElement(t.p,null,"Once you’ve removed the prefix, your styles should all be set using the old, v10\ntokens. We recommend teams install the community supported\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/stylelint-plugin-carbon-tokens"},"stylelint-plugin-carbon-tokens"),"\nto further assist in migrating your tokens to v11 tokens as the old v10 tokens\nwill be removed in our next major release."),"\n",a.createElement(i,{className:"resource-card-group"},a.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(u,{subTitle:"Changing import paths",href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#changing-import-paths-from-scssglobalsscss-to-scss",actionIcon:"launch"},a.createElement(d,{name:"github"}))),a.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(u,{subTitle:"Stylelint Plugin Carbon Tokens",href:"https://github.com/carbon-design-system/stylelint-plugin-carbon-tokens",actionIcon:"launch"},a.createElement(d,{name:"github"})))),"\n",a.createElement(t.h3,null,"Step 4: Updating component size props"),"\n",a.createElement(t.p,null,"Components with size variants have been updated to use the same API options.\nPreviously, the size options were inconsistent: ",a.createElement(t.code,null,"field"),", ",a.createElement(t.code,null,"medium"),", ",a.createElement(t.code,null,"short"),". Now,\nsize options fall under the following values:"),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Prop value"),a.createElement(t.th,null,"Size"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"xs")),a.createElement(t.td,null,"24px")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"sm")),a.createElement(t.td,null,"32px")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"md")),a.createElement(t.td,null,"40px")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"lg")),a.createElement(t.td,null,"48px")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"xl")),a.createElement(t.td,null,"64px")),a.createElement(t.tr,null,a.createElement(t.td,null,a.createElement(t.code,null,"2xl")),a.createElement(t.td,null,"80px")))),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Note:")," the default size in v11 is ",a.createElement(t.code,null,"md")," (",a.createElement(t.code,null,"40px"),")."),"\n",a.createElement(t.p,null,"Run the following codemods to update the size prop across the effected\ncomponents in your project."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"npx @carbon/upgrade migrate small-to-size-prop --write\nnpx @carbon/upgrade migrate size-prop-update --write\n")),"\n",a.createElement(t.p,null,"By running the series of codemods, they will do the following, in order:"),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"Removes the deprecated ",a.createElement(t.code,null,"small")," boolean prop and replaces it with ",a.createElement(t.code,null,'size="sm"'),"."),"\n",a.createElement(t.li,null,"Removes v10 size props and replaces them with v11 sizes props."),"\n"),"\n",a.createElement(t.p,null,"It’s important to run the npx commands in the order that they are presented\nabove. Doing them out of order might result in the codemod not working as\nintended."),"\n",a.createElement(s,null,a.createElement(t.p,null,"For full details, including options and commands available when using the\n",a.createElement(t.code,null,"@carbon/upgrade")," CLI, see the\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/tree/main/packages/upgrade"},"package documentation"),".")),"\n",a.createElement(t.p,null,"The following components all have size variants that may be affected in your\ncode. To update, you will need to switch to one of the size options listed\nabove. The codemod will make short work of these changes."),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"Accordion"),"\n",a.createElement(t.li,null,"Button"),"\n",a.createElement(t.li,null,"ComboBox"),"\n",a.createElement(t.li,null,"Dropdown"),"\n",a.createElement(t.li,null,"Multiselect"),"\n",a.createElement(t.li,null,"Filterable multiselect"),"\n",a.createElement(t.li,null,"ContentSwitcher"),"\n",a.createElement(t.li,null,"DataTable"),"\n",a.createElement(t.li,null,"DatePicker"),"\n",a.createElement(t.li,null,"FileUploader"),"\n",a.createElement(t.li,null,"FileUploaderItem"),"\n",a.createElement(t.li,null,"FileUploaderDropContainer"),"\n",a.createElement(t.li,null,"FileUploaderButton"),"\n",a.createElement(t.li,null,"Link"),"\n",a.createElement(t.li,null,"Modal"),"\n",a.createElement(t.li,null,"ComposedModal"),"\n",a.createElement(t.li,null,"NumberInput"),"\n",a.createElement(t.li,null,"OverflowMenu"),"\n",a.createElement(t.li,null,"Search"),"\n",a.createElement(t.li,null,"Select"),"\n",a.createElement(t.li,null,"Tag"),"\n",a.createElement(t.li,null,"TextInput"),"\n",a.createElement(t.li,null,"TimePicker"),"\n",a.createElement(t.li,null,"Toggle"),"\n"),"\n",a.createElement(t.h3,null,"Step 5: Update icon sizes and imports"),"\n",a.createElement(t.p,null,"The ",a.createElement(t.code,null,"@carbon/icons-react")," package has been updated to minimize the number of\nexports from the package to help reduce build and compile times. This package is\navailable under ",a.createElement(t.code,null,"@carbon/react/icons"),"."),"\n",a.createElement(t.p,null,"This update includes a change to the API of the icon components that come from\nthis package. Previously, we would export icons that included the size of the\nasset. This update allows you to bring the icon directly and specify the size\nusing the ",a.createElement(t.code,null,"size")," prop."),"\n",a.createElement(t.p,null,"Run the following codemods to update your project’s icons."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"npx @carbon/upgrade migrate icons-react-size-prop --write\nnpx @carbon/upgrade migrate update-carbon-icons-react-import-to-carbon-react --write\n")),"\n",a.createElement(t.p,null,"By running the series of codemods, they will do the following, in order:"),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"Removes the size from the import and places it on the icon directly."),"\n",a.createElement(t.li,null,"Remove the ",a.createElement(t.code,null,"@carbon/icons-react")," pathing and replace it with\n",a.createElement(t.code,null,"@carbon/react/icons"),"."),"\n"),"\n",a.createElement(t.p,null,"It’s important to run the npx commands in the order that they are presented\nabove. Doing them out of order might result in the codemod not working as\nintended."),"\n",a.createElement(s,null,a.createElement(t.p,null,"For full details, including options and commands available when using the\n",a.createElement(t.code,null,"@carbon/upgrade")," CLI, see the\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/tree/main/packages/upgrade"},"package documentation"),".")),"\n",a.createElement(t.p,null,"After running the command, instead of your icons imports looking like this:"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Before")),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"import { Add32, Add24, Add20, Add16 } from '@carbon/icons-react';\n\nfunction MyComponent() {\n  return (\n    <>\n      <Add32 />\n      <Add24 />\n      <Add20 />\n      <Add16 />\n    </>\n  );\n}\n")),"\n",a.createElement(t.p,null,"They should start looking like this:"),"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"After")),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"import { Add } from '@carbon/react/icons';\n\nfunction MyComponent() {\n  return (\n    <>\n      <Add size={32} />\n      <Add size={24} />\n      <Add size={20} />\n      <Add />\n    </>\n  );\n}\n")),"\n",a.createElement(t.h4,null,"Removed icons"),"\n",a.createElement(t.p,null,"The following deprecated icons have been removed. Use the table below to find\ntheir replacement, if available, in v11."),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,{align:"left"},"Asset"),a.createElement(t.th,{align:"left"},"v10"),a.createElement(t.th,{align:"left"},"v11"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"app-switcher"),a.createElement(t.td,{align:"left"},"AppSwitcher"),a.createElement(t.td,{align:"left"},"Switcher")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"arrows"),a.createElement(t.td,{align:"left"},"Arrows"),a.createElement(t.td,{align:"left"},"ArrowsVertical")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"back-to-top"),a.createElement(t.td,{align:"left"},"BackToTop"),a.createElement(t.td,{align:"left"},"UpToTop")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"checkbox—undeterminate"),a.createElement(t.td,{align:"left"},"CheckboxUndeterminate"),a.createElement(t.td,{align:"left"},"CheckboxIndeterminate")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"checkbox—undeterminate—filled"),a.createElement(t.td,{align:"left"},"CheckboxUndeterminateFilled"),a.createElement(t.td,{align:"left"},"CheckboxIndeterminateFilled")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"cloud—lightning"),a.createElement(t.td,{align:"left"},"CloudLightning"),a.createElement(t.td,{align:"left"},"Removed")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"cloud—rain"),a.createElement(t.td,{align:"left"},"CloudRain"),a.createElement(t.td,{align:"left"},"Removed")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"cloud—snow"),a.createElement(t.td,{align:"left"},"CloudSnow"),a.createElement(t.td,{align:"left"},"Removed")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"delete"),a.createElement(t.td,{align:"left"},"Delete"),a.createElement(t.td,{align:"left"},"TrashCan")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"edit-filter"),a.createElement(t.td,{align:"left"},"EditFilter"),a.createElement(t.td,{align:"left"},"FilterEdit")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"sunny"),a.createElement(t.td,{align:"left"},"Sunny"),a.createElement(t.td,{align:"left"},"Removed")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"research—bloch-sphere"),a.createElement(t.td,{align:"left"},"ResearchBlockSphere"),a.createElement(t.td,{align:"left"},"BlochSphere")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"research—hinton-plot"),a.createElement(t.td,{align:"left"},"ResearchHintonPlot"),a.createElement(t.td,{align:"left"},"HintonPlot")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"research—matrix"),a.createElement(t.td,{align:"left"},"ResearchMatrix"),a.createElement(t.td,{align:"left"},"Matrix")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"misuse—alt"),a.createElement(t.td,{align:"left"},"MisuseAlt"),a.createElement(t.td,{align:"left"},"MisuseOutline")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"logo—google"),a.createElement(t.td,{align:"left"},"LogoGoogle"),a.createElement(t.td,{align:"left"},"Removed")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"mammogram—stacked"),a.createElement(t.td,{align:"left"},"MammogramStacked"),a.createElement(t.td,{align:"left"},"Removed")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"logo—delicious"),a.createElement(t.td,{align:"left"},"LogoDelicious"),a.createElement(t.td,{align:"left"},"Removed")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"logo—stumbleupon"),a.createElement(t.td,{align:"left"},"LogoStumbleUpon"),a.createElement(t.td,{align:"left"},"Removed")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"letter—Aa—large"),a.createElement(t.td,{align:"left"},"LetterAaLarge"),a.createElement(t.td,{align:"left"},"TextFont")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"glyph—caution-inverted"),a.createElement(t.td,{align:"left"},"GlyphCautionInverted"),a.createElement(t.td,{align:"left"},"CautionInverted")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"glyph—caution"),a.createElement(t.td,{align:"left"},"GlyphCaution"),a.createElement(t.td,{align:"left"},"Caution")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"glyph—circle-fill"),a.createElement(t.td,{align:"left"},"GlyphCircleFill"),a.createElement(t.td,{align:"left"},"CircleFill")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"glyph—circle-stroke"),a.createElement(t.td,{align:"left"},"GlyphCircleStroke"),a.createElement(t.td,{align:"left"},"CircleStroke")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"glyph—critical"),a.createElement(t.td,{align:"left"},"GlyphCritical"),a.createElement(t.td,{align:"left"},"Critical")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"glyph—incomplete"),a.createElement(t.td,{align:"left"},"GlyphIncomplete"),a.createElement(t.td,{align:"left"},"Incomplete")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"glyph—square-fill"),a.createElement(t.td,{align:"left"},"GlyphSquareFill"),a.createElement(t.td,{align:"left"},"SquareFill")),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},"glyph—undefined"),a.createElement(t.td,{align:"left"},"GlyphUndefined"),a.createElement(t.td,{align:"left"},"Undefined")))),"\n",a.createElement(t.p,null,"However, in certain situations, we will be unable to infer what the correct\nupdate should be for a certain usage of the icon component. We have written the\ncodemod to work for most situations, but you will see console warnings for files\nthat will require you to manually review them to make sure the transforms were\napplied correctly."),"\n",a.createElement(t.p,null,"The most common manual update that teams will need to make is if a ",a.createElement(t.code,null,"prop")," where\nthe icon is passed to places a ",a.createElement(t.code,null,"ref")," on the icon. For example,"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"function MyComponent({ renderIcon: Icon }) {\n  const ref = useRef(null);\n  return <Icon ref={ref} />;\n}\n\n// Before\n<MyComponent renderIcon={Search16} />\n\n// After the codemod\n<MyComponent renderIcon={props => <Search size={16} {...props} />} />\n")),"\n",a.createElement(t.p,null,"In this situation, you will need to update your code to use ",a.createElement(t.code,null,"React.forwardRef"),":"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-jsx"},"<MyComponent\n  renderIcon={React.forwardRef((props, ref) => (\n    <Search ref={ref} size={16} {...props} />\n  ))}\n/>;\n\n// Or, alternatively:\nconst Search16 = React.forwardRef((props, ref) => {\n  return <Search ref={ref} size={16} {...props} />;\n});\n\n<MyComponent renderIcon={Search16} />;\n")),"\n",a.createElement(t.h4,null,"Manual migration"),"\n",a.createElement(t.p,null,"In addition to the automated codemods above, there are several patterns in your\ncodebase that you will need to update manually:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"If you use the name ",a.createElement(t.code,null,"ForwardRef(IconName16)")," in a test you will need to\nmanually change this. Prefer to use the component directly if using enzyme"),"\n",a.createElement(t.li,null,"If you use snapshot tests, the structure will change and include a ",a.createElement(t.code,null,"size"),"\nprop. Make sure that the ",a.createElement(t.code,null,"size")," prop value matches what your icon name used to\nbe. For example, ",a.createElement(t.code,null,"<Add16 />")," should become ",a.createElement(t.code,null,"<Add size={16} />")),"\n"),"\n",a.createElement(t.h3,null,"Step 6: Update components that have changed"),"\n",a.createElement(t.p,null,"In v11, we have updated the APIs of certain components in one of the following\nways:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"Update ",a.createElement(t.code,null,"className")," usage to be applied to the outermost element of a component"),"\n",a.createElement(t.li,null,"Remove props that have been deprecated in v10"),"\n",a.createElement(t.li,null,"Refactor the API to ship an accessible component"),"\n"),"\n",a.createElement(t.p,null,"For a full list of changes to components, check out our\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#carbon-components-react"},"Migration Docs"),".\nBelow are some common changes that may impact you and your usage of Carbon."),"\n",a.createElement(t.h4,null,"Changes to ",a.createElement(t.code,null,"className")),"\n",a.createElement(t.p,null,"The usage of ",a.createElement(t.code,null,"className")," prop has been updated so that the class is passed to\nthe outermost element of a component’s inner markup. This was already the case\nfor most components and this change brings along the remaining components in the\nlibrary to this convention."),"\n",a.createElement(t.p,null,"The following components previously were not applying the ",a.createElement(t.code,null,"className")," prop to\nthe outermost element. If you were using a custom ",a.createElement(t.code,null,"className")," to target an inner\nelement for any of these components, you will have to update your selectors to\nnow account for the ",a.createElement(t.code,null,"className")," being placed on the outermost element."),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"Checkbox"),"\n",a.createElement(t.li,null,"ComboBox"),"\n",a.createElement(t.li,null,"Table"),"\n",a.createElement(t.li,null,"TableToolbar"),"\n",a.createElement(t.li,null,"DataTableSkeleton"),"\n",a.createElement(t.li,null,"DatePicker"),"\n",a.createElement(t.li,null,"DatePickerSkeleton"),"\n",a.createElement(t.li,null,"DatePickerInput"),"\n",a.createElement(t.li,null,"Dropdown"),"\n",a.createElement(t.li,null,"FileUploaderDropContainer"),"\n",a.createElement(t.li,null,"FileUploaderItem"),"\n",a.createElement(t.li,null,"FormGroup"),"\n",a.createElement(t.li,null,"FilterableMultiSelect"),"\n",a.createElement(t.li,null,"MultiSelect"),"\n",a.createElement(t.li,null,"NotificationTextDetails"),"\n",a.createElement(t.li,null,"NotificationIcon"),"\n",a.createElement(t.li,null,"NumberInput"),"\n",a.createElement(t.li,null,"OverflowMenuItem"),"\n",a.createElement(t.li,null,"RadioButtonGroup"),"\n",a.createElement(t.li,null,"RadioTile"),"\n",a.createElement(t.li,null,"Select"),"\n",a.createElement(t.li,null,"Slider"),"\n",a.createElement(t.li,null,"Switch"),"\n",a.createElement(t.li,null,"TextArea"),"\n",a.createElement(t.li,null,"ControlledPasswordInput"),"\n",a.createElement(t.li,null,"PasswordInput"),"\n",a.createElement(t.li,null,"TextInput"),"\n",a.createElement(t.li,null,"TimePicker"),"\n",a.createElement(t.li,null,"Tooltip"),"\n",a.createElement(t.li,null,"HeaderContainer"),"\n"),"\n",a.createElement(t.h4,null,"Notification"),"\n",a.createElement(t.p,null,"We have updated the notification components to be more accessible out of the\nbox. ",a.createElement(t.code,null,"ToastNotification")," and ",a.createElement(t.code,null,"InlineNotification")," now have ",a.createElement(t.code,null,'role="status"')," by\ndefault with additional ",a.createElement(t.code,null,"role")," options of ",a.createElement(t.code,null,"log")," and ",a.createElement(t.code,null,"alert"),". These components do\nnot receive focus and should be used for information-only use cases. These\ncomponents no longer accept actions or interactive children."),"\n",a.createElement(t.p,null,"For notifications requiring an action, a new ",a.createElement(t.code,null,"ActionableNotification")," component\nis available. It has a ",a.createElement(t.code,null,'role="alertdialog"')," and receives focus by default.\nAutomatic placement of focus can be turned off via the new ",a.createElement(t.code,null,"hasFocus")," prop."),"\n",a.createElement(t.p,null,"All notifications have a new optional ",a.createElement(t.code,null,"closeOnEscape")," prop, it enables\nnotifications to closed by pressing the ",a.createElement(t.code,null,"escape")," key. For more details, see the\n",a.createElement(t.a,{href:"https://www.carbondesignsystem.com/components/notification/accessibility"},"notification components accessibility page"),"."),"\n",a.createElement(t.h4,null,"Update ",a.createElement(t.code,null,"ToastNotification")," usage"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.code,null,"children")," can no longer contain interactive elements. A ",a.createElement(t.code,null,"ToastNotification"),"\ncontaining an action or interactive children should be replaced with\n",a.createElement(t.code,null,"ActionableNotification"),"."),"\n",a.createElement(t.li,null,"The ",a.createElement(t.code,null,"notificationType")," prop is no longer needed and can be removed."),"\n",a.createElement(t.li,null,"The default ",a.createElement(t.code,null,"role")," is now ",a.createElement(t.code,null,"status"),". ",a.createElement(t.code,null,"log")," and ",a.createElement(t.code,null,"alert")," can also be used."),"\n",a.createElement(t.li,null,"The ",a.createElement(t.code,null,"closeOnEscape")," prop toggles the closing of notifications via the ",a.createElement(t.code,null,"escape"),"\nkey."),"\n"),"\n",a.createElement(t.h4,null,"Update ",a.createElement(t.code,null,"InlineNotification")," usage"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"The ",a.createElement(t.code,null,"actions")," prop has been removed. An ",a.createElement(t.code,null,"InlineNotification")," containing an\naction or interactive children should be replaced with\n",a.createElement(t.code,null,"ActionableNotification")," configured with the ",a.createElement(t.code,null,"inline")," prop."),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"children")," can no longer contain interactive elements."),"\n",a.createElement(t.li,null,"The ",a.createElement(t.code,null,"notificationType")," prop is no longer needed and can be removed."),"\n",a.createElement(t.li,null,"The default ",a.createElement(t.code,null,"role")," is now ",a.createElement(t.code,null,"status"),". ",a.createElement(t.code,null,"log")," and ",a.createElement(t.code,null,"alert")," can also be used."),"\n",a.createElement(t.li,null,"The ",a.createElement(t.code,null,"closeOnEscape")," prop toggles the closing of notifications via the ",a.createElement(t.code,null,"escape"),"\nkey."),"\n"),"\n",a.createElement(t.h4,null,"When using ",a.createElement(t.code,null,"ActionableNotification"),":"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"The ",a.createElement(t.code,null,"inline")," prop enables a styling variation resulting in a similar visual\ndesign to ",a.createElement(t.code,null,"InlineNotification"),"."),"\n",a.createElement(t.li,null,"The ",a.createElement(t.code,null,"actionButtonLabel")," prop configures the action button text."),"\n",a.createElement(t.li,null,"The ",a.createElement(t.code,null,"hasFocus")," prop toggles the automatic placement of focus."),"\n",a.createElement(t.li,null,"The ",a.createElement(t.code,null,"closeOnEscape")," prop toggles the closing of notifications via the ",a.createElement(t.code,null,"escape"),"\nkey."),"\n"),"\n",a.createElement(t.h4,null,"Tabs"),"\n",a.createElement(t.p,null,"Tabs have been updated to be more composable so that you have the flexibility\nand control to make them look and act how you want."),"\n",a.createElement(t.p,null,"In v10, you may have code that looks like the following:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-js"},'<Tabs>\n  <Tab label="Tab label 1">\n    <p>Content for first tab goes here.</p>\n  </Tab>\n  <Tab label="Tab label 2">\n    <p>Content for second tab goes here.</p>\n  </Tab>\n  <Tab label="Tab label 3" disabled>\n    <p>Content for third tab goes here.</p>\n  </Tab>\n  <Tab\n    label="Tab label 4 shows truncation"\n    title="Tab label 4 shows truncation">\n    <p>Content for fourth tab goes here.</p>\n  </Tab>\n</Tabs>\n')),"\n",a.createElement(t.p,null,"Those same Tabs, migrated to v11:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-js"},'<Tabs>\n  <TabList>\n    <Tab>Tab Label 1</Tab>\n    <Tab>Tab Label 2</Tab>\n    <Tab disabled>Tab Label 3</Tab>\n    <Tab title="Tab Label 4 shows truncation">Tab Label 4 shows truncation</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>Content for first tab goes here.</TabPanel>\n    <TabPanel>Content for second tab goes here.</TabPanel>\n    <TabPanel>Content for third tab goes here.</TabPanel>\n    <TabPanel>Content for fourth tab goes here.</TabPanel>\n  </TabPanels>\n</Tabs>\n')),"\n",a.createElement(t.h4,null,"Update ",a.createElement(t.code,null,"Tabs")," and ",a.createElement(t.code,null,"Tab")," usage"),"\n",a.createElement(t.p,null,"All the same functionality for Tabs is available in v11 and more! However, some\nprops have been deprecated because they have either been renamed or are no\nlonger needed. Below are the minor tweaks in naming or implementation."),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"the ",a.createElement(t.code,null,"type")," prop is deprecated. Both “contained” and “default” tabs still exist\nbut now can be called by adding the prop ",a.createElement(t.code,null,"contained")," to the ",a.createElement(t.code,null,"TabList"),"."),"\n",a.createElement(t.li,null,"Default tabs are now referred to as line tabs in our documentation here and in\nour storybook."),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"hidden")," prop is no longer needed with the new composable Tabs. You have\ncontrol over tab content and when it is hidden through the ",a.createElement(t.code,null,"TabPanel")," and\n",a.createElement(t.code,null,"TabPanels")," components."),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"selected")," prop is now named ",a.createElement(t.code,null,"selectedIndex"),"."),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"tabContentClassName")," is no longer needed. ",a.createElement(t.code,null,"TabPanel")," (equivalent to tab\ncontent) takes in a className prop on its outermost node."),"\n",a.createElement(t.li,null,"For ",a.createElement(t.code,null,"Tab"),", ",a.createElement(t.code,null,"label")," is no longer needed. ",a.createElement(t.code,null,"children")," of ",a.createElement(t.code,null,"Tab")," are now the label."),"\n",a.createElement(t.li,null,"Due to its composability, ",a.createElement(t.code,null,"renderAnchor"),", ",a.createElement(t.code,null,"renderButton"),", ",a.createElement(t.code,null,"renderContent")," are\nno longer needed on ",a.createElement(t.code,null,"Tab"),". You now have full control over what is rendered\ninside of ",a.createElement(t.code,null,"Tab")," and ",a.createElement(t.code,null,"TabPanel"),"."),"\n",a.createElement(t.li,null,"Because ",a.createElement(t.code,null,"renderButton")," is no longer needed, the associated ",a.createElement(t.code,null,"tabIndex")," prop has\nalso been deprecated."),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"selected")," on ",a.createElement(t.code,null,"Tab")," is deprecated in favor or ",a.createElement(t.code,null,"selectedIndex"),", now placed on\n",a.createElement(t.code,null,"Tabs")," instead."),"\n"),"\n",a.createElement(t.p,null,"For more details about the changes to Tabs, see our storybook documentation\n",a.createElement(t.a,{href:"https://react.carbondesignsystem.com/?path=/docs/components-tabs--default"},"here"),"."),"\n",a.createElement(t.h3,null,"Step 7: Done with @carbon/react!"),"\n",a.createElement(t.p,null,"And that’s it! You’re done. At this point you have migrated to use Carbon v11\nusing the ",a.createElement(t.code,null,"@carbon/react")," package."),"\n",a.createElement(t.p,null,"If you run into any problems after this point, please feel free to reach out to\nus over on Slack or open up a discussion on\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/discussions/categories/help"},"GitHub"),".\nWe want to make this migration experience as seamless as possible and will be\nmonitoring both areas to help out."),"\n",a.createElement(t.h2,null,"Migrating an app or library using just styles"),"\n",a.createElement(t.p,null,"Starting in v11, the styles for Carbon live in the ",a.createElement(t.code,null,"@carbon/styles")," package.\nAlternatively, you can continue to use ",a.createElement(t.code,null,"carbon-components")," as it re-exports\nstyles from this package directly."),"\n",a.createElement(t.p,null,"For teams using Svelte, Angular, Vue, LWC, or Web Components, please\n",a.createElement(t.a,{href:"https://carbondesignsystem.com/developing/frameworks/web-components"},"review the documentation"),",\nfor those respective frameworks before making the migration to v11."),"\n",a.createElement(t.h3,null,"Step 1: Install @carbon/styles"),"\n",a.createElement(t.p,null,"To get started, uninstall ",a.createElement(t.code,null,"carbon-components")," from your project:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"npm uninstall carbon-components\n")),"\n",a.createElement(t.p,null,"Or, with ",a.createElement(t.a,{href:"https://yarnpkg.com/"},"Yarn"),":"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"yarn remove carbon-components\n")),"\n",a.createElement(t.p,null,"Next, install the ",a.createElement(t.code,null,"@carbon/styles")," package:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"npm install @carbon/styles\n")),"\n",a.createElement(t.p,null,"Or, with ",a.createElement(t.a,{href:"https://yarnpkg.com/"},"Yarn"),":"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"yarn add @carbon/styles\n")),"\n",a.createElement(t.h3,null,"Step 2: Install and configure Dart Sass"),"\n",a.createElement(t.p,null,"Previously, ",a.createElement(t.code,null,"carbon-components")," supported being compiled by different Sass\nlibraries. Starting in v11, the ",a.createElement(t.code,null,"@carbon/styles")," package requires Dart Sass\nthrough the ",a.createElement(t.code,null,"sass")," package in order to compile. This change comes from our\nmigration to Sass Modules in order to improve our compilation times and overall\nproject structure."),"\n",a.createElement(t.p,null,"If you don’t have this dependency already in your project, you can install it:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"npm install sass\n")),"\n",a.createElement(t.p,null,"Or, with ",a.createElement(t.a,{href:"https://yarnpkg.com/"},"Yarn"),":"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"yarn add sass\n")),"\n",a.createElement(t.p,null,"Similarly, if you currently use ",a.createElement(t.code,null,"node-sass")," now is a good time to remove that\ndependency from your project. In most situations, Dart Sass is a drop-in\nreplacement for ",a.createElement(t.code,null,"node-sass")," and should require no changes on your end in order\nto use it once you install the dependency."),"\n",a.createElement(t.p,null,"One you have Dart Sass installed, it’s important that you configure your project\nto support resolving imports in Sass from ",a.createElement(t.code,null,"node_modules"),". Typically, this means\nadding ",a.createElement(t.code,null,"node_modules")," to your ",a.createElement(t.code,null,"includePaths")," config for Sass in your bundler or\ntoolchain of choice."),"\n",a.createElement(t.p,null,"To learn more about how to configure your specific toolchain to support this,\nread the documentation for configuration\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/packages/styles/docs/sass.md#configuration"},"here"),".\nWe also have published a guide over on\n",a.createElement(t.a,{href:"https://medium.com/carbondesign/migrating-from-node-sass-to-sass-eba9db004a3a"},"Medium"),"\nto help out with common problems that come from this migration."),"\n",a.createElement(i,{className:"resource-card-group"},a.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(u,{subTitle:"Sass Configuration",href:"https://github.com/carbon-design-system/carbon/blob/main/packages/styles/docs/sass.md#configuration",actionIcon:"launch"},a.createElement(d,{name:"github"}))),a.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(u,{subTitle:"One quick way to get ready for Carbon v11",href:"https://medium.com/carbondesign/migrating-from-node-sass-to-sass-eba9db004a3a",actionIcon:"launch"},a.createElement(d,{name:"medium"})))),"\n",a.createElement(t.h3,null,"Step 3: Update import paths and tokens"),"\n",a.createElement(t.p,null,"Now, open your project’s root stylesheet to make the following changes:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-diff"},"- @import 'carbon-components/scss/globals/scss/styles.scss';\n+ @use '@carbon/styles';\n")),"\n",a.createElement(t.p,null,"If you were providing any configuration options before you imported Carbon you\ncan now provide them using the ",a.createElement(t.code,null,"with")," syntax:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-scss"},"@use '@carbon/styles' with (\n  $css--default-type: true,\n  $css--reset: true\n);\n")),"\n",a.createElement(t.p,null,"For cases where your projects does’t need to include everything via\n",a.createElement(t.code,null,"@use '@carbon/styles'"),"; and just want to do individual component styles."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-scss"},"// configure feature flags if needed, if not this line can be removed\n@use '@carbon/styles/scss/config' with (\n  $font-path: '@ibm/plex'\n);\n\n// ensure the css reset is included\n@use '@carbon/styles/scss/reset';\n\n// add styles for components individually\n@use '@carbon/styles/scss/components/button';\n")),"\n",a.createElement(t.p,null,"When migrating your custom components, some of our most used sass assets are\nincluded below, along with what you would need to have at the top of your file\nto use it. Essentially, all we are doing is including the path where we would\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/tree/main/packages/styles/scss"},"find these styles"),"\nin our package."),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Carbon sass I’m using"),a.createElement(t.th,null,"Sass modules to include"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,"Theme tokens"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/styles/scss/theme' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Theme mixins"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/styles/scss/themes' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Design language color tokens"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/styles/scss/colors' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Spacing tokens"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/styles/scss/spacing' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Breakpoint mixins"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/styles/scss/breakpoint' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Motion tokens and functions"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/styles/scss/motion' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Rem and other convert functions"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/styles/scss/utilities/convert' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Z-index helper"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/styles/scss/utilities/z-index' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Focus outline helper"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/styles/scss/utilities/focus-outline' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Transform rotate helper"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/styles/scss/utilities/rotate' as *"))),a.createElement(t.tr,null,a.createElement(t.td,null,"Skeleton animation helper"),a.createElement(t.td,null,a.createElement(t.code,null,"@use '@carbon/styles/scss/utilities/skeleton' as *"))))),"\n",a.createElement(t.p,null,"Now that you’ve migrated all of your imports, do a find/replace using your\nfavorite code editor. The prefix",a.createElement(t.code,null,"carbon--")," is no longer necessary. You can do a\nfind for ",a.createElement(t.code,null,"carbon--")," and replace it with nothing to remove across all your files\nlike the example below. The full list of changes are available in our\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#changing-import-paths-from-scssglobalsscss-to-scss"},"Migration Docs"),"."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-diff"},"- @include carbon--breakpoint(lg) {\n+ @include breakpoint(lg) {\n      width: 42%;\n  }\n")),"\n",a.createElement(t.p,null,"Once you’ve removed the prefix, your styles should all be set using the old, v10\ntokens. We recommend teams install the community supported\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/stylelint-plugin-carbon-tokens"},"stylelint-plugin-carbon-tokens"),"\nto further assist in migrating your tokens to v11 tokens as the old v10 tokens\nwill be removed in our next major release."),"\n",a.createElement(i,{className:"resource-card-group"},a.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(u,{subTitle:"Changing import paths",href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#changing-import-paths-from-scssglobalsscss-to-scss",actionIcon:"launch"},a.createElement(d,{name:"github"}))),a.createElement(m,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(u,{subTitle:"Stylelint Plugin Carbon Tokens",href:"https://github.com/carbon-design-system/stylelint-plugin-carbon-tokens",actionIcon:"launch"},a.createElement(d,{name:"github"})))),"\n",a.createElement(t.h3,null,"Step 4: Update bx to cds"),"\n",a.createElement(t.p,null,"If you are targeting specific selectors that use the ",a.createElement(t.code,null,"bx")," prefix, you will need\nto update your code to either target the ",a.createElement(t.code,null,"cds")," prefix for selectors or update\nCarbon’s configuration to use ",a.createElement(t.code,null,"bx")," as the prefix by writing the following:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-scss"},"// Option A\n@use '@carbon/styles' with (\n  $prefix: 'bx'\n);\n// Option B\n@use '@carbon/styles/scss/config' with (\n  $prefix: 'bx'\n);\n")),"\n",a.createElement(t.h3,null,"Step 5: Enable flexbox grid"),"\n",a.createElement(t.p,null,"If you are using the flexbox-based grid in your project, you can continue to use\nthis feature in v11 by importing the following:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-scss"},"@use '@carbon/styles/scss/grid/flexbox';\n")),"\n",a.createElement(t.p,null,"This is important due to the fact that the CSS Grid implementation is used by\ndefault in v11. However, bringing in the flexbox grid styles in this way means\nthat your layouts will continue to work the same as in v10."),"\n",a.createElement(t.h3,null,"Step 6: Done with @carbon/styles!"),"\n",a.createElement(t.p,null,"And that’s it! You’re done. At this point you have migrated to use Carbon v11\nusing the ",a.createElement(t.code,null,"@carbon/styles")," package."),"\n",a.createElement(t.p,null,"If you run into any problems after this point, please feel free to reach out to\nus over on Slack or open up a discussion on\n",a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/discussions/categories/help"},"GitHub"),".\nWe want to make this migration experience as seamless as possible and will be\nmonitoring both areas to help out."),"\n",a.createElement(t.h2,null,"Migrating carbon-icons"),"\n",a.createElement(t.p,null,"The ",a.createElement(t.code,null,"carbon-icons")," package has been deprecated and is no longer supported. To\nuse icons from the Carbon Design System, you should install the appropriate\nlibrary to use with your framework:"),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,{align:"left"},"Package"),a.createElement(t.th,{align:"left"},"Framework"),a.createElement(t.th,{align:"left"},"Link"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},a.createElement(t.code,null,"@carbon/icons-react")),a.createElement(t.td,{align:"left"},"React"),a.createElement(t.td,{align:"left"},a.createElement(t.a,{href:"https://npmjs.com/package/@carbon/icons-react"},"Link"))),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},a.createElement(t.code,null,"@carbon/icons-angular")),a.createElement(t.td,{align:"left"},"Angular"),a.createElement(t.td,{align:"left"},a.createElement(t.a,{href:"https://npmjs.com/package/@carbon/icons-angular"},"Link"))),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},a.createElement(t.code,null,"@carbon/icons-vue")),a.createElement(t.td,{align:"left"},"Vue"),a.createElement(t.td,{align:"left"},a.createElement(t.a,{href:"https://npmjs.com/package/@carbon/icons-vue"},"Link"))),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},a.createElement(t.code,null,"carbon-icons-svelte")),a.createElement(t.td,{align:"left"},"Svelte"),a.createElement(t.td,{align:"left"},a.createElement(t.a,{href:"https://npmjs.com/package/carbon-icons-svelte"},"Link"))),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},a.createElement(t.code,null,"@carbon/icons")),a.createElement(t.td,{align:"left"},"Vanilla JavaScript"),a.createElement(t.td,{align:"left"},a.createElement(t.a,{href:"https://npmjs.com/package/@carbon/icons"},"Link"))))),"\n",a.createElement(t.p,null,"If you are using ",a.createElement(t.code,null,"@carbon/react"),", you can directly import icons from\n",a.createElement(t.code,null,"@carbon/react/icons"),"."),"\n",a.createElement(t.h2,null,"Migrating Carbon elements"),"\n",a.createElement(t.p,null,"The packages that we ship for the IBM Design Language have been updated in v11.\nThe most notable change is that these packages now require Dart Sass in order to\ncompile as they now use Sass Modules to improve compilation times."),"\n",a.createElement(t.p,null,"If you were directly importing from one of these element packages, consider\nimporting from either ",a.createElement(t.code,null,"@carbon/styles")," or ",a.createElement(t.code,null,"@carbon/react")," instead. Both of these\npackages provide entrypoints for elements packages on top of the styles for\nCarbon itself."),"\n",a.createElement(t.p,null,"For teams using these packages directly, you will need to update each of the\nelements packages you’re using to the latest version."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"npm install @carbon/<package-name>@latest\n")),"\n",a.createElement(t.p,null,"Or, with ",a.createElement(t.a,{href:"https://yarnpkg.com/"},"Yarn"),":"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-bash"},"yarn upgrade @carbon/<package-name>@latest\n")),"\n",a.createElement(t.p,null,"Afterwards, you will need to update the import paths and import names themselves\nthat you bring in. In general, each package now supports importing from the\npackage directly and all ",a.createElement(t.code,null,"carbon--")," prefixed variables, mixins, and functions\nhave been renamed to remove the prefix."),"\n",a.createElement(t.p,null,"For full details fo the changes to each elements package, check out the links\nbelow."),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,{align:"left"},"Package"),a.createElement(t.th,{align:"left"},"Migration Docs"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},a.createElement(t.code,null,"@carbon/colors")),a.createElement(t.td,{align:"left"},a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#carboncolors"},"Link"))),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},a.createElement(t.code,null,"@carbon/elements")),a.createElement(t.td,{align:"left"},a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#carbonelements"},"Link"))),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},a.createElement(t.code,null,"@carbon/grid")),a.createElement(t.td,{align:"left"},a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#carbongrid"},"Link"))),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},a.createElement(t.code,null,"@carbon/layout")),a.createElement(t.td,{align:"left"},a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#carbonlayout"},"Link"))),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},a.createElement(t.code,null,"@carbon/motion")),a.createElement(t.td,{align:"left"},a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#carbonmotion"},"Link"))),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},a.createElement(t.code,null,"@carbon/themes")),a.createElement(t.td,{align:"left"},a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#carbonthemes"},"Link"))),a.createElement(t.tr,null,a.createElement(t.td,{align:"left"},a.createElement(t.code,null,"@carbon/type")),a.createElement(t.td,{align:"left"},a.createElement(t.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#carbontype"},"Link"))))),"\n",a.createElement(t.p,null,"If you were previously using the ",a.createElement(t.code,null,"@carbon/import-once")," package, you can continue\nto use this in v11. However, this package will receive no further updates after\nCarbon switched to using Sass Modules."))}function o(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}t.default=function(e={}){const{wrapper:t}=Object.assign({},(0,l.R)(),e.components);return t?a.createElement(t,e,a.createElement(r,e)):r(e)}}}]);