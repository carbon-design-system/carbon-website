"use strict";(self.webpackChunkcarbondesignsystem=self.webpackChunkcarbondesignsystem||[]).push([[457384],{638866:function(e,n,t){t.r(n);var o=t(28453),a=t(296540);function r(e){const n=Object.assign({p:"p",h2:"h2",ul:"ul",li:"li",a:"a",h3:"h3",h4:"h4",code:"code"},(0,o.R)(),e.components),{PageDescription:t,AnchorLinks:r,AnchorLink:s,Row:l,Column:c,ResourceCard:u,MdxIcon:h}=n;return s||i("AnchorLink",!0),r||i("AnchorLinks",!0),c||i("Column",!0),h||i("MdxIcon",!0),t||i("PageDescription",!0),u||i("ResourceCard",!0),l||i("Row",!0),a.createElement(a.Fragment,null,a.createElement(t,null,a.createElement(n.p,null,"Ready to make the move to Carbon v11? Our Migration Guide helps designers and\ndevelopers learn more about this release and get started migrating to v11")),"\n",a.createElement(r,null,a.createElement(s,null,"Overview"),a.createElement(s,null,"Getting started"),a.createElement(s,null,"YourLearning"),a.createElement(s,null,"Updates")),"\n",a.createElement(n.h2,null,"Overview"),"\n",a.createElement(n.p,null,"Carbon v11 focuses on quality of life updates for designers and developers. The\nhighlights of this release include:"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Changes to how we name our tokens to make them easier to use"),"\n",a.createElement(n.li,null,"Improved theming to enable light and dark mode support in product"),"\n",a.createElement(n.li,null,"The introduction of CSS Grid to build robust layouts on top of the 2x grid"),"\n",a.createElement(n.li,null,"A 90% decrease in compilation for Styles from Carbon"),"\n",a.createElement(n.li,null,"Updates to the accessibility of our components"),"\n"),"\n",a.createElement(n.p,null,"With no changes to the IBM Design Language, v11 will not require any\nbrand-driven product redesigns."),"\n",a.createElement(n.p,null,"To learn more about everything included in this release, check out our\n",a.createElement(n.a,{href:"#changelog"},"Updates")," section. To get started migrating, visit out our\n",a.createElement(n.a,{href:"#getting-started"},"Getting started")," section below."),"\n",a.createElement(n.h2,null,"Getting started"),"\n",a.createElement(n.p,null,"Whether you are a designer or a developer, we have curated guidance ready for\nyou as your team makes their migration. Dive in using one of the looks below to\nget started."),"\n",a.createElement(l,{className:"resource-card-group"},a.createElement(c,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(u,{subTitle:"Designer migration",href:"/migrating/guide/design",actionIcon:"arrowRight"},a.createElement(h,{name:"carbon"}))),a.createElement(c,{colLg:4,colMd:4,noGutterSm:!0},a.createElement(u,{subTitle:"Developer migration",href:"/migrating/guide/develop",actionIcon:"arrowRight"},a.createElement(h,{name:"carbon"})))),"\n",a.createElement(n.h2,null,"YourLearning"),"\n",a.createElement(n.p,null,"Watch Carbon developers Abbey Hart and Josh Black showcase some of the latest\nfeatures and enhancements in v11, including theming and CSS Grid by catching the\nCarbon and IDL weekly design playback. In a collaboration with IBM Bluetalks,\nwatch Josefina Mancilla show off layering and storybook among many other\nexciting new things that come with our latest version in her talk, Carbon v11:\nThe One with the Cool Stuff."),"\n",a.createElement(l,{className:"resource-card-group"},a.createElement(c,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(u,{subTitle:"Carbon and IDL bi-weekly design playback: Carbon v11 release",href:"https://ec.yourlearning.ibm.com/w3/playback/10263311",actionIcon:"launch"},a.createElement(h,{name:"yourlearning"}))),a.createElement(c,{colMd:4,colLg:4,noGutterSm:!0},a.createElement(u,{subTitle:"Carbon v11: The One with the Cool Stuff",href:"https://w3.ibm.com/w3publisher/blueprint-talks/open-source/carbon-v11-the-one-with-the-cool-stuff",actionIcon:"launch"}))),"\n",a.createElement(n.h2,null,"Updates"),"\n",a.createElement(n.p,null,"This section covers the new features and updates that are introduced in Carbon\nv11. If you’re looking for how to migrate a project from v10 to v11, check out\nour ",a.createElement(n.a,{href:"#getting-started"},"Getting started")," section above."),"\n",a.createElement(n.p,null,"You are not required to use any of the new features introduced in this release.\nInstead, they are meant to be gradually adopted over time when the use case\ncomes up in your product. Each section will given an overview of the changes and\nwill help you understand how to learn more about the feature in v11."),"\n",a.createElement(n.p,null,"For an overview of all the changes in this release, check out our\n",a.createElement(n.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md"},"Migration Docs")),"\n",a.createElement(n.h3,null,"Theming"),"\n",a.createElement(n.p,null,"One of the first areas we revisited in v11 was our color tokens. We heard from\nyou all that the names of tokens can be confusing and hard to understand, making\nit difficult to accurately apply them without constantly referencing our site."),"\n",a.createElement(n.p,null,"To address this, we investigated several ways to represent usage directly in the\ntoken name in order to make them more intuitive to use. After discussing these\nvarious options and going through rounds of feedback on GitHub, we decided on an\napproach that makes it easier to understand and apply tokens based on their\nusage."),"\n",a.createElement(n.p,null,"To learn more about the new color tokens, check out our\n",a.createElement(n.a,{href:"https://carbondesignsystem.com/elements/color/usage"},"Color Guidelines"),". You can\nalso learn more about concepts like layering\n",a.createElement(n.a,{href:"https://carbondesignsystem.com/elements/color/implementation"},"here"),"."),"\n",a.createElement(n.h4,null,"Light & Dark mode"),"\n",a.createElement(n.p,null,"All of these updated color tokens are now shipped as CSS Custom Properties in\nv11. This technique makes it incredibly simple and performant to customize the\ntheme of your product. We’re most excited about using this for Light & Dark Mode\nsupport in products."),"\n",a.createElement(n.p,null,"This technique also can allow teams to customize a specific area of the page, a\nspecific component, or other models within their product. The best part is that\nany component using our color tokens just works, regardless of the page or\ninline theme."),"\n",a.createElement(n.h4,null,"Typography"),"\n",a.createElement(n.p,null,"Type tokens are being updated in v11 along with the changes to color tokens.\nThese changes involve mostly name changes. The values and roles of these tokens\nremain the same between v10 and v11."),"\n",a.createElement(n.p,null,"To learn more about the new type tokens in v11, check out our\n",a.createElement(n.a,{href:"https://www.carbondesignsystem.com/elements/typography/productive/"},"Typography Guidelines"),".\nIf you’re curious about specific changes to tokens, take a look at our\n",a.createElement(n.a,{href:"https://github.com/carbon-design-system/carbon/blob/main/docs/migration/v11.md#type-tokens"},"v11 Migration Docs"),"."),"\n",a.createElement(n.h3,null,"Design kits"),"\n",a.createElement(n.h4,null,"Figma"),"\n",a.createElement(n.p,null,"All v11 themes are now available in a library in Figma. Head to the\n",a.createElement(n.a,{href:"https://carbondesignsystem.com/designing/get-started/#core-design-kits"},"get started page"),"\nto see the full list of available core libraries. We have leveraged Figma’s\nlatest features in this release, which may result in breaking changes to some of\nour components. To meet team’s migration preferences, we have separate v11 and\nv10 libraries. If you are still on v10, migrate to the v11 libraries when you\nare ready to do so."),"\n",a.createElement(n.h3,null,"New packages"),"\n",a.createElement(n.p,null,"Carbon v11 introduces new code packages to simplify how you bring Carbon into\nyour project. For many teams, you may be installing several packages in order to\nuse Carbon, including:"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"carbon-components"),"\n",a.createElement(n.li,null,"carbon-components-react"),"\n",a.createElement(n.li,null,"carbon-icons"),"\n",a.createElement(n.li,null,"@carbon/icons-react"),"\n"),"\n",a.createElement(n.p,null,"Starting in v11, the styles, React components, and icons are all available under\nthe @carbon/react package. Each of the packages above can still be downloaded\nindividually but we brought them together to simplify bringing Carbon into your\nproject."),"\n",a.createElement(n.p,null,"The @carbon/styles package is also being introduced in v11. This package\ncontains all of the Sass styles for our components and is being re-exported by\n@carbon/react. The Sass styles in this package have gone through a number of\nupdates as we’ve shifted over to Dart Sass in order to improve our compile times\nby over 90%."),"\n",a.createElement(n.h3,null,"Dart Sass"),"\n",a.createElement(n.p,null,"Sass files in Carbon now require Dart Sass in order to compile. The decision to\nmove towards Dart Sass was made after the announcement in the blog post, LibSass\nis deprecated. Like many of you who use Sass, we’ve relied heavily on LibSass\nthrough projects like node-sass. We would not be where we are today without all\nthe hard work and effort that went into these projects."),"\n",a.createElement(n.h4,null,"Sass Modules"),"\n",a.createElement(n.p,null,"With the transition to using sass, Carbon has updated its Sass files to leverage\nSass Modules. This new module system was introduced in 2019 and we knew that it\nwould be a great fit for the way Carbon authors and ships Sass files."),"\n",a.createElement(n.p,null,"This new module system created an opportunity to simplify how you bring styles\ninto your project from Carbon, while drastically reducing compile times. The\nbest part is that you can still ",a.createElement(n.code,null,"@import")," any of the files from Carbon if you\nwould like, there is no requirement for you and your project to move to Sass\nModules in order to benefit from these changes."),"\n",a.createElement(n.h4,null,"Compile time improvements"),"\n",a.createElement(n.p,null,"One of the most common and frustrating challenges team can run into when using\nCarbon are long Sass compilation times. Parts of this were related to how Carbon\nwas structured, other parts were related to toolchains, but overall we are\nincredibly excited to announce that we drastically improved the performance of\ncompiling Carbon Sass files in v11."),"\n",a.createElement(n.p,null,"Through moving to Dart Sass, migrating to Sass Modules, and changing our overall\nfile structure we were able to achieve a 90% in average recompilation times when\nusing ",a.createElement(n.code,null,"sass-loader")," along with a 60% reduction in initial build times."),"\n",a.createElement(n.h3,null,"CSS Grid"),"\n",a.createElement(n.p,null,"We’re shipping a brand new way to incorporate the 2x Grid in code using a\ntechnique in CSS called CSS Grid. This implementation ships alongside our\nFlexbox-based grid that currently exists in v10 and we will continue to support\nboth in v11."),"\n",a.createElement(n.p,null,"CSS Grid, along with CSS Custom Properties, makes it easier to build more\nresilient products on the Grid through CSS Grid-specific techniques or through\nnew features that we’re able to bring like sub-grid for more complex products."),"\n",a.createElement(n.p,null,"If you’re building on any of our Grid components in v10, every one of these will\ncontinue to be supported in v11. If you would like to learn more about how to\nuse CSS Grid in your project, you can check out our documentation in\n",a.createElement(n.a,{href:"https://react.carbondesignsystem.com/?path=/docs/elements-grid--default"},"React"),"."),"\n",a.createElement(n.h3,null,"React Components"),"\n",a.createElement(n.p,null,"We’re shipping several new components in v11 to accompany the changes that we’re\nmaking to styles. Theming, layering, CSS Grid, and more are all available as\ncomponents in our React library."),"\n",a.createElement(n.p,null,"We’re also using this release to address some of the outstanding accessibility\nissues for components like Notification and Tooltip along with consistently\napplying how we name and define certain prop types in v11."),"\n",a.createElement(n.h4,null,"Theming and Layering"),"\n",a.createElement(n.p,null,"In order to support the new theming features coming to v11, we’re shipping\ncomponents like GlobalTheme and Theme to make it as easy as possible to change\nthe theme of an entire page or a sub-section of a page. These components are\npaired alongside the useTheme hook to allow component authors to access the\ncurrent theme for a given context."),"\n",a.createElement(n.p,null,"We’re also introducing a new Layer component to simplify how layering is\naccomplished in v11. Previously, we used the light prop to address the layering\nneeds for the white and g10 themes. Now, the Layer component can be used along\nwith contextual tokens to implement layering across themes."),"\n",a.createElement(n.h4,null,"Grid"),"\n",a.createElement(n.p,null,"The default grid in v11 is now implemented using CSS Grid. As a result, you’ll\nonly need to use two components to build layouts on top of the 2x grid: Grid and\nColumn. For teams that already have layouts built on the flexbox version of our\ngrid components, rest assured you can update your code to use FlexGrid along\nwith the existing Row and Column components and your layouts will continue to\nwork as expected."),"\n",a.createElement(n.h4,null,"Accessibility updates"),"\n",a.createElement(n.p,null,"In order to ship accessible versions of some of our components, we’ve made\nupdates or breaking changes to either change or remove inaccessible behavior."),"\n",a.createElement(n.p,null,"For example, our Notification component no longer accepts interactive content as\nthe semantics of this context would be stripped from users of Screen Readers. To\nbetter support common use cases of components where interactive content was\nneeded, we are also shipping new components like Actionable Notification to\noffer a better, accessible experience for these use cases."),"\n",a.createElement(n.p,null,"Tooltip, TooltipIcon, and TooltipDefinition are also receiving updates in v11\nand mirror some of the changes seen in Notification. For example, Tooltips can\nnow only contain interactive content. For situations that require interactive\ncontent, we are shipping a new component: Toggletip."),"\n",a.createElement(n.h4,null,"Changes to icons"),"\n",a.createElement(n.p,null,"One of the largest changes that came to Carbon in v10 was the set of icons that\nwe supported. This set grew tremendously due to the hard work of the brand team\nat IBM, and we went from supporting around 150 icons to over 1600 as a result."),"\n",a.createElement(n.p,null,"The package size for these icons quickly ballooned as we shipped an export for\neach icon size. In v11, we decided to reduce the complexity of managing a\npackage that large by shipping the icon as a component and customizing its size\nwith the size prop."),"\n",a.createElement(n.p,null,"This approach lead to a 75% decrease in the number of exports and files shipped\nthrough our @carbon/icons-react package and will make it easier to bring this\npackage into your toolchain."),"\n",a.createElement(n.h4,null,"Changes to component size"),"\n",a.createElement(n.p,null,"Speaking of size changes, we have updated the size prop for components in order\nto make sizing consistent across all of our components. Before, this prop would\naccept a variety of values like field, medium, and short. Now, this prop has the\nsame names across components to make sizing clearer."))}function i(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e={}){const{wrapper:n}=Object.assign({},(0,o.R)(),e.components);return n?a.createElement(n,e,a.createElement(r,e)):r(e)}}}]);