{"version":3,"sources":["webpack:///./src/pages/components/button/usage.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","id","parentName","href","align","className","style","position","display","marginLeft","marginRight","maxWidth","paddingBottom","bottom","left","backgroundSize","alt","title","src","srcSet","sizes","isMDXComponent","components_PageHeader","_cx","children","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-components-button-usage-mdx-2853f0b6f313e8188502.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <AnchorLinks mdxType=\"AnchorLinks\">\n      <AnchorLink mdxType=\"AnchorLink\">General guidance</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Variations</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Labels</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Icon usage</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Danger button usage</AnchorLink>\n    </AnchorLinks>\n    <h2 {...{\n      \"id\": \"general-guidance\"\n    }}>{`General guidance`}</h2>\n    <p><em parentName=\"p\">{`Buttons`}</em>{` express what action will occur when the user clicks or touches it. Buttons are used to initialize an action, either in the background or foreground of an experience.`}</p>\n    <p>{`Buttons are used primarily on action items. Some examples include `}<strong parentName=\"p\">{`Add`}</strong>{`, `}<strong parentName=\"p\">{`Save`}</strong>{`, `}<strong parentName=\"p\">{`Delete`}</strong>{`, and `}<strong parentName=\"p\">{`Sign up`}</strong>{`. Each page can have one or two primary buttons. Any remaining calls-to-action should be represented as secondary buttons.`}</p>\n    <p>{`Do not use buttons as navigational elements. Instead, use `}<a parentName=\"p\" {...{\n        \"href\": \"/components/link\"\n      }}>{`links`}</a>{` when the desired action is to take the user to a new page.`}</p>\n    <h2 {...{\n      \"id\": \"variations\"\n    }}>{`Variations`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Button type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Purpose`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`Primary`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`For the principal call to action on the page.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`Secondary`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`For secondary actions on each page.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`Button with icon`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`When words are not enough, icons can be used in buttons to better communicate what the button does. Icons are always paired with text.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`Disabled button`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use when the user cannot proceed until an input is collected.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`Set of buttons`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`When an action required by the user has more than one option, always use a a negative action button (secondary) paired with a positive action button (primary) in that order. Negative action buttons will be on the left; positive action buttons on the right. When these two types of buttons are paired in the correct order, they will automatically space themselves apart.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Small button`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use when there is not enough vertical space for a regular sized button.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`Ghost button`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`When an action does not require primary dominance on the page.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`Danger button`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`When an action has potentially destructive effects on the user’s data (delete, remove, etc).`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"labels\"\n    }}>{`Labels`}</h2>\n    <p>{`Button labels should clearly indicate the action of the button. Use active verbs, such as `}<strong parentName=\"p\">{`Add`}</strong>{` or `}<strong parentName=\"p\">{`Delete`}</strong>{`. Use sentence-style capitalization (only the first word in a phrase and any proper nouns capitalized) and no more than three words for button labels.`}</p>\n    <p>{`For sets of buttons, use specific labels, such as `}<strong parentName=\"p\">{`Save`}</strong>{` or `}<strong parentName=\"p\">{`Discard`}</strong>{`, instead of using `}<strong parentName=\"p\">{`OK`}</strong>{` and `}<strong parentName=\"p\">{`Cancel`}</strong>{`. This is particularly helpful when the user is confirming an action.`}</p>\n    <p>{`For consistency, see `}<a parentName=\"p\" {...{\n        \"href\": \"/guidelines/content/glossary\"\n      }}>{`labels and idioms`}</a>{` for the approved list of action labels.`}</p>\n    <h2 {...{\n      \"id\": \"icon-usage\"\n    }}>{`Icon usage`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Use glyphs (16px) within buttons.`}</li>\n      <li parentName=\"ul\">{`Glyphs are distinguished by their solid shape and knocked-out details.`}</li>\n      <li parentName=\"ul\">{`Glyphs should always appear to the right of the text.`}</li>\n      <li parentName=\"ul\">{`Glyphs used in buttons must be directly related to the action that the user is taking.`}</li>\n      <li parentName=\"ul\">{`Glyphs must be the same color value as the text within a button.`}</li>\n      <li parentName=\"ul\">{`Ghost buttons require a glyph icon.`}</li>\n    </ul>\n    <span {...{\n      \"className\": \"gatsby-resp-image-wrapper\",\n      \"style\": {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\",\n        \"maxWidth\": \"1152px\"\n      }\n    }}>{`\n      `}<span parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-background-image\",\n        \"style\": {\n          \"paddingBottom\": \"28.260869565217394%\",\n          \"position\": \"relative\",\n          \"bottom\": \"0px\",\n          \"left\": \"0px\",\n          \"backgroundSize\": \"cover\",\n          \"display\": \"block\"\n        }\n      }}></span>{`\n  `}<img parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-image\",\n        \"alt\": \"button with glyph\",\n        \"title\": \"button with glyph\",\n        \"src\": \"/static/d08b0e22f8e12982853e2afff8e5c535/fb070/button-usage-1.png\",\n        \"srcSet\": [\"/static/d08b0e22f8e12982853e2afff8e5c535/d6747/button-usage-1.png 288w\", \"/static/d08b0e22f8e12982853e2afff8e5c535/09548/button-usage-1.png 576w\", \"/static/d08b0e22f8e12982853e2afff8e5c535/fb070/button-usage-1.png 1152w\", \"/static/d08b0e22f8e12982853e2afff8e5c535/c3e47/button-usage-1.png 1472w\"],\n        \"sizes\": \"(max-width: 1152px) 100vw, 1152px\"\n      }}></img>{`\n    `}</span>\n    <h2 {...{\n      \"id\": \"danger-button-usage\"\n    }}>{`Danger button usage`}</h2>\n    <p>{`Danger buttons have a different visual style to inform users of potentially destructive actions they are about to take. If using the danger button as a standalone, we recommend styling it as a `}<strong parentName=\"p\">{`secondary button`}</strong>{`. Within a set, the danger button should be styled as a `}<strong parentName=\"p\">{`primary button.`}</strong></p>\n    <span {...{\n      \"className\": \"gatsby-resp-image-wrapper\",\n      \"style\": {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\",\n        \"maxWidth\": \"1152px\"\n      }\n    }}>{`\n      `}<span parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-background-image\",\n        \"style\": {\n          \"paddingBottom\": \"49.18478260869565%\",\n          \"position\": \"relative\",\n          \"bottom\": \"0px\",\n          \"left\": \"0px\",\n          \"backgroundSize\": \"cover\",\n          \"display\": \"block\"\n        }\n      }}></span>{`\n  `}<img parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-image\",\n        \"alt\": \"danger button set in modal\",\n        \"title\": \"danger button set in modal\",\n        \"src\": \"/static/68954cf3f3a42c833af2376d2241348e/fb070/button-usage-2.png\",\n        \"srcSet\": [\"/static/68954cf3f3a42c833af2376d2241348e/d6747/button-usage-2.png 288w\", \"/static/68954cf3f3a42c833af2376d2241348e/09548/button-usage-2.png 576w\", \"/static/68954cf3f3a42c833af2376d2241348e/fb070/button-usage-2.png 1152w\", \"/static/68954cf3f3a42c833af2376d2241348e/c3e47/button-usage-2.png 1472w\"],\n        \"sizes\": \"(max-width: 1152px) 100vw, 1152px\"\n      }}></img>{`\n    `}</span>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}