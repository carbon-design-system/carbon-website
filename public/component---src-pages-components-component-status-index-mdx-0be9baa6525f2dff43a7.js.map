{"version":3,"sources":["webpack:///./src/pages/components/component-status/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","_extends","mdxType","components_ComponentStatus__WEBPACK_IMPORTED_MODULE_9__","isMDXComponent","components_PageHeader","_cx","children","title","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","className","cx","PageHeader_module","length","id","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","href","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-components-component-status-index-mdx-0be9baa6525f2dff43a7.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport ComponentStatus from 'components/ComponentStatus';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <ComponentStatus mdxType=\"ComponentStatus\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}