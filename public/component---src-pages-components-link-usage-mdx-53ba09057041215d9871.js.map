{"version":3,"sources":["webpack:///./src/pages/components/link/usage.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","_extends","mdxType","id","parentName","href","isMDXComponent","components_PageHeader","_cx","children","title","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","className","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-components-link-usage-mdx-53ba09057041215d9871.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"general-guidance\"\n    }}>{`General guidance`}</h2>\n    <p><em parentName=\"p\">{`Links`}</em>{` are used primarily as a navigational element. Links may also change what or how data is displayed (i.e., view more, show all). If the action taken by the user will change or manipulate data, use a `}<a parentName=\"p\" {...{\n        \"href\": \"/components/button\"\n      }}>{`button`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"content\"\n    }}>{`Content`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Use text for links rather than graphics or icons.`}</li>\n      <li parentName=\"ul\">{`Links should be three words or less.`}</li>\n      <li parentName=\"ul\">{`Text should be consistent with the title of the intended destination.`}</li>\n      <li parentName=\"ul\">{`Use caution with links that are several words long. It is recommended that links are long enough to be understood by the user, but short enough to prevent text wrapping.`}</li>\n      <li parentName=\"ul\">{`Avoid the term “click here,” other links to “here,” or the web address itself. Instead, use a meaningful descriptive label for the link, and match the destination site name.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}