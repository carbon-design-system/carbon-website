{"version":3,"sources":["webpack:///./src/pages/components/loading/usage.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","_extends","mdxType","id","parentName","className","style","position","display","marginLeft","marginRight","maxWidth","paddingBottom","bottom","left","backgroundSize","alt","title","src","srcSet","sizes","isMDXComponent","components_PageHeader","_cx","children","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","href","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-components-loading-usage-mdx-4797df460b6945dc5e0a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"general-guidance\"\n    }}>{`General guidance`}</h2>\n    <p><em parentName=\"p\">{`Loading`}</em>{` spinners are used when retrieving data or performing slow computations, and help to notify users that loading is underway. The waiting experience is a crucial design opportunity. Although it may not be obvious what is occurring on the back-end, we can communicate clearly to reassure the user that progress is happening.`}</p>\n    <p>{`It is best practice to use a loading spinner whenever the wait time is anticipated to be longer than three seconds.`}</p>\n    {\n      /* <p>Adopted from the <a href=\"https://www.ibm.com/design/language/experience/animation/elements/\" target=\"_blank\">IBM Design Language Animation Library:</a></p>\n      > “The rhythmic oscillations of tape reels in motion got us thinking about a user’s waiting experience. If a user watches search results load, showing the machine at work relays a sense of efficiency. The swift and even balance of the spinning circles indicates that progress is being made.”\n      ![Small loader](images/loading.gif)\n      */\n    }\n    <h2 {...{\n      \"id\": \"size\"\n    }}>{`Size`}</h2>\n    <p>{`Loading spinners may be scaled down if the loading experience is contextual to a certain item on the page.`}</p>\n    <span {...{\n      \"className\": \"gatsby-resp-image-wrapper\",\n      \"style\": {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\",\n        \"maxWidth\": \"1152px\"\n      }\n    }}>{`\n      `}<span parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-background-image\",\n        \"style\": {\n          \"paddingBottom\": \"45.380434782608695%\",\n          \"position\": \"relative\",\n          \"bottom\": \"0px\",\n          \"left\": \"0px\",\n          \"backgroundSize\": \"cover\",\n          \"display\": \"block\"\n        }\n      }}></span>{`\n  `}<img parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-image\",\n        \"alt\": \"Small loader\",\n        \"title\": \"Small loader\",\n        \"src\": \"/static/49aa8e837082c8e7c6e17f57edfc0978/fb070/loading-usage-2.png\",\n        \"srcSet\": [\"/static/49aa8e837082c8e7c6e17f57edfc0978/d6747/loading-usage-2.png 288w\", \"/static/49aa8e837082c8e7c6e17f57edfc0978/09548/loading-usage-2.png 576w\", \"/static/49aa8e837082c8e7c6e17f57edfc0978/fb070/loading-usage-2.png 1152w\", \"/static/49aa8e837082c8e7c6e17f57edfc0978/c3e47/loading-usage-2.png 1472w\"],\n        \"sizes\": \"(max-width: 1152px) 100vw, 1152px\"\n      }}></img>{`\n    `}</span>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}