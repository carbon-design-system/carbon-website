{"version":3,"sources":["webpack:///./src/pages/components/toggle/usage.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","_extends","mdxType","id","parentName","className","style","position","display","marginLeft","marginRight","maxWidth","paddingBottom","bottom","left","backgroundSize","alt","title","src","srcSet","sizes","href","isMDXComponent","components_PageHeader","_cx","children","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"4bAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,sIACFC,CAAAH,EAAA,gBACD,OAAOI,OAAAC,EAAA,EAAAD,CAACP,EAADS,EAAA,GAAeV,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAG5EH,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNI,GAAM,oBADR,oBAGAJ,OAAAC,EAAA,EAAAD,CAAA,SAAGA,OAAAC,EAAA,EAAAD,CAAA,MAAIK,WAAW,KAAf,UAAH,2OACAL,OAAAC,EAAA,EAAAD,CAAA,OAAU,CACRM,UAAa,4BACbC,MAAS,CACPC,SAAY,WACZC,QAAW,QACXC,WAAc,OACdC,YAAe,OACfC,SAAY,WAPhB,WAUIZ,OAAAC,EAAA,EAAAD,CAAA,OAAAE,EAAA,CAAMG,WAAW,QAAW,CAC5BC,UAAa,qCACbC,MAAS,CACPM,cAAiB,qBACjBL,SAAY,WACZM,OAAU,MACVC,KAAQ,MACRC,eAAkB,QAClBP,QAAW,YAlBjB,OAqBAT,OAAAC,EAAA,EAAAD,CAAA,MAAAE,EAAA,CAAKG,WAAW,QAAW,CACvBC,UAAa,0BACbW,IAAO,uCACPC,MAAS,uCACTC,IAAO,oEACPC,OAAU,CAAC,yEAA0E,yEAA0E,0EAA2E,2EAC1OC,MAAS,uCA3Bb,UA8BArB,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNI,GAAM,WADR,WAGAJ,OAAAC,EAAA,EAAAD,CAAA,uGACAA,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNI,GAAM,UADR,UAGAJ,OAAAC,EAAA,EAAAD,CAAA,sIACAA,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNI,GAAM,YADR,YAGAJ,OAAAC,EAAA,EAAAD,CAAA,sGACAA,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNI,GAAM,gBADR,gBAGAJ,OAAAC,EAAA,EAAAD,CAAA,oGAA+FA,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGG,WAAW,KAAQ,CACjHiB,KAAQ,gCADmF,eAA/F,KAGAtB,OAAAC,EAAA,EAAAD,CAAA,OAAU,CACRM,UAAa,4BACbC,MAAS,CACPC,SAAY,WACZC,QAAW,QACXC,WAAc,OACdC,YAAe,OACfC,SAAY,WAPhB,WAUIZ,OAAAC,EAAA,EAAAD,CAAA,OAAAE,EAAA,CAAMG,WAAW,QAAW,CAC5BC,UAAa,qCACbC,MAAS,CACPM,cAAiB,sBACjBL,SAAY,WACZM,OAAU,MACVC,KAAQ,MACRC,eAAkB,QAClBP,QAAW,YAlBjB,OAqBAT,OAAAC,EAAA,EAAAD,CAAA,MAAAE,EAAA,CAAKG,WAAW,QAAW,CACvBC,UAAa,0BACbW,IAAO,sDACPC,MAAS,sDACTC,IAAO,oEACPC,OAAU,CAAC,yEAA0E,yEAA0E,0EAA2E,2EAC1OC,MAAS,uCA3Bb,WAkCJ1B,EAAW4B,gBAAiB,uWC5G5BC,ECQmB,SAAA5B,GAAA,IAAA6B,EAAGC,EAAH9B,EAAA8B,SAAaR,EAAbtB,EAAAsB,MAAAS,EAAA/B,EAAAgC,KAAoBA,OAApB,IAAAD,EAAA,GAAAA,EAA+BE,EAA/BjC,EAAAiC,iBAAA,OACjB7B,OAAA8B,EAAA,EAAA9B,CAAA,OACEM,UAAWyB,KAAEN,EAAA,GAAAA,EAAAO,EAAA,YAAAA,EAAA,WAAAP,EAAAO,EAAA,kBAESJ,EAFTK,OAAAR,EAAAO,EAAA,mBAAAH,EAAAJ,KAMbzB,OAAA8B,EAAA,EAAA9B,CAAA,OAAKM,UAAU,YACbN,OAAA8B,EAAA,EAAA9B,CAAA,OAAKM,UAAU,WACbN,OAAA8B,EAAA,EAAA9B,CAAA,OAAKM,UAAU,iBACbN,OAAA8B,EAAA,EAAA9B,CAAA,MAAII,GAAJ,aAAoBE,UAAW4B,QAVvChB,MADiBQ,sBCRnBS,ECIiB,SAAAvC,GAAsD,IAAnDwC,EAAmDxC,EAAnDwC,iBAA8BC,EAAqBzC,EAAjC0C,WAGhBA,EAHiDC,EAAAC,KAAAC,KAAAC,aAAAJ,WAAAK,EAkBnCN,GAlBmCC,EAkB7DM,EAlB6DD,EAAAC,QAoB/DtB,EAAUsB,EAAN,eApB2DD,EAAAE,aAoB3D,aAAVT,EAEA,OAAOQ,EACL5C,OAAA8B,EAAA,EAAA9B,CAAA,OAAKM,UAAS,WAAawC,OACzB9C,OAAA8B,EAAA,EAAA9B,CAAA,OAAKM,UAAU,WACbN,OAAA8B,EAAA,EAAA9B,CAAA,KAAGM,UAAHyC,EAAA,KAAoBzB,KAAMA,GAHlB,8BAAd,oCC1BF0B,kLCkBEC,kBAAS,IAAAC,EACgBC,KADhBrD,MACC8B,EADDsB,EAAAtB,KACOwB,EADPF,EAAAE,KAEDC,EAAaD,uCAAnB,GAKME,EAAW1B,EAAA2B,IAAS,SAAAC,GAAO,IAAA/B,EACzBgC,EAAeC,IAAOF,EAAM,CAAEG,OAAO,IACrCC,EAAWH,IAAjBJ,EACM/B,EAAO8B,YAAbK,GACA,OACEzD,OAAA8B,EAAA,EAAA9B,CAAA,MAAI6D,IAAJL,EAAclD,UAAWyB,KAAEN,EAAA,GAAAA,EAAAqC,EAAA,cAAAF,EAAAnC,GAAAqC,EAAA,WACzB9D,OAAA8B,EAAA,EAAA9B,CAAA+D,EAAA,MAAMzD,UAANwD,EAAA,KAAuBE,GAAE,GAAK1C,GAFlCkC,MASF,OACExD,OAAA8B,EAAA,EAAA9B,CAAA,OAAKM,UAAW2D,iBACdjE,OAAA8B,EAAA,EAAA9B,CAAA,OAAKM,UAAU,YACbN,OAAA8B,EAAA,EAAA9B,CAAA,OAAKM,UAAU,WACbN,OAAA8B,EAAA,EAAA9B,CAAA,OAAKM,UAAU,mCACbN,OAAA8B,EAAA,EAAA9B,CAAA,WACEA,OAAA8B,EAAA,EAAA9B,CAAA,MAAIM,UAAW4D,QAN3BZ,YA1BkCa,IAAMC,oBCsD5CC,EAAA,EAtDgB,SAAAzE,GAAyC,IAAtC0E,EAAsC1E,EAAtC0E,YAAa5C,EAAyB9B,EAAzB8B,SAAU6C,EAAe3E,EAAf2E,SAAeC,EACRF,EADQG,YAC/CA,OAD+C,IAAAD,EAAA,GAAAA,EAC7BpC,EAAqBkC,EADQlC,iBAE/CR,EAAgB6C,EAF+B7C,KAEzCV,EAAUuD,EAF+BvD,MAGjDwD,EAAkBC,cAClB9C,IAAmBD,GAJ8B,SAIpB8C,EAIzBE,EAR6CC,EAAArC,KAAAC,KAAAmC,WAkBjDxB,EAAOwB,EACTL,qBADmB,IAEnBA,EAFJO,SASMzB,EAJJzB,EACOwB,2BAAgCM,IAAQ9B,EAAD,GAAU,CAAE+B,OAAO,IADtD,GAKb,OACE3D,OAAA8B,EAAA,EAAA9B,CAAA+E,EAAA,GAAQlD,iBAARA,EAA4CmD,UAAU,GACpDhF,OAAA8B,EAAA,EAAA9B,CAAAwB,EAAA,CACEK,iBADFA,EAEEX,MAFFA,EAGE+D,MAHF,QAIErD,KAAMA,GAELA,GAAQ5B,OAAA8B,EAAA,EAAA9B,CAAAgD,EAAA,CAAUI,KAAVA,EAAsBxB,KAAtBA,EAAkCyB,WAAYA,KAEzDrD,OAAA8B,EAAA,EAAA9B,CAAAkF,EAAA,GAAMC,QAAM,GAAZzD,EAEE1B,OAAA8B,EAAA,EAAA9B,CAAAmC,EAAA,CAAUC,iBAAkBA,KAE9BpC,OAAA8B,EAAA,EAAA9B,CAAAoF,EAAA,GACEd,YADFA,EAEEC,SAFFA,EAGEnB,KAHFA,EAIExB,KAJFA,EAKEyB,WAAYA,IAEdrD,OAAA8B,EAAA,EAAA9B,CAAAqF,EAAA,EArBJ","file":"component---src-pages-components-toggle-usage-mdx-0dd2c860899ec4518fcc.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"general-guidance\"\n    }}>{`General guidance`}</h2>\n    <p><em parentName=\"p\">{`Toggle`}</em>{` is a control that is used to quickly switch between two possible states. Toggles are only used for these binary actions that occur immediately after the user “flips” the toggle switch. They are commonly used for “on/off” switches.`}</p>\n    <span {...{\n      \"className\": \"gatsby-resp-image-wrapper\",\n      \"style\": {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\",\n        \"maxWidth\": \"1152px\"\n      }\n    }}>{`\n      `}<span parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-background-image\",\n        \"style\": {\n          \"paddingBottom\": \"29.34782608695652%\",\n          \"position\": \"relative\",\n          \"bottom\": \"0px\",\n          \"left\": \"0px\",\n          \"backgroundSize\": \"cover\",\n          \"display\": \"block\"\n        }\n      }}></span>{`\n  `}<img parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-image\",\n        \"alt\": \"Example image of on and off toggles.\",\n        \"title\": \"Example image of on and off toggles.\",\n        \"src\": \"/static/540937ba80090df1405ba1db8df8d72a/fb070/toggle-usage-1.png\",\n        \"srcSet\": [\"/static/540937ba80090df1405ba1db8df8d72a/d6747/toggle-usage-1.png 288w\", \"/static/540937ba80090df1405ba1db8df8d72a/09548/toggle-usage-1.png 576w\", \"/static/540937ba80090df1405ba1db8df8d72a/fb070/toggle-usage-1.png 1152w\", \"/static/540937ba80090df1405ba1db8df8d72a/c3e47/toggle-usage-1.png 1472w\"],\n        \"sizes\": \"(max-width: 1152px) 100vw, 1152px\"\n      }}></img>{`\n    `}</span>\n    <h4 {...{\n      \"id\": \"heading\"\n    }}>{`Heading`}</h4>\n    <p>{`A heading may accompany a toggle to further clarify on the action the toggle will perform.`}</p>\n    <h4 {...{\n      \"id\": \"labels\"\n    }}>{`Labels`}</h4>\n    <p>{`Use labels with a toggle so the action is clear. Labels should be three words or less and appear on the side of a toggle.`}</p>\n    <h4 {...{\n      \"id\": \"language\"\n    }}>{`Language`}</h4>\n    <p>{`Use adjectives rather than verbs to describe labels and the state of the object affected.`}</p>\n    <h2 {...{\n      \"id\": \"small-toggle\"\n    }}>{`Small toggle`}</h2>\n    <p>{`Small toggles are more compact in size, therefore they can be used in use cases such as `}<a parentName=\"p\" {...{\n        \"href\": \"/components/data-table/code\"\n      }}>{`data tables`}</a>{`.`}</p>\n    <span {...{\n      \"className\": \"gatsby-resp-image-wrapper\",\n      \"style\": {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\",\n        \"maxWidth\": \"1152px\"\n      }\n    }}>{`\n      `}<span parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-background-image\",\n        \"style\": {\n          \"paddingBottom\": \"55.027173913043484%\",\n          \"position\": \"relative\",\n          \"bottom\": \"0px\",\n          \"left\": \"0px\",\n          \"backgroundSize\": \"cover\",\n          \"display\": \"block\"\n        }\n      }}></span>{`\n  `}<img parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-image\",\n        \"alt\": \"Example image of small toggles within a data table.\",\n        \"title\": \"Example image of small toggles within a data table.\",\n        \"src\": \"/static/b9de91a035add5cbdc422fc59065279c/fb070/toggle-usage-2.png\",\n        \"srcSet\": [\"/static/b9de91a035add5cbdc422fc59065279c/d6747/toggle-usage-2.png 288w\", \"/static/b9de91a035add5cbdc422fc59065279c/09548/toggle-usage-2.png 576w\", \"/static/b9de91a035add5cbdc422fc59065279c/fb070/toggle-usage-2.png 1152w\", \"/static/b9de91a035add5cbdc422fc59065279c/c3e47/toggle-usage-2.png 1472w\"],\n        \"sizes\": \"(max-width: 1152px) 100vw, 1152px\"\n      }}></img>{`\n    `}</span>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}