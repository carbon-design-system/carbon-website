{"version":3,"sources":["webpack:///./src/pages/contributions/documentation.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","id","parentName","href","isMDXComponent","components_PageHeader","_cx","children","title","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","className","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-contributions-documentation-mdx-ef2fc42a03cd55213261.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"you-can-contribute-to-the-content-on-the-carbon-site-in-a-few-different-ways-choose-the-way-that-works-best-depending-on-how-extensive-your-contribution-is-and-be-sure-to-read-our-content-writing-guidelines-before-you-begin\"\n    }}>{`You can contribute to the content on the Carbon site in a few different ways. Choose the way that works best, depending on how extensive your contribution is. And be sure to read our content writing guidelines before you begin!`}</h3>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n      <AnchorLink mdxType=\"AnchorLink\">Editing pages</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Making regular content updates</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Content and style guidelines</AnchorLink>\n    </AnchorLinks>\n    <h2 {...{\n      \"id\": \"editing-pages\"\n    }}>{`Editing pages`}</h2>\n    <p>{`The easiest way to edit a page is with the `}<inlineCode parentName=\"p\">{`Edit this page on Github`}</inlineCode>{` link that appears at the bottom of every page on the site. The link opens the specific Github page where you can edit the content and then propose the change with a pull request.`}</p>\n    <p>{`Alternatively, if you have a specific fix or contribution, you can fork the repo and generate a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-website/wiki/Creating-a-PR-through-github.com-UI\"\n      }}>{`pull request`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"making-regular-content-updates\"\n    }}>{`Making regular content updates`}</h2>\n    <p>{`If you are planning regular or more comprehensive content updates, you’ll want to fork the repo and install some of the tools we use to build the website. This will create an easier workflow for you long term.`}</p>\n    <p>{`Instructions for how to `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-website/wiki/Updating-content-on-carbondesignsystem.com\"\n      }}>{`install tools`}</a>{` and fork the repo.`}</p>\n    <p>{`Instructions for how to `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-website/wiki/Update-content-with-VSCode\"\n      }}>{`update content with VSCode`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"content-and-style-guidelines\"\n    }}>{`Content and style guidelines`}</h2>\n    <p>{`Before you get started, take a moment to review our content guidelines. Following these will help us ensure consistency of experience across the site.`}</p>\n    <h3 {...{\n      \"id\": \"use-markdown\"\n    }}>{`Use Markdown`}</h3>\n    <p>{`The website is written in Markdown, which makes it easy for anyone to contribute content in a systematic way. If you don’t already have a Markdown editor installed, there are plenty of free editors available online.`}</p>\n    <p>{`Check out Carbon’s handy markdown `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-website/wiki/Markdown-cheatsheet\"\n      }}>{`styling cheatsheet`}</a>{` for how to style content.`}</p>\n    <h3 {...{\n      \"id\": \"guidelines-for-writing-content\"\n    }}>{`Guidelines for writing content`}</h3>\n    <p>{`Please keep these things in mind when writing content for Carbon.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Aim for a friendly and encouraging tone.`}</li>\n      <li parentName=\"ul\">{`Speak directly to the user. You can use the second person pronoun (“you”).`}</li>\n      <li parentName=\"ul\">{`Keep sentences and paragraphs short and focused.`}</li>\n      <li parentName=\"ul\">{`Be clear and concise by removing unnecessary words. The more concise the text, the easier it is for all users to understand.`}</li>\n      <li parentName=\"ul\">{`Use sentence case for everything, including component names, e.g. Content switcher and Data table.`}</li>\n    </ul>\n    <p>{`To learn about writing content for component pages, see our `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-website/wiki/Production-guidelines#creating-content-for-component-pages\"\n      }}>{`production guidelines`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}