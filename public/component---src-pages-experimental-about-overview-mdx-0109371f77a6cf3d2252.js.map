{"version":3,"sources":["webpack:///./src/pages/experimental/about/overview.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","id","parentName","isMDXComponent","components_PageHeader","_cx","children","title","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","className","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","href","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-experimental-about-overview-mdx-0109371f77a6cf3d2252.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"experimental-resources-are-components-patterns-and-tools-currently-in-the-works-carbon-is-a-collaborative-and-distributed-effort-if-you-like-what-you-see-the-carbon-team-wants-your-help\"\n    }}>{`Experimental resources are components, patterns, and tools currently in the works. Carbon is a collaborative and distributed effort. If you like what you see, the Carbon team wants your help.`}</h3>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n      <AnchorLink mdxType=\"AnchorLink\">How this works</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">What you need to know</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">We want your help</AnchorLink>\n    </AnchorLinks>\n    <h2 {...{\n      \"id\": \"how-this-works\"\n    }}>{`How this works`}</h2>\n    <p>{`Carbon is always getting better. This happens through continual feature and usability upgrades to our elements and core components. It also happens through exploration and experimentation. The Carbon team will surface this exploration here.`}</p>\n    <p>{`Expect these components, patterns, and tools to change over time. If you choose to use experimental resources, you can help move them closer to production by contributing feedback, code, and design.`}</p>\n    <p>{`Some of these resources will become core parts of the Carbon Design System.`}</p>\n    <h2 {...{\n      \"id\": \"what-you-need-to-know\"\n    }}>{`What you need to know`}</h2>\n    <p>{`Experimental components, designs, and other resources are presented for testing and feedback. They are not intended for production use.`}</p>\n    <p>{`We know major releases can mean major work for designers and developers. We use experimental projects to surface future resources and get them into the hands of teams who will use them.`}</p>\n    <p>{`They may have some non-functional pieces, or be lacking in documentation. `}<strong parentName=\"p\">{`There is no guarantee of support`}</strong>{`.`}</p>\n    <h2 {...{\n      \"id\": \"we-want-your-help\"\n    }}>{`We want your help`}</h2>\n    <p>{`The Carbon team is continually updating components and introducing new design and development guidelines.`}</p>\n    <p>{`We want to provide early-access to our work. Designers and developers can test, work with, and provide feedback for experimental projects.`}</p>\n    <h3 {...{\n      \"id\": \"how-can-i-help\"\n    }}>{`How can I help?`}</h3>\n    <p>{`Your feedback is critical for every aspect of Carbon Design System development process. Input and contributions help experimental components improve and “graduate” to production release.`}</p>\n    <p>{`Please open a GitHub issue from the footer of any page on the Carbon website to let the team know what you think. If you see a problem, fix it! Help us build the web’s best design system.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}