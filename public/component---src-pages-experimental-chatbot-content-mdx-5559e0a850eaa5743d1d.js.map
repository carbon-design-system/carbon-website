{"version":3,"sources":["webpack:///./src/pages/experimental/chatbot/content.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","Row","Column","ResourceCard","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","id","className","offsetLg","colLg","colMd","noGutterSm","title","href","type","src","alt","parentName","isMDXComponent","components_PageHeader","_cx","children","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"6bAMO,IAAMA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5BI,OAAAC,EAAA,EAAAD,CAAA,MAASH,KAGZK,EAAMP,EAAc,OACpBQ,EAASR,EAAc,UACvBS,EAAeT,EAAc,gBAC7BU,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGb,sIACFc,CAAAF,EAAA,gBACD,OAAOT,OAAAC,EAAA,EAAAD,CAACM,EAADM,EAAA,GAAeP,EAAiBR,EAAhC,CAAuCa,WAAYA,EAAYG,QAAQ,cAG5Eb,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNc,GAAM,oKADR,sKAGAd,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNc,GAAM,aADR,aAGAd,OAAAC,EAAA,EAAAD,CAACE,EAAD,CAAKa,UAAU,wCAAwCF,QAAQ,OAC7Db,OAAAC,EAAA,EAAAD,CAACG,EAAD,CAAQa,SAAS,IAAIC,MAAM,IAAIC,MAAM,IAAIC,YAAU,EAACN,QAAQ,UAChEb,OAAAC,EAAA,EAAAD,CAACI,EAAD,CAAcgB,MAAM,kCAAkCC,KAAK,uEAAuEC,KAAK,WAAWT,QAAQ,gBAClJb,OAAAC,EAAA,EAAAD,CAAA,MAAS,CACPuB,IAAO,4CACPC,IAAO,UAKfxB,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNc,GAAM,0BADR,0BAGAd,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNc,GAAM,4CADR,4CAGAd,OAAAC,EAAA,EAAAD,CAAA,kRACAA,OAAAC,EAAA,EAAAD,CAAA,6MACAA,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNc,GAAM,0BADR,4BAGAd,OAAAC,EAAA,EAAAD,CAAA,UACEA,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,kDACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,yDACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,sFACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,2DAEFzB,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNc,GAAM,6BADR,+BAGAd,OAAAC,EAAA,EAAAD,CAAA,UACEA,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,qCACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,8CACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,0CAEFzB,OAAAC,EAAA,EAAAD,CAAA,8CAAyCA,OAAAC,EAAA,EAAAD,CAAA,IAAAY,EAAA,CAAGa,WAAW,KAAQ,CAC3DJ,KAAQ,iEAD6B,UAAzC,qCAGArB,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNc,GAAM,2CADR,2CAGAd,OAAAC,EAAA,EAAAD,CAAA,0EACAA,OAAAC,EAAA,EAAAD,CAAA,UACEA,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAKzB,OAAAC,EAAA,EAAAD,CAAA,UAAQyB,WAAW,MAAnB,uBAApB,0OAAuTzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAClUzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,+CACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,wDAEJzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAKzB,OAAAC,EAAA,EAAAD,CAAA,UAAQyB,WAAW,MAAnB,oBAApB,wIACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAKzB,OAAAC,EAAA,EAAAD,CAAA,UAAQyB,WAAW,MAAnB,iBAApB,yPACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAKzB,OAAAC,EAAA,EAAAD,CAAA,UAAQyB,WAAW,MAAnB,uBAApB,+UACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAKzB,OAAAC,EAAA,EAAAD,CAAA,UAAQyB,WAAW,MAAnB,0BAApB,0HACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAKzB,OAAAC,EAAA,EAAAD,CAAA,UAAQyB,WAAW,MAAnB,iCAApB,uPACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAKzB,OAAAC,EAAA,EAAAD,CAAA,UAAQyB,WAAW,MAAnB,iBAApB,mFAEFzB,OAAAC,EAAA,EAAAD,CAAA,KAAQ,CACNc,GAAM,cADR,gBAGAd,OAAAC,EAAA,EAAAD,CAAA,UACEA,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,qGACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,2EACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,iGACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,0DACAzB,OAAAC,EAAA,EAAAD,CAAA,MAAIyB,WAAW,MAAf,qGAMNjB,EAAWkB,gBAAiB,uWCnG5BC,ECQmB,SAAAlB,GAAA,IAAAmB,EAAGC,EAAHpB,EAAAoB,SAAaT,EAAbX,EAAAW,MAAAU,EAAArB,EAAAsB,KAAoBA,OAApB,IAAAD,EAAA,GAAAA,EAA+BE,EAA/BvB,EAAAuB,iBAAA,OACjBhC,OAAAiC,EAAA,EAAAjC,CAAA,OACEe,UAAWmB,KAAEN,EAAA,GAAAA,EAAAO,EAAA,YAAAA,EAAA,WAAAP,EAAAO,EAAA,kBAESJ,EAFTK,OAAAR,EAAAO,EAAA,mBAAAH,EAAAJ,KAMb5B,OAAAiC,EAAA,EAAAjC,CAAA,OAAKe,UAAU,YACbf,OAAAiC,EAAA,EAAAjC,CAAA,OAAKe,UAAU,WACbf,OAAAiC,EAAA,EAAAjC,CAAA,OAAKe,UAAU,iBACbf,OAAAiC,EAAA,EAAAjC,CAAA,MAAIc,GAAJ,aAAoBC,UAAWsB,QAVvCjB,MADiBS,sBCRnBS,ECIiB,SAAA7B,GAAsD,IAAnD8B,EAAmD9B,EAAnD8B,iBAA8BC,EAAqB/B,EAAjCgC,WAGhBA,EAHiDC,EAAAC,KAAAC,KAAAC,aAAAJ,WAAAK,EAkBnCN,GAlBmCC,EAkB7DM,EAlB6DD,EAAAC,QAoB/D1B,EAAU0B,EAAN,eApB2DD,EAAAE,aAoB3D,aAAVT,EAEA,OAAOQ,EACL/C,OAAAiC,EAAA,EAAAjC,CAAA,OAAKe,UAAS,WAAakC,OACzBjD,OAAAiC,EAAA,EAAAjC,CAAA,OAAKe,UAAU,WACbf,OAAAiC,EAAA,EAAAjC,CAAA,KAAGe,UAAHmC,EAAA,KAAoB7B,KAAMA,GAHlB,8BAAd,oCC1BF8B,kLCkBEC,kBAAS,IAAAC,EACgBC,KADhBzD,MACCkC,EADDsB,EAAAtB,KACOwB,EADPF,EAAAE,KAEDC,EAAaD,uCAAnB,GAKME,EAAW1B,EAAA2B,IAAS,SAAAC,GAAO,IAAA/B,EACzBgC,EAAeC,IAAOF,EAAM,CAAEG,OAAO,IACrCC,EAAWH,IAAjBJ,EACMnC,EAAOkC,YAAbK,GACA,OACE5D,OAAAiC,EAAA,EAAAjC,CAAA,MAAIgE,IAAJL,EAAc5C,UAAWmB,KAAEN,EAAA,GAAAA,EAAAqC,EAAA,cAAAF,EAAAnC,GAAAqC,EAAA,WACzBjE,OAAAiC,EAAA,EAAAjC,CAAAkE,EAAA,MAAMnD,UAANkD,EAAA,KAAuBE,GAAE,GAAK9C,GAFlCsC,MASF,OACE3D,OAAAiC,EAAA,EAAAjC,CAAA,OAAKe,UAAWqD,iBACdpE,OAAAiC,EAAA,EAAAjC,CAAA,OAAKe,UAAU,YACbf,OAAAiC,EAAA,EAAAjC,CAAA,OAAKe,UAAU,WACbf,OAAAiC,EAAA,EAAAjC,CAAA,OAAKe,UAAU,mCACbf,OAAAiC,EAAA,EAAAjC,CAAA,WACEA,OAAAiC,EAAA,EAAAjC,CAAA,MAAIe,UAAWsD,QAN3BZ,YA1BkCa,IAAMC,oBCsD5CC,EAAA,EAtDgB,SAAA/D,GAAyC,IAAtCgE,EAAsChE,EAAtCgE,YAAa5C,EAAyBpB,EAAzBoB,SAAU6C,EAAejE,EAAfiE,SAAeC,EACRF,EADQG,YAC/CA,OAD+C,IAAAD,EAAA,GAAAA,EAC7BpC,EAAqBkC,EADQlC,iBAE/CR,EAAgB6C,EAF+B7C,KAEzCX,EAAUwD,EAF+BxD,MAGjDyD,EAAkBC,cAClB9C,IAAmBD,GAJ8B,SAIpB8C,EAIzBE,EAR6CC,EAAArC,KAAAC,KAAAmC,WAkBjDxB,EAAOwB,EACTL,qBADmB,IAEnBA,EAFJO,SASMzB,EAJJzB,EACOwB,2BAAgCM,IAAQ9B,EAAD,GAAU,CAAE+B,OAAO,IADtD,GAKb,OACE9D,OAAAiC,EAAA,EAAAjC,CAAAkF,EAAA,GAAQlD,iBAARA,EAA4CmD,UAAU,GACpDnF,OAAAiC,EAAA,EAAAjC,CAAA2B,EAAA,CACEK,iBADFA,EAEEZ,MAFFA,EAGEgE,MAHF,QAIErD,KAAMA,GAELA,GAAQ/B,OAAAiC,EAAA,EAAAjC,CAAAmD,EAAA,CAAUI,KAAVA,EAAsBxB,KAAtBA,EAAkCyB,WAAYA,KAEzDxD,OAAAiC,EAAA,EAAAjC,CAAAqF,EAAA,GAAMC,QAAM,GAAZzD,EAEE7B,OAAAiC,EAAA,EAAAjC,CAAAsC,EAAA,CAAUC,iBAAkBA,KAE9BvC,OAAAiC,EAAA,EAAAjC,CAAAuF,EAAA,GACEd,YADFA,EAEEC,SAFFA,EAGEnB,KAHFA,EAIExB,KAJFA,EAKEyB,WAAYA,IAEdxD,OAAAiC,EAAA,EAAAjC,CAAAwF,EAAA,EArBJ","file":"component---src-pages-experimental-chatbot-content-mdx-5559e0a850eaa5743d1d.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst ResourceCard = makeShortcode(\"ResourceCard\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"you-have-established-a-need-for-a-chatbot-based-on-extensive-market-validation-and-user-research-how-should-you-begin-to-think-about-designing-your-conversation\"\n    }}>{`You have established a need for a chatbot based on extensive market validation and user research. How should you begin to think about designing your conversation?`}</h3>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <Row className=\"tile--resource--no-margin tile--group\" mdxType=\"Row\">\n      <Column offsetLg=\"4\" colLg=\"4\" colMd=\"4\" noGutterSm mdxType=\"Column\">\n  <ResourceCard title=\"IBM Design for AI: Conversation\" href=\"http://ai-design.eu-de.mybluemix.net/design/ai/conversation/planning\" type=\"resource\" mdxType=\"ResourceCard\">\n          <img {...{\n            \"src\": \"/bee-673a4dd2872e72d77427915b63af68fc.svg\",\n            \"alt\": null\n          }}></img>\n  </ResourceCard>\n      </Column>\n    </Row>\n    <h2 {...{\n      \"id\": \"conversational-writing\"\n    }}>{`Conversational writing`}</h2>\n    <h3 {...{\n      \"id\": \"tailoring-the-conversation-to-your-users\"\n    }}>{`Tailoring the conversation to your users`}</h3>\n    <p>{`Be sure to consider the tone of your bot. Tone should depend on the audience and the context in which the user will be engaging in a conversation. For example, a healthcare professional will require a different tone than the end user of a financial banking bot.`}</p>\n    <p>{`Each bot requires a uniquely tailored experience. While in many cases the following principles will suffice, ensure that your bot’s tone is not distracting or at odds with users’ expectations.`}</p>\n    <h4 {...{\n      \"id\": \"in-general-bots-should\"\n    }}>{`In general, bots should:`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Use simple language that is easy to understand`}</li>\n      <li parentName=\"ul\">{`Be helpful and agreeable, but not forced or insincere`}</li>\n      <li parentName=\"ul\">{`Confirm its understanding of user inputs when appropriate (i.e., by paraphrasing).`}</li>\n      <li parentName=\"ul\">{`Provide help or a menu of options when a user is stuck`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"typically-bots-should-not\"\n    }}>{`Typically, bots should not:`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Attempt to seem like a real human`}</li>\n      <li parentName=\"ul\">{`Fail to provide an answer without recourse`}</li>\n      <li parentName=\"ul\">{`Be pushy or send unsolicited messages`}</li>\n    </ul>\n    <p>{`See the voice and tone guide from `}<a parentName=\"p\" {...{\n        \"href\": \"http://www.carbondesignsystem.com/guidelines/content/general\"\n      }}>{`Carbon`}</a>{` for additional writing guidance.`}</p>\n    <h3 {...{\n      \"id\": \"conversation-design-principles-for-bots\"\n    }}>{`Conversation design principles for bots`}</h3>\n    <p>{`Ensure the success of your bot by following these principles:`}</p>\n    <ol>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Introduce your bot.`}</strong>{` Be crisp and clear about the identity of your bot, the value it can provide and why the user should trust it. Make it clear to your users that they are chatting with bot, not a real human. And, be sure to provide clear next steps.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Is your bot setting the right expectations?`}</li>\n          <li parentName=\"ul\">{`Has your bot set the boundaries of what it can do?`}</li>\n        </ul></li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Orient the user.`}</strong>{` Inform the user about what they can do, ask, or find. Don’t assume users will understand the scope of topics that can be discussed.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Be proactive.`}</strong>{` Suggest options (structured responses) as effective inputs that will help the user get what they are looking for or trying to do. Actively identify scenarios where guidance might be needed for users that don’t know what to ask or how to ask it.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Decrease ambiguity.`}</strong>{` Confirm user intents that have significant consequences by repeating what is about to happen (“To confirm, you want to move \\\\$300.00 to Checking?”). Summarize complex input from the user to confirm the bot’s understanding. Where possible, use structured responses to prevent dead-ends, unknowns, or chats that go off in tangents.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Provide clear actions.`}</strong>{` Provide a menu of structured responses narrow the scope of the input. Don’t overwhelm the user with too many choices.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Guide the user to their goal.`}</strong>{` Ensure successful interactions by providing guidance and feedback during complex processes. Notify the user how long a process might take, or if they are on the right track. Where appropriate allow users to cancel or restart longer processes.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Get feedback.`}</strong>{` Collect user feedback to improve your bot’s relevance and accuracy over time.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"references\"\n    }}>{`References: `}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Adam Cutler, Zach Causey and Lawrence Humphrey, IBM Design Conversational Experience Guide (2017)`}</li>\n      <li parentName=\"ol\">{`Amit Shevat, Designing Bots: Creating Conversational Experiences (2017)`}</li>\n      <li parentName=\"ol\">{`Cathy Pearl, Designing Voice User Interfaces: Principles of Conversational Experiences (2016)`}</li>\n      <li parentName=\"ol\">{`Erika Hall, Conversational Design, A Book Apart (2018)`}</li>\n      <li parentName=\"ol\">{`William R. Miller and Stephen Rollnick, Motivational Interviewing: Helping People Change (2012)`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}