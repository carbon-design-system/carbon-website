{"version":3,"sources":["webpack:///./src/pages/experimental/chatbot/overview.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","AnchorLinks","AnchorLink","Row","Column","ResourceCard","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","id","parentName","href","className","style","position","display","marginLeft","marginRight","maxWidth","paddingBottom","bottom","left","backgroundSize","alt","title","src","srcSet","sizes","align","offsetLg","colLg","colMd","noGutterSm","type","isMDXComponent","components_PageHeader","_cx","children","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-experimental-chatbot-overview-mdx-273758a58b3307319b32.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst ResourceCard = makeShortcode(\"ResourceCard\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"use-a-chatbot-when-a-user-would-benefit-from-requesting-information-on-demand-with-natural-language-they-should-receive-a-useful-and-trustworthy-response-related-to-their-question-or-task\"\n    }}>{`Use a chatbot when a user would benefit from requesting information on-demand with natural language. They should receive a useful and trustworthy response related to their question or task.`}</h3>\n    <h4 {...{\n      \"id\": \"status\"\n    }}>{`Status:`}</h4>\n    <p>{`Experimental`}</p>\n    <h4 {...{\n      \"id\": \"maintainer\"\n    }}>{`Maintainer:`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/vincentsnagg\"\n      }}>{`Vincent Snagg`}</a></p>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n      <AnchorLink mdxType=\"AnchorLink\">Common use cases</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">User needs</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Why a chatbot?</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Supported components</AnchorLink>\n    </AnchorLinks>\n    <span {...{\n      \"className\": \"gatsby-resp-image-wrapper\",\n      \"style\": {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\",\n        \"maxWidth\": \"1152px\"\n      }\n    }}>{`\n      `}<span parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-background-image\",\n        \"style\": {\n          \"paddingBottom\": \"62.05357142857143%\",\n          \"position\": \"relative\",\n          \"bottom\": \"0px\",\n          \"left\": \"0px\",\n          \"backgroundSize\": \"cover\",\n          \"display\": \"block\"\n        }\n      }}></span>{`\n  `}<img parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-image\",\n        \"alt\": \"Requesting information from a chatbot\",\n        \"title\": \"Requesting information from a chatbot\",\n        \"src\": \"/static/3a6170b12ec31de8bec94cd1981b8e2c/fb070/chatbot-0.png\",\n        \"srcSet\": [\"/static/3a6170b12ec31de8bec94cd1981b8e2c/d6747/chatbot-0.png 288w\", \"/static/3a6170b12ec31de8bec94cd1981b8e2c/09548/chatbot-0.png 576w\", \"/static/3a6170b12ec31de8bec94cd1981b8e2c/fb070/chatbot-0.png 1152w\", \"/static/3a6170b12ec31de8bec94cd1981b8e2c/fb104/chatbot-0.png 1728w\", \"/static/3a6170b12ec31de8bec94cd1981b8e2c/8fefe/chatbot-0.png 2240w\"],\n        \"sizes\": \"(max-width: 1152px) 100vw, 1152px\"\n      }}></img>{`\n    `}</span>\n    <h2 {...{\n      \"id\": \"common-use-cases\"\n    }}>{`Common use cases`}</h2>\n    <p>{`Bots have become an increasingly popular way to solve common business problems across domains, including:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Providing in-context help and guidance`}</strong>{` (e.g., scaling a company’s FAQ or helping a user get started)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Triaging or setting priority of cases`}</strong>{` by soliciting information from the user to decrease workload on humans (support tickets, patient symptom severity)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Performing common tasks or procedures`}</strong>{` (e.g., pay a bill, transfer money, or assist with electing health benefits)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Using natural language to search for information`}</strong>{` (e.g., find specific information like current balance, or dosing instructions for a medication)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"why-a-chatbot\"\n    }}>{`Why a chatbot?`}</h2>\n    <p>{`Before building a bot, make sure that you have justified it as an appropriate solution by asking yourself these questions:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`What are the users’ goals?`}</li>\n      <li parentName=\"ul\">{`How in-depth is the assistance the user will need?`}</li>\n      <li parentName=\"ul\">{`Is your domain better served by human assistance?`}</li>\n      <li parentName=\"ul\">{`How is a bot superior to online documentation, contextual support, wizards, etc.?`}</li>\n      <li parentName=\"ul\">{`What kind of data sources or abilities can this bot leverage for your business and your users?`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"user-needs\"\n    }}>{`User needs`}</h2>\n    <h4 {...{\n      \"id\": \"a-user-may-need\"\n    }}>{`A user may need:`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Access to help at any time`}</li>\n      <li parentName=\"ul\">{`An on-demand, relevant answer to a question`}</li>\n      <li parentName=\"ul\">{`High quality, consistent information about a product or service`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"within-a-conversation-a-user-may-need\"\n    }}>{`Within a conversation, a user may need:`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`To provide the bot with more context via structured responses`}</li>\n      <li parentName=\"ul\">{`To know what the bot understands, through reflection and confirming questions`}</li>\n      <li parentName=\"ul\">{`To identify the most recent and relevant message to improve understanding`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"dont-use-a-chatbot-when\"\n    }}>{`Don’t use a chatbot when:`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`A task could be accomplished more efficiently using a traditional user interface`}</li>\n      <li parentName=\"ul\">{`A process is very complex or could take a long time`}</li>\n      <li parentName=\"ul\">{`A real human is needed for sensitive or emotional topics`}</li>\n    </ul>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/design/ai/conversation\"\n      }}>{`IBM Design for Conversational AI`}</a>{` for more information.`}</p>\n    <h2 {...{\n      \"id\": \"supported-components\"\n    }}>{`Supported components`}</h2>\n    <p>{`While conversational interfaces may contain many different kinds of components, Carbon currently offers these components out of the box to help get you up and running quickly. See the Usage tab for information on how to use these components together.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Status`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Chatbot window`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Design available`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Chatbot header`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Design available`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`System message`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Design available`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`User message`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Design available`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Structured response`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Design available`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Chatbot cards`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Design available`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Chatbot text input`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Design available`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"chatbot-add-on-library\"\n    }}>{`Chatbot add-on library`}</h3>\n    <Row className=\"tile--resource--no-margin tile--group\" mdxType=\"Row\">\n      <Column offsetLg=\"4\" colLg=\"4\" colMd=\"4\" noGutterSm mdxType=\"Column\">\n  <ResourceCard title=\"Chatbot Sketch library\" href=\"https://ibm.box.com/s/7vauj3l8o88wukv6p80lddwhjlonoipd\" type=\"resource\" mdxType=\"ResourceCard\">\n          <span {...{\n            \"className\": \"gatsby-resp-image-wrapper\",\n            \"style\": {\n              \"position\": \"relative\",\n              \"display\": \"block\",\n              \"marginLeft\": \"auto\",\n              \"marginRight\": \"auto\",\n              \"maxWidth\": \"200px\"\n            }\n          }}>{`\n      `}<span parentName=\"span\" {...{\n              \"className\": \"gatsby-resp-image-background-image\",\n              \"style\": {\n                \"paddingBottom\": \"95%\",\n                \"position\": \"relative\",\n                \"bottom\": \"0px\",\n                \"left\": \"0px\",\n                \"backgroundSize\": \"cover\",\n                \"display\": \"block\"\n              }\n            }}></span>{`\n  `}<img parentName=\"span\" {...{\n              \"className\": \"gatsby-resp-image-image\",\n              \"alt\": \"sketch icon\",\n              \"title\": \"sketch icon\",\n              \"src\": \"/static/aeb99a8308cb0fc718bd4c42a1a0aba3/7d71f/sketch-icon.png\",\n              \"srcSet\": [\"/static/aeb99a8308cb0fc718bd4c42a1a0aba3/7d71f/sketch-icon.png 200w\"],\n              \"sizes\": \"(max-width: 200px) 100vw, 200px\"\n            }}></img>{`\n    `}</span>\n  </ResourceCard>\n      </Column>\n    </Row>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}