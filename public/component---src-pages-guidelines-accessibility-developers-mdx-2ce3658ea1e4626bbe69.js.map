{"version":3,"sources":["webpack:///./src/pages/guidelines/accessibility/developers.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","id","parentName","className","isMDXComponent","components_PageHeader","_cx","children","title","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","href","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-guidelines-accessibility-developers-mdx-2ce3658ea1e4626bbe69.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <AnchorLinks mdxType=\"AnchorLinks\">\n      <AnchorLink mdxType=\"AnchorLink\">HTML best practices</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">CSS best practices</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">JS best practices</AnchorLink>\n    </AnchorLinks>\n    <h2 {...{\n      \"id\": \"html-best-practices\"\n    }}>{`HTML best practices`}</h2>\n    <h3 {...{\n      \"id\": \"structuring-code-and-navigation\"\n    }}>{`Structuring code and navigation`}</h3>\n    <p>{`Think of code hierarchy when structuring your content so that screen readers and keyboard-only users can access interactive elements in a logical and predictable order via tabbing. Create the tab flow hierarchy by using the source code to arrange the keyboard navigation. Begin with the header, followed by the main navigation, then page navigation (from left to right, top to bottom), and end with the footer. The objective is to give keyboard users an intentional experience that is comparable to the experience of mouse users.`}</p>\n    <h3 {...{\n      \"id\": \"use-semantic-html\"\n    }}>{`Use semantic HTML`}</h3>\n    <p>{`Use native HTML elements as much as you can, and use them for their correct purpose. These elements have built-in accessibility benefits. They inform screen readers what they are and what they do, and standard interactive elements, such as a button, include keyboard functionality. Aside from making it accessible, this will also make it easier to develop and maintain, better on mobile, and good for search engine optimization.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<button>Play Video</button>\n<header></header>\n<main></main>\n<nav></nav>\n<footer></footer>\n<aside></aside>\n<section></section>\n<article></article>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"use-clear-language\"\n    }}>{`Use clear language`}</h3>\n    <p>{`When adding content, consider cognitive disabilities, anyone whose native language isn’t the language your content is written in, and screen readers. When possible, avoid dashes, abbreviations, acronyms (at least the first time), and table layouts if a table is not needed. If abbreviating, use the native `}<inlineCode parentName=\"p\">{`<abbr />`}</inlineCode>{` element with title attribute.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`\"9 to 5\" \"November\" <abbr title=\"November\">Nov</abbr>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"use-meaningful-text-labels\"\n    }}>{`Use meaningful text labels`}</h3>\n    <p>{`Consider visually impaired people when labeling elements. Make sure there is textual context for screen readers.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- Do this  -->\n<a>Read more about pricing</a>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!--  Not this  -->\n<a>Click here</a>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"making-accessible-data-tables\"\n    }}>{`Making accessible data tables`}</h3>\n    <p>{`Always specify table headers with `}<inlineCode parentName=\"p\">{`<th />`}</inlineCode>{` elements, and make sure they stand out. Utilize `}<inlineCode parentName=\"p\">{`scope`}</inlineCode>{` attribute if necessary to specify if they are headers for rows or columns. Utilize alternative text along with tables for visually impaired users. `}<inlineCode parentName=\"p\">{`<caption />`}</inlineCode>{` is preferred, but `}<inlineCode parentName=\"p\">{`<table />`}</inlineCode>{` summary works too.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<table summary=\"Names and Ages of My Coworkers\">\n  <caption>\n    Names and Ages of My Coworkers\n  </caption>\n  <thead>\n    <tr>\n      <th scope=\"col\">Firstname</th>\n      <th scope=\"col\">Lastname</th>\n      <th scope=\"col\">Age</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Jane</td>\n      <td>Smith</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <td>Tom</td>\n      <td>West</td>\n      <td>47</td>\n    </tr>\n  </tbody>\n</table>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"making-accessible-data-visualizations\"\n    }}>{`Making accessible data visualizations`}</h3>\n    <p>{`It is important to take into account visually impaired users when including data visualizations. Consider accompanying visuals with a data table as another alternative for users who rely on screen readers. It is also important to take into account color choices for color-blind users.`}</p>\n    <h3 {...{\n      \"id\": \"multimedia-text-alternatives\"\n    }}>{`Multimedia text alternatives`}</h3>\n    <p>{`Every image that is not decorative must include `}<inlineCode parentName=\"p\">{`alt`}</inlineCode>{` text with a meaningful description of the image and a `}<inlineCode parentName=\"p\">{`title`}</inlineCode>{` attribute. You can also utilize `}<inlineCode parentName=\"p\">{`aria-labelledby`}</inlineCode>{` along with `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` attributes instead of `}<inlineCode parentName=\"p\">{`alt`}</inlineCode>{` text. `}<strong parentName=\"p\">{`If the image is decorative, use an empty `}<inlineCode parentName=\"strong\">{`alt`}</inlineCode>{` attribute; otherwise the screen reader will read the whole image url if the `}<inlineCode parentName=\"strong\">{`alt`}</inlineCode>{` is left out.`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- Example 1 -->\n\n![](puppy.jpg\" title=\"Sleeping Puppy)A sleeping puppy\" />\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- Example 2 -->\n\n![](puppy2.jpg\" aria-labelledby=\"imagelabel\" />\n<p id=\"imagelabel\">This is a picture of a cute puppy in cup</p>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"audio-alternatives\"\n    }}>{`Audio alternatives`}</h3>\n    <p>{`Provide closed-captioning with videos or transcriptions of audio files.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<video controls>\n  <source src=\"example.mp4\" type=\"video/mp4\" />\n  <source src=\"example.webm\" type=\"video/webm\" />\n  <track kind=\"subtitles\" src=\"subtitles_english.vtt\" srclang=\"en\" />\n</video>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"avoid-font-icon-libraries\"\n    }}>{`Avoid font icon libraries`}</h3>\n    <p>{`Use SVG’s instead of font icon libraries, as those are not accessible.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<svg width=\"80\" height=\"10\">\n  <line class=\"line\" x1=\"200\" y1=\"0\" x2=\"0\" y2=\"0\" />\n</svg>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"utilize-aria-accessible-rich-internet-application-roles-and-landmark-roles\"\n    }}>{`Utilize ARIA (Accessible Rich Internet Application) roles and landmark roles`}</h3>\n    <p>{`ARIA roles convey the intent or meaning of an element to assistive technology. This helps users navigate when they can’t see the layout and provides further context about different functionalities.`}</p>\n    <p>{`Landmark roles identify regions in a page, and act much like native HTML tags would when it comes to semantics. Signpost roles describe other information about a given element’s functionality on a page. These are especially helpful when building complex, custom interfaces or to reinforce semantics in native HTML elements.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- landmark roles -->\n<nav role=\"navigation\"></nav>\n<main role=\"main\"></main>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- signpost roles -->\n<div role=\"banner\">This is a banner.</div>\n<div role=\"tabgroup\"><div role=\"tab\"></div></div>\n<div role=\"combobox\"></div>\n<div role=\"slider\"></div>\n<button role=\"button\"></button>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"css-best-practices\"\n    }}>{`CSS best practices`}</h2>\n    <h3 {...{\n      \"id\": \"css-rule-of-thumb\"\n    }}>{`CSS rule of thumb`}</h3>\n    <p>{`You can style a page feature to fit your design, but don’t change it to the point that it doesn’t look or behave as expected.`}</p>\n    <h3 {...{\n      \"id\": \"style-focus-indicators\"\n    }}>{`Style focus indicators`}</h3>\n    <p>{`Add styling to tabbable elements on hover and focus, so that keyboard-only users can have a clear visual of where they are navigating. Never suppress the focus indicator altogether.`}</p>\n    <h3 {...{\n      \"id\": \"hiding-elements\"\n    }}>{`Hiding elements`}</h3>\n    <p>{`When hiding content from a screen reader, consider source order. Use `}<inlineCode parentName=\"p\">{`visibility: hidden`}</inlineCode>{`, along with `}<inlineCode parentName=\"p\">{`display: none`}</inlineCode>{` in your CSS.`}</p>\n    <h2 {...{\n      \"id\": \"js-best-practices\"\n    }}>{`JS best practices`}</h2>\n    <h3 {...{\n      \"id\": \"javascript-rule-of-thumb\"\n    }}>{`JavaScript rule of thumb`}</h3>\n    <p>{`Don’t rely too much on JavaScript to generate HTML and CSS. Follow the “Unobtrusive JavaScript” principle, which means that JavaScript should be used to enhance functionality not build it entirely. Use your built-in browser functionality as much as possible. If you’re utilizing JavaScript to make complex UI features, use WAI-ARIA to make elements accessible. Examples of unobtrusive JavaScript include providing client-side form validation and custom controls for HTML5 `}<inlineCode parentName=\"p\">{`<video />`}</inlineCode>{` elements that are accessible to keyboards.`}</p>\n    <h3 {...{\n      \"id\": \"accessible-mouse-specific-events\"\n    }}>{`Accessible mouse-specific events`}</h3>\n    <p>{`Double up mouse-specific events with other events for keyboard-only users.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const foo = document.querySelector('.foo-class');\n\nfoo.onmouseover = someFunction();\n\nfoo.onmouseout = anotherFunction();\n\nfoo.onfocus = someFunction();\n\nfoo.onblur = anotherFunction();\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}