{"version":3,"sources":["webpack:///./src/pages/guidelines/content/guidance.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","AnchorLinks","AnchorLink","Row","Column","DoDontExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","id","parentName","offsetLg","colMd","colLg","square","correct","label","text","isMDXComponent","components_PageHeader","_cx","children","title","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","className","cx","PageHeader_module","length","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","href","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-guidelines-content-guidance-mdx-43143490a7ea44fdb839.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst DoDontExample = makeShortcode(\"DoDontExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"content-design-can-make-or-break-an-online-experience-always-strive-for-writing-that-is-clear-concise-and-on-brand\"\n    }}>{`Content design can make or break an online experience. Always strive for writing that is clear, concise, and on-brand`}</h3>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n      <AnchorLink mdxType=\"AnchorLink\">Capitalization</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Verb tense</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Active and passive voice</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">First and second person</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Formal vs. casual tone</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Can, may, and might</AnchorLink>\n    </AnchorLinks>\n    <h2 {...{\n      \"id\": \"capitalization\"\n    }}>{`Capitalization`}</h2>\n    <p>{`Use sentence-style capitalization in text and for all text elements in the UI except for proper nouns. Sentence style capitalizes only the first word of each sentence.`}</p>\n    <h4 {...{\n      \"id\": \"examples\"\n    }}>{`Examples:`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Cloud Foundry apps`}</li>\n      <li parentName=\"ul\">{`Business models`}</li>\n      <li parentName=\"ul\">{`Creating Boolean expressions`}</li>\n      <li parentName=\"ul\">{`Planning network architectures`}</li>\n      <li parentName=\"ul\">{`Carbon Design System`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"active-and-passive-voice\"\n    }}>{`Active and passive voice`}</h2>\n    <p>{`The `}<em parentName=\"p\">{`active voice`}</em>{` is direct and punchy, and emphasizes the subject of the sentence. The subject clearly “acts upon” the verb (hence, “active”). For example, “John ate the apple.” In situations where either voice will work, generally choose the active voice for more directness.`}</p>\n    <Row mdxType=\"Row\">\n  <Column offsetLg=\"4\" colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n    <DoDontExample square correct label=\"Do use active voice when appropriate.\" text=\"Next, the admin configures access privileges.\" mdxType=\"DoDontExample\" />\n  </Column>\n  <Column colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n    <DoDontExample square label=\"Don’t use passive voice when active voice will suffice.\" text=\"Next, access privileges are configured by the admin.\" mdxType=\"DoDontExample\" />\n  </Column>\n    </Row>\n    <p>{`The `}<em parentName=\"p\">{`passive voice`}</em>{`, on the other hand, flips the construction so that the subject is secondary to the verb and object (hence, “passive”). Often, the subject is not even included in the sentence. For example, “`}<em parentName=\"p\">{`The apple was eaten by John`}</em>{`” or just “`}<em parentName=\"p\">{`The apple was eaten`}</em>{`.” Only sentences that contain direct objects can be constructed in the passive voice. Thus, “`}<em parentName=\"p\">{`John ate`}</em>{`” cannot be constructed passively.`}</p>\n    <p>{`The passive voice makes for a more natural tone in certain use cases. For example, if the true subject of the sentence is a system, and the human is secondary, passive voice can be acceptable.`}</p>\n    <Row mdxType=\"Row\">\n  <Column offsetLg=\"4\" colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n    <DoDontExample square correct label=\"Do use passive voice when appropriate.\" text=\"The database needs to be rebooted.\" mdxType=\"DoDontExample\" />\n  </Column>\n  <Column colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n    <DoDontExample square label=\"Don’t use active voice when passive voice is more appropriate.\" text=\"Someone needs to reboot the database.\" mdxType=\"DoDontExample\" />\n  </Column>\n    </Row>\n    <h2 {...{\n      \"id\": \"first-and-second-person\"\n    }}>{`First and second person`}</h2>\n    <p>{`Engage your readers by using second person `}<strong parentName=\"p\">{`(you, your)`}</strong>{` where appropriate. First person `}<strong parentName=\"p\">{`(I, we, our)`}</strong>{` focuses on the writer rather than the audience, which is rarely appropriate in UI or technical contexts. Avoid the first person unless you have a compelling reason to use it.`}</p>\n    <p>{`One exception to this is in the case of possessive adjectives in the UI. You can use first person in headings or labels that are very specific to the user or customer data, such as “My Account” or “My Usage.” In explanatory text for the heading or label, however, use second person. For example, `}<em parentName=\"p\">{`“Your usage is calculated from the first day of the month.”`}</em></p>\n    <h2 {...{\n      \"id\": \"formal-vs-casual-tone\"\n    }}>{`Formal vs. casual tone`}</h2>\n    <p>{`While a more formal tone is often appropriate for technical and business writing, a more casual tone is becoming increasingly accepted (and expected) in UI and supporting materials.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Don’t be afraid to use `}<strong parentName=\"li\">{`contractions`}</strong>{`. When they fit the context and improve flow, go for it.`}</li>\n      <li parentName=\"ul\">{`Beginning sentences with `}<strong parentName=\"li\">{`and, but, or so`}</strong>{` is not always forbidden. When it allows for shorter, scannable sentences, they can be used. Do not overuse these devices, especially in instructional content. For example, `}<em parentName=\"li\">{`“You can deploy an app to the cloud during lunch hour. But it’s not required.”`}</em>{` works for `}<em parentName=\"li\">{`Discover, Try, Buy`}</em>{` experiences.`}</li>\n      <li parentName=\"ul\">{`It’s acceptable to use `}<strong parentName=\"li\">{`questions in headings`}</strong>{`. In both UIs and documentation, questions can be used to further conversational style. But don’t overuse them, as they can add to noise. Make sure headings that use questions are meaningful. In a UI, questions can also be used in a confirmation prompt in a dialog box. For example, `}<em parentName=\"li\">{`“Do you want to close without saving?”`}</em></li>\n      <li parentName=\"ul\">{`Use `}<strong parentName=\"li\">{`exclamation marks`}</strong>{` only positively, not negatively. Make sure you use no more than one exclamation mark in a context, such as a single window or a single Docs topic.`}</li>\n    </ul>\n    <Row mdxType=\"Row\">\n  <Column offsetLg=\"4\" colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n    <DoDontExample square correct label=\"Do use exclamation points for positive messages.\" text=\"Your IBM Cloud account is ready!\" mdxType=\"DoDontExample\" />\n  </Column>\n  <Column colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n    <DoDontExample square label=\"Don’t use exclamation points for negative messages\" text=\"You have reached your usage limit!!\" mdxType=\"DoDontExample\" />\n  </Column>\n    </Row>\n    <br />\n    <h4 {...{\n      \"id\": \"terms-of-politeness\"\n    }}>{`Terms of politeness`}</h4>\n    <p>{`Often overused, these terms can convey the wrong tone for technical material, and are not regarded the same way in all cultures. Use terms such as “please” and “thank you” carefully.`}</p>\n    <Row mdxType=\"Row\">\n  <Column offsetLg=\"4\" colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n    <DoDontExample square correct label=\"Do Use terms of politeness in a UI only when the user is being inconvenienced.\" text=\"Indexing might take a few minutes. Please wait.\" mdxType=\"DoDontExample\" />\n  </Column>\n  <Column colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n    <DoDontExample square label=\"Don’t Use terms of politeness superfluously.\" text=\"Please create a subscription account to get full access to the catalog.\" mdxType=\"DoDontExample\" />\n  </Column>\n    </Row>\n    <h2 {...{\n      \"id\": \"can-may-and-might\"\n    }}>{`Can, may, and might`}</h2>\n    <h4 {...{\n      \"id\": \"terms-of-ability\"\n    }}>{`Terms of ability`}</h4>\n    <p>{`These terms are often misused. Remember, “can” implies ability, and “may” implies permission (and sometimes uncertainty).`}</p>\n    <Row mdxType=\"Row\">\n  <Column offsetLg=\"4\" colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n    <DoDontExample square correct label=\"Do use ‘can’ to express ability.\" text=\"You can use the command line interface to update your app.\" mdxType=\"DoDontExample\" />\n  </Column>\n  <Column colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n    <DoDontExample square label=\"Don’t use ‘may’ when you mean ‘can.’\" text=\"You may use the command line interface to update your app.\" mdxType=\"DoDontExample\" />\n  </Column>\n    </Row>\n    <br />\n    <h4 {...{\n      \"id\": \"terms-of-possibility\"\n    }}>{`Terms of possibility`}</h4>\n    <p>{`These terms can also be confusing. Remember, when either “may” or “might” will work, generally go with “might” to avoid confusion with the multiple meanings of “may.”`}</p>\n    <Row mdxType=\"Row\">\n  <Column offsetLg=\"4\" colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n    <DoDontExample square correct label=\"Do use ‘might’ to clarify possibility.\" text=\"You might need more advanced features when integrating with another app.\" mdxType=\"DoDontExample\" />\n  </Column>\n  <Column colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n    <DoDontExample square label=\"Don’t use ‘may’ when ‘might’ will work.\" text=\"You may need more advanced features when integrating with another app.\" mdxType=\"DoDontExample\" />\n  </Column>\n    </Row>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}