{"version":3,"sources":["webpack:///./src/pages/guidelines/iconography/contribute.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","id","parentName","href","className","style","position","display","marginLeft","marginRight","maxWidth","paddingBottom","bottom","left","backgroundSize","alt","title","src","srcSet","sizes","isMDXComponent","components_PageHeader","_cx","children","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-guidelines-iconography-contribute-mdx-fc47711e35872cf4491a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <AnchorLinks mdxType=\"AnchorLinks\">\n      <AnchorLink mdxType=\"AnchorLink\">Design and production guidelines</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Making an icon</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Exporting SVGs</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Contribution process</AnchorLink>\n    </AnchorLinks>\n    <h2 {...{\n      \"id\": \"design-and-production-guidelines\"\n    }}>{`Design and production guidelines`}</h2>\n    <p>{`Don’t see the icon you need in the library? Make your own! Follow these guidelines to ensure visual consistency and proper formatting.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`All icons should be unique and not redundant with any existing icons in the system. Search the `}<a parentName=\"li\" {...{\n          \"href\": \"/guidelines/iconography/library\"\n        }}>{`library`}</a>{` for the keyword(s) associated with your proposed new icon to ensure that it is not already represented.`}</li>\n      <li parentName=\"ul\">{`All icons should adhere to the `}<a parentName=\"li\" {...{\n          \"href\": \"https://w3.ibm.com/design/language/elements/icons/\"\n        }}>{`IBM Design Language visual style`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`All icons should comply with IBM `}<a parentName=\"li\" {...{\n          \"href\": \"/guidelines/accessibility/overview\"\n        }}>{`accessibility standards`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`All icons should be usable across all supported platforms and devices.`}</li>\n      <li parentName=\"ul\">{`All icons should be understandable by a global audience of users, regardless of nationality or language.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"making-an-icon\"\n    }}>{`Making an icon`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Create a 16 x 16 or 32 x 32 px artboard for each icon.`}</li>\n      <li parentName=\"ul\">{`16 px icons should have 1 px padding. 32 px icons should have 2 px padding.`}</li>\n      <li parentName=\"ul\">{`Set your workspace up from the start to snap to pixels and round values to whole pixels to avoid correcting shapes later.`}</li>\n      <li parentName=\"ul\">{`Never use center borders. Centering can cause half pixels.`}</li>\n      <li parentName=\"ul\">{`Avoid using the line tool; use the rectangle tool instead. The line tool will place the vector on half pixels.`}</li>\n      <li parentName=\"ul\">{`Be aware of automatic alignments which can place vectors on uneven or half pixels.`}</li>\n      <li parentName=\"ul\">{`Ungroup icon layers completely. The icon should be on the top-most layer in your artboard.`}</li>\n      <li parentName=\"ul\">{`Make sure to properly name layers and artboards `}<em parentName=\"li\">{`(these names will also be exported into the code)`}</em>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"production-ready\"\n    }}>{`Production-ready`}</h3>\n    <p>{`To be considered production-ready, all icon submissions must be delivered in SVG format at 16 x 16 px (for integration with Carbon components) or 32 x 32 (for service icons).`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Icons should be at whole pixels. No decimals are allowed in x and y coordinates or width and height fields.`}</li>\n      <li parentName=\"ul\">{`Each artboard and the artwork within it must be aligned to the pixel grid.`}</li>\n      <li parentName=\"ul\">{`All strokes must be expanded and at full pixel values.`}</li>\n      <li parentName=\"ul\">{`All possible shapes and paths should be combined.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"exporting-svgs\"\n    }}>{`Exporting SVGs`}</h2>\n    <h3 {...{\n      \"id\": \"export-svgs-from-sketch\"\n    }}>{`Export SVGs from Sketch`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Draw a 16 x 16 or 32 x 32 px artboard. 16 px icons should have 1 px padding. 32 px icons should have 2 px padding.`}</li>\n      <li parentName=\"ol\">{`Place the icon squarely on the artboard, making sure it’s aligned to the pixel grid.`}</li>\n      <li parentName=\"ol\">{`Convert all strokes to outlines `}<inlineCode parentName=\"li\">{`(Shift + ⌘ + O)`}</inlineCode></li>\n      <li parentName=\"ol\">{`Select any overlapping shapes and click the Union icon from the top navigation to merge all of the shapes together.`}</li>\n      <li parentName=\"ol\">{`Make sure the icon is at `}<inlineCode parentName=\"li\">{`#000000`}</inlineCode>{` and has no additional styling.`}</li>\n      <li parentName=\"ol\">{`Select the entire artboard (not just the icon).`}</li>\n      <li parentName=\"ol\">{`Click `}<inlineCode parentName=\"li\">{`Make Exportable`}</inlineCode>{` at the bottom of the right toolbar in Sketch.`}</li>\n      <li parentName=\"ol\">{`In the `}<inlineCode parentName=\"li\">{`Export`}</inlineCode>{` widget select “SVG” in the format dropdown.`}</li>\n      <li parentName=\"ol\">{`Click `}<inlineCode parentName=\"li\">{`Export 'Artboard-Name'`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Name icon with the `}<inlineCode parentName=\"li\">{`#name--modifier`}</inlineCode>{` convention `}<em parentName=\"li\">{`(i.e.`}</em>{` `}<inlineCode parentName=\"li\">{`copy.svg`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`copy--glyph.svg`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`add.svg`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`add--glyph.svg`}</inlineCode>{`).`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"export-svgs-from-adobe-illustrator\"\n    }}>{`Export SVGs from Adobe Illustrator`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Draw a 16 x 16 or 32 x 32 px artboard. 16 px icons should have 1 px padding. 32 px icons should have 2 px padding.`}</li>\n      <li parentName=\"ol\">{`Place the icon squarely on the artboard, making sure it’s aligned to the pixel grid.`}</li>\n      <li parentName=\"ol\">{`Expand all strokes `}<inlineCode parentName=\"li\">{`Object`}</inlineCode>{` → `}<inlineCode parentName=\"li\">{`Expand`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Select all overlapping shapes and click the “Unite” icon in the Pathfinder panel to merge all of the shapes together.`}</li>\n      <li parentName=\"ol\">{`Make sure the icon is at `}<inlineCode parentName=\"li\">{`#000000`}</inlineCode>{` and has no additional styling.`}</li>\n      <li parentName=\"ol\">{`Select `}<inlineCode parentName=\"li\">{`File`}</inlineCode>{` → `}<inlineCode parentName=\"li\">{`Save a Copy...`}</inlineCode>{` from the top navigation.`}</li>\n      <li parentName=\"ol\">{`On the `}<inlineCode parentName=\"li\">{`Format`}</inlineCode>{` dropdown select “SVG.”`}</li>\n      <li parentName=\"ol\">{`Below `}<inlineCode parentName=\"li\">{`Format`}</inlineCode>{` select `}<inlineCode parentName=\"li\">{`Use Artboard`}</inlineCode>{`, then select either all or a range of artboards, depending on your need.`}</li>\n      <li parentName=\"ol\">{`Click `}<inlineCode parentName=\"li\">{`Save`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`The `}<inlineCode parentName=\"li\">{`SVG Options`}</inlineCode>{` dialog will then open.`}</li>\n      <li parentName=\"ol\">{`Make sure the preferences are the same as in the image below.`}</li>\n    </ol>\n    <span {...{\n      \"className\": \"gatsby-resp-image-wrapper\",\n      \"style\": {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\",\n        \"maxWidth\": \"476px\"\n      }\n    }}>{`\n      `}<span parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-background-image\",\n        \"style\": {\n          \"paddingBottom\": \"135.29411764705884%\",\n          \"position\": \"relative\",\n          \"bottom\": \"0px\",\n          \"left\": \"0px\",\n          \"backgroundSize\": \"cover\",\n          \"display\": \"block\"\n        }\n      }}></span>{`\n  `}<img parentName=\"span\" {...{\n        \"className\": \"gatsby-resp-image-image\",\n        \"alt\": \"export an icon from illustrator\",\n        \"title\": \"export an icon from illustrator\",\n        \"src\": \"/static/d688017c5a5ec6e12e71707115994372/14f9f/iconography-contribution-exportsvgfromai.png\",\n        \"srcSet\": [\"/static/d688017c5a5ec6e12e71707115994372/d6747/iconography-contribution-exportsvgfromai.png 288w\", \"/static/d688017c5a5ec6e12e71707115994372/14f9f/iconography-contribution-exportsvgfromai.png 476w\"],\n        \"sizes\": \"(max-width: 476px) 100vw, 476px\"\n      }}></img>{`\n    `}</span>\n    <h2 {...{\n      \"id\": \"contribution-process\"\n    }}>{`Contribution process`}</h2>\n    <p>{`Would your icon be useful for other products? If so, please consider contributing to the design system.`}</p>\n    <p>{`To submit, open a pull request with your icon in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-elements/tree/master/packages/icons\"\n      }}>{`carbon-icons`}</a>{` repository.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}