{"version":3,"sources":["webpack:///./src/pages/guidelines/typography/expressive.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","_extends","mdxType","id","parentName","components_TypesetStyle__WEBPACK_IMPORTED_MODULE_9__","breakpointControls","typesets","isMDXComponent","components_PageHeader","_cx","children","title","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","className","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","href","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-guidelines-typography-expressive-mdx-b2e42c120a036acf14d4.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport TypesetStyle from 'components/TypesetStyle';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"expressive-type-sets\"\n    }}>{`Expressive type sets`}</h2>\n    <p>{`Expressive type is reserved for use in editorial and digital marketing experiences which may require more dynamic typographic hierarchies and more variety in the Heading scale. The Expressive styles are curated to create a series of clear user expectations while still allowing for a more dramatic, graphic use of type.`}</p>\n    <p>{`The Expressive styles below introduce the new IBM Design Language tokens. The difference between the Productive and Expressive styles is mainly evident in the Headings. Aside from the token names, which are specifically calibrated for product vs. editorial designers (e.g. `}<inlineCode parentName=\"p\">{`$label-01`}</inlineCode>{` vs. `}<inlineCode parentName=\"p\">{`$caption-01`}</inlineCode>{`) â€” the supporting and body styles have the same values in both the Productive and Expressive sets.`}</p>\n    <TypesetStyle breakpointControls={false} typesets=\"supportingStyle,body,fixedHeading\" mdxType=\"TypesetStyle\" />\n    <h2 {...{\n      \"id\": \"fluid-type-sets\"\n    }}>{`Fluid type sets`}</h2>\n    <p>{`Fluid type is applied to large headline and display type styles. We set up fixed type scales at the breakpoints and are fluid in between. This helps us to maintain the quality of typography. Display styles are reserved only for graphic/visual elements. These should be used sparingly and thoughtfully within a user journey. It is not suitable for complex messaging, does not need to appear on every page.`}</p>\n    <TypesetStyle breakpointControls={true} typesets=\"fluidHeadings,FluidParagraphsAndQuotes,fluidDisplay\" mdxType=\"TypesetStyle\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}