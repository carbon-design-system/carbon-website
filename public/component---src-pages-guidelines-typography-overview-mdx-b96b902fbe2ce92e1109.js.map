{"version":3,"sources":["webpack:///./src/pages/guidelines/typography/overview.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","AnchorLinks","AnchorLink","Row","Column","ResourceCard","DoDontExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","id","className","offsetLg","colMd","colLg","noGutterSm","title","href","type","style","position","display","marginLeft","marginRight","maxWidth","parentName","paddingBottom","bottom","left","backgroundSize","alt","src","srcSet","sizes","_src_components_TypeWeight__WEBPACK_IMPORTED_MODULE_10__","_src_components_TypeScaleTable__WEBPACK_IMPORTED_MODULE_9__","correct","dark","label","isMDXComponent","components_PageHeader","_cx","children","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-guidelines-typography-overview-mdx-b96b902fbe2ce92e1109.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport TypeScaleTable from '../../../../src/components/TypeScaleTable';\nimport TypeWeight from '../../../../src/components/TypeWeight';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst ResourceCard = makeShortcode(\"ResourceCard\");\nconst DoDontExample = makeShortcode(\"DoDontExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h3 {...{\n      \"id\": \"typography-can-help-create-clear-hierarchies-organize-information-and-guide-users-through-a-product-or-experience\"\n    }}>{`Typography can help create clear hierarchies, organize information, and guide users through a product or experience.`}</h3>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n      <AnchorLink mdxType=\"AnchorLink\">Type tokens and sets</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Typeface: IBM Plex</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Scale</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Style</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Type color</AnchorLink>\n    </AnchorLinks>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <Row className=\"tile--group\" mdxType=\"Row\">\n      <Column offsetLg=\"4\" colMd=\"4\" colLg=\"4\" noGutterSm mdxType=\"Column\">\n  <ResourceCard title=\"Get the latest IBM Plex™ download on GitHub\" href=\"https://github.com/IBM/plex/releases/latest\" type=\"resource\" mdxType=\"ResourceCard\">\n          <span {...{\n            \"className\": \"gatsby-resp-image-wrapper\",\n            \"style\": {\n              \"position\": \"relative\",\n              \"display\": \"block\",\n              \"marginLeft\": \"auto\",\n              \"marginRight\": \"auto\",\n              \"maxWidth\": \"200px\"\n            }\n          }}>{`\n      `}<span parentName=\"span\" {...{\n              \"className\": \"gatsby-resp-image-background-image\",\n              \"style\": {\n                \"paddingBottom\": \"98%\",\n                \"position\": \"relative\",\n                \"bottom\": \"0px\",\n                \"left\": \"0px\",\n                \"backgroundSize\": \"cover\",\n                \"display\": \"block\"\n              }\n            }}></span>{`\n  `}<img parentName=\"span\" {...{\n              \"className\": \"gatsby-resp-image-image\",\n              \"alt\": \"github icon\",\n              \"title\": \"github icon\",\n              \"src\": \"/static/685e175fe4a49ccc584e92390bde04d2/7d71f/github-icon.png\",\n              \"srcSet\": [\"/static/685e175fe4a49ccc584e92390bde04d2/7d71f/github-icon.png 200w\"],\n              \"sizes\": \"(max-width: 200px) 100vw, 200px\"\n            }}></img>{`\n    `}</span>\n  </ResourceCard>\n      </Column>\n      <Column colMd=\"4\" colLg=\"4\" noGutterSm mdxType=\"Column\">\n  <ResourceCard title=\"Visit the IBM Plex™ website to learn more\" href=\"https://www.ibm.com/plex/\" type=\"resource\" mdxType=\"ResourceCard\">\n  </ResourceCard>\n      </Column>\n      <Column offsetLg=\"4\" colMd=\"4\" colLg=\"4\" noGutterSm mdxType=\"Column\">\n  <ResourceCard title=\"Elements package: Type\" href=\"https://github.com/IBM/carbon-elements/tree/master/packages/type\" type=\"resource\" mdxType=\"ResourceCard\">\n          <span {...{\n            \"className\": \"gatsby-resp-image-wrapper\",\n            \"style\": {\n              \"position\": \"relative\",\n              \"display\": \"block\",\n              \"marginLeft\": \"auto\",\n              \"marginRight\": \"auto\",\n              \"maxWidth\": \"200px\"\n            }\n          }}>{`\n      `}<span parentName=\"span\" {...{\n              \"className\": \"gatsby-resp-image-background-image\",\n              \"style\": {\n                \"paddingBottom\": \"98%\",\n                \"position\": \"relative\",\n                \"bottom\": \"0px\",\n                \"left\": \"0px\",\n                \"backgroundSize\": \"cover\",\n                \"display\": \"block\"\n              }\n            }}></span>{`\n  `}<img parentName=\"span\" {...{\n              \"className\": \"gatsby-resp-image-image\",\n              \"alt\": \"github icon\",\n              \"title\": \"github icon\",\n              \"src\": \"/static/685e175fe4a49ccc584e92390bde04d2/7d71f/github-icon.png\",\n              \"srcSet\": [\"/static/685e175fe4a49ccc584e92390bde04d2/7d71f/github-icon.png 200w\"],\n              \"sizes\": \"(max-width: 200px) 100vw, 200px\"\n            }}></img>{`\n    `}</span>\n  </ResourceCard>\n      </Column>\n      <Column colMd=\"4\" colLg=\"4\" noGutterSm mdxType=\"Column\">\n  <ResourceCard title=\"Type package preview\" href=\"https://github.com/IBM/carbon-elements/tree/master/packages/type\" type=\"resource\" mdxType=\"ResourceCard\">\n          <span {...{\n            \"className\": \"gatsby-resp-image-wrapper\",\n            \"style\": {\n              \"position\": \"relative\",\n              \"display\": \"block\",\n              \"marginLeft\": \"auto\",\n              \"marginRight\": \"auto\",\n              \"maxWidth\": \"200px\"\n            }\n          }}>{`\n      `}<span parentName=\"span\" {...{\n              \"className\": \"gatsby-resp-image-background-image\",\n              \"style\": {\n                \"paddingBottom\": \"98%\",\n                \"position\": \"relative\",\n                \"bottom\": \"0px\",\n                \"left\": \"0px\",\n                \"backgroundSize\": \"cover\",\n                \"display\": \"block\"\n              }\n            }}></span>{`\n  `}<img parentName=\"span\" {...{\n              \"className\": \"gatsby-resp-image-image\",\n              \"alt\": \"sandbox icon\",\n              \"title\": \"sandbox icon\",\n              \"src\": \"/static/6c228cfe2ab2ee15d1c722c13f3eced0/7d71f/sandbox-icon.png\",\n              \"srcSet\": [\"/static/6c228cfe2ab2ee15d1c722c13f3eced0/7d71f/sandbox-icon.png 200w\"],\n              \"sizes\": \"(max-width: 200px) 100vw, 200px\"\n            }}></img>{`\n    `}</span>\n </ResourceCard> \n      </Column>\n    </Row>\n    <br />\n    <br />\n    <h2 {...{\n      \"id\": \"type-tokens-and-sets\"\n    }}>{`Type tokens and sets`}</h2>\n    <p>{`Carbon uses type tokens and themes to manage typography. Type tokens are pre-set configurations of typographic elements such as font size, weight, or leading (line height) that are specifically calibrated for use alongside `}<a parentName=\"p\" {...{\n        \"href\": \"http://ibm.com/plex\"\n      }}>{`IBM Plex`}</a>{` in product. Selecting the appropriate type style is determined by layout or template structure. Layouts may have several levels of architecture or areas that require varying typographic hierarchies.`}</p>\n    <h3 {...{\n      \"id\": \"productive-vs-expressive-type-sets\"\n    }}>{`Productive vs. Expressive type sets`}</h3>\n    <p>{`Productive type is reserved for use in web-based product design, where the user needs to focus on tasks. The Productive styles are curated to create a series of clear user expectations about hierarchy. Expressive type, on the other hand, allows for a more dramatic, graphic use of type in editorial and marketing design — which many users would find distracting in product.`}</p>\n    <p>{`There are two heading sets, one Productive and one Expressive. The difference between the Productive and Expressive styles is mainly evident in the Headings. Aside from the token names, which are specifically calibrated for product vs. editorial designers (e.g. $label-01 vs. $caption-01) — the Supporting and Body styles have the same values in both the Productive and Expressive sets.`}</p>\n    <h2 {...{\n      \"id\": \"typeface-ibm-plex\"\n    }}>{`Typeface: IBM Plex`}</h2>\n    <p>{`Carbon uses the open-source typeface `}<strong parentName=\"p\">{`IBM Plex`}</strong>{`. It has been carefully designed to meet IBM’s needs as a global technology company and reflect IBM’s spirit, beliefs, and design principles. IBM Plex can be accessed and downloaded from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ibm/plex\"\n      }}>{`Plex GitHub Repo`}</a>{`.`}</p>\n    <TypeWeight type=\"types\" mdxType=\"TypeWeight\" />\n    <h3 {...{\n      \"id\": \"sans-serif-font-stack\"\n    }}>{`Sans-serif font stack`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`font-family: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"serif-font-stack\"\n    }}>{`Serif font stack`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`font-family: 'IBM Plex Serif', 'Georgia', Times, serif;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"mono-font-stack\"\n    }}>{`Mono font stack`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`font-family: 'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono',\n  'Bitstream Vera Sans Mono', Courier, monospace;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"scale\"\n    }}>{`Scale`}</h2>\n    <p>{`The IBM type scale is built on a single equation. The formula for our scale was created to provide hierarchy for all types of experiences. The formula assumes that y₀=12 px:`}</p>\n    <TypeScaleTable mdxType=\"TypeScaleTable\" />\n    <pre><code parentName=\"pre\" {...{}}>{`Xn = Xn-1 + {INT[(n-2)/4] + 1} * 2\nXn: step n type size Xn-1: step n-1 type size\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"style\"\n    }}>{`Style`}</h2>\n    <p>{`Typography creates purposeful texture, guiding users to read and understand the hierarchy of information. The right typographic treatment and the controlled usage of type styles helps manage the display of content, keeping it useful, simple, and effective.`}</p>\n    <h3 {...{\n      \"id\": \"weights\"\n    }}>{`Weights`}</h3>\n    <p>{`Font weight is an important typographic variable that can add emphasis and differentiate content hierarchy. Font weight and size pairings must be carefully balanced. A bold weight will always have more emphasis than a lighter weight font of the same size. However, a lighter weight font can rank hierarchically higher than a bold font if the lighter weight type size is significantly larger than the bold one.`}</p>\n    <p>{`We suggest using IBM Plex Light, Regular, and SemiBold for digital experiences. The semibold weight is ideal for section headers, but should not be used for long text.`}</p>\n    <TypeWeight mdxType=\"TypeWeight\" />\n    <h3 {...{\n      \"id\": \"italic\"\n    }}>{`Italic`}</h3>\n    <p>{`Each weight has an italic style, which should only be used when you need to emphasize certain words in a sentence (titles of works, technical terms, names of devices, captions, etc.).`}</p>\n    <TypeWeight type=\"italic\" mdxType=\"TypeWeight\" />\n    <h2 {...{\n      \"id\": \"type-color\"\n    }}>{`Type color`}</h2>\n    <p>{`Type color should be carefully considered, with legibility and accessibility as paramount concerns. Keep type color neutral in running text. Use primary blue for primary actions.`}</p>\n    <Row mdxType=\"Row\">\n      <Column offsetLg=\"4\" colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n        <DoDontExample correct mdxType=\"DoDontExample\">\n          <img {...{\n            \"src\": \"/Typography_overview_Type-color-1-c62b2ead82d277c708c6478416bc2ed7.svg\",\n            \"alt\": \"Neutral color for text\"\n          }}></img>\n        </DoDontExample>\n      </Column>\n      <Column colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n        <DoDontExample mdxType=\"DoDontExample\">\n          <img {...{\n            \"src\": \"/Typography_overview_Type-color-2-6dd70c4eb05b74e0e64e319efb96e9ae.svg\",\n            \"alt\": \"I'm a magenta sentence for no reason\"\n          }}></img>\n        </DoDontExample>\n      </Column>\n    </Row>\n    <Row mdxType=\"Row\">\n      <Column offsetLg=\"4\" colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n        <DoDontExample correct dark=\"true\" mdxType=\"DoDontExample\">\n          <img {...{\n            \"src\": \"/Typography_overview_Type-color-3-bd205bd9e609d2c3fa668c47f287d18e.svg\",\n            \"alt\": \"Neutral color for text\"\n          }}></img>\n        </DoDontExample>\n      </Column>\n      <Column colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n        <DoDontExample dark=\"true\" mdxType=\"DoDontExample\">\n          <img {...{\n            \"src\": \"/Typography_overview_Type-color-4-85e6ec7a8f025768a2fb99158980ebaf.svg\",\n            \"alt\": \"Color is not for decoration\"\n          }}></img>\n        </DoDontExample>\n      </Column>\n    </Row>\n    <Row mdxType=\"Row\">\n      <Column offsetLg=\"4\" colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n        <DoDontExample correct label=\"Core blue colors are used for text links and primary actions\" mdxType=\"DoDontExample\">\n          <img {...{\n            \"src\": \"/Typography_overview_Type-color-5-d71ae288b89e4368fb7dd5fdb9bdf49b.svg\",\n            \"alt\": \"Link with icon\"\n          }}></img>\n        </DoDontExample>\n      </Column>\n      <Column colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n        <DoDontExample correct label=\"Secondary actions use Gray 100 and icons\" mdxType=\"DoDontExample\">\n          <img {...{\n            \"src\": \"/Typography_overview_Type-color-6-7470031ea82790f8813a4e3e9cb23e52.svg\",\n            \"alt\": \"Download with icon\"\n          }}></img>\n        </DoDontExample>\n      </Column>\n    </Row>\n    <Row mdxType=\"Row\">\n      <Column offsetLg=\"4\" colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n        <DoDontExample correct label=\"Other use cases for colored type are code snippets, warnings, alerts, etc.\" mdxType=\"DoDontExample\">\n          <img {...{\n            \"src\": \"/Typography_overview_Type-color-7-b42ebaf8b4289e1da89c9b184b6bec3f.svg\",\n            \"alt\": \"Oops, something went wrong! colored text\"\n          }}></img>\n        </DoDontExample>\n      </Column>\n      <Column colMd=\"4\" colLg=\"4\" mdxType=\"Column\">\n        <DoDontExample correct mdxType=\"DoDontExample\">\n          <img {...{\n            \"src\": \"/Typography_overview_Type-color-8-b73c46a93802fc24874a9f3159a16d63.svg\",\n            \"alt\": \"Code snippet with colored highlight type\"\n          }}></img>\n        </DoDontExample>\n      </Column>\n    </Row>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}