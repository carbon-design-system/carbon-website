{"version":3,"sources":["webpack:///./src/pages/tutorial/react-step-1/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","AnchorLinks","AnchorLink","Row","Column","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","id","parentName","href","offsetLg","height","title","src","frameBorder","allowtransparency","allowFullScreen","className","isMDXComponent","components_PageHeader","_cx","children","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-tutorial-react-step-1-index-mdx-426c03d90ec80f95b411.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"starting-with-create-react-app-lets-install-carbon-and-begin-using-carbon-components-by-the-end-you-will-have-a-react-app-that-uses-the-ui-shell-to-navigate-between-pages\"\n    }}>{`Starting with Create React App, let’s install Carbon and begin using Carbon components. By the end you will have a React app that uses the UI Shell to navigate between pages.`}</h3>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n      <AnchorLink mdxType=\"AnchorLink\">Fork, clone and branch</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Build and start</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Install Carbon</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Install and build Sass</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Add UI Shell</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Create pages</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Add routing</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Submit pull request</AnchorLink>\n    </AnchorLinks>\n    <h2 {...{\n      \"id\": \"preview\"\n    }}>{`Preview`}</h2>\n    <p>{`A `}<a parentName=\"p\" {...{\n        \"href\": \"https://react-step-2--carbon-tutorial.netlify.com\"\n      }}>{`preview`}</a>{` of what you will build:`}</p>\n    <Row mdxType=\"Row\">\n  <Column offsetLg=\"4\" mdxType=\"Column\">\n    <iframe height=\"200\" title=\"Carbon Tutorial Step 1\" src=\"https://react-step-2--carbon-tutorial.netlify.com\" frameBorder=\"no\" allowtransparency=\"true\" allowFullScreen=\"true\" className=\"bx--iframe bx--iframe--border\" />\n  </Column>\n    </Row>\n    <h2 {...{\n      \"id\": \"fork-clone-and-branch\"\n    }}>{`Fork, clone and branch`}</h2>\n    <p>{`This tutorial has an accompanying GitHub repository called `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-tutorial\"\n      }}>{`carbon-tutorial`}</a>{` that we’ll use as a starting point for each step.`}</p>\n    <h3 {...{\n      \"id\": \"fork\"\n    }}>{`Fork`}</h3>\n    <p>{`To begin, fork `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-tutorial\"\n      }}>{`carbon-tutorial`}</a>{` using your GitHub account.`}</p>\n    <h3 {...{\n      \"id\": \"clone\"\n    }}>{`Clone`}</h3>\n    <p>{`Go to your forked repository, copy the SSH or HTTPS URL and in your terminal run the two commands to get the repository in your local file system and enter that directory.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ git clone [your fork SSH/HTTPS]\n$ cd carbon-tutorial\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"add-upstream-remote\"\n    }}>{`Add upstream remote`}</h3>\n    <p>{`Add a remote called `}<inlineCode parentName=\"p\">{`upstream`}</inlineCode>{` so we can eventually submit a pull request once you have completed this tutorial step.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ git remote add upstream git@github.com:carbon-design-system/carbon-tutorial.git\n`}</code></pre>\n    <p>{`Or, if you prefer to use HTTPS instead of SSH with your remotes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ git remote add upstream https://github.com/carbon-design-system/carbon-tutorial.git\n`}</code></pre>\n    <p>{`Verify that your forked repository remotes are correct:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ git remote -v\n`}</code></pre>\n    <p>{`Your terminal should output something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`origin  [your forked repo] (fetch)\norigin  [your forked repo] (push)\nupstream    git@github.com:carbon-design-system/carbon-tutorial.git (fetch)\nupstream    git@github.com:carbon-design-system/carbon-tutorial.git (push)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"branch\"\n    }}>{`Branch`}</h3>\n    <p>{`Now that we have our repository set up, let’s check out the branch for this tutorial step’s starting point. Run the two commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ git fetch upstream\n$ git checkout -b react-step-1 upstream/react-step-1\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"build-and-start\"\n    }}>{`Build and start`}</h2>\n    <p>{`We have the repository forked to your GitHub account, cloned down to your machine, and the starting branch checked out. Next, install the React app’s dependencies with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn\n`}</code></pre>\n    <p>{`After the dependencies are installed, you can start the app with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn start\n`}</code></pre>\n    <p>{`Your default browser should open up with an empty page that says: `}<inlineCode parentName=\"p\">{`Hello Carbon! Well, not quite yet. This is the starting point for the Carbon tutorial.`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"install-carbon\"\n    }}>{`Install Carbon`}</h2>\n    <p>{`Even though we installed existing dependencies, we’ve yet to install the Carbon packages.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`carbon-components`}</inlineCode>{` - component styles`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`carbon-components-react`}</inlineCode>{` - React components`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`@carbon/icons-react`}</inlineCode>{` - React icons`}</li>\n    </ul>\n    <p>{`Stop your development server with `}<inlineCode parentName=\"p\">{`CTRL-C`}</inlineCode>{` and install Carbon dependencies with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn add carbon-components carbon-components-react @carbon/icons-react\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"install-and-build-sass\"\n    }}>{`Install and build Sass`}</h2>\n    <p>{`We need to run a Sass build as the Carbon styles are authored in Sass, so run the following command to install `}<inlineCode parentName=\"p\">{`node-sass`}</inlineCode>{` as a dependency.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn add node-sass\n`}</code></pre>\n    <p>{`To avoid having to add the `}<inlineCode parentName=\"p\">{`~`}</inlineCode>{` prefix when importing SCSS files from `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{`, create a `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file at the project root that contains:`}</p>\n    <h5 {...{\n      \"id\": \"env\"\n    }}>{`.env`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`SASS_PATH=\"node_modules\"\n`}</code></pre>\n    <p>{`For the Windows operating system, use:`}</p>\n    <h5 {...{\n      \"id\": \"env-1\"\n    }}>{`.env`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`SASS_PATH=./node_modules\n`}</code></pre>\n    <p>{`Then, start the app again. If your app’s currently running, you’ll need to restart it for the new environment variable to be used.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn start\n`}</code></pre>\n    <p>{`The app looks as it did before. Next, let’s prepare our app for a Sass build.`}</p>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` directory, rename `}<inlineCode parentName=\"p\">{`index.css`}</inlineCode>{` as `}<inlineCode parentName=\"p\">{`index.scss`}</inlineCode>{`. Then in `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{` update the `}<inlineCode parentName=\"p\">{`index.css`}</inlineCode>{` import to `}<inlineCode parentName=\"p\">{`index.scss`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"import-carbon-component-styles\"\n    }}>{`Import carbon-component styles`}</h3>\n    <p>{`In `}<inlineCode parentName=\"p\">{`index.scss`}</inlineCode>{`, import the Carbon styles by adding the following at the top of the file:`}</p>\n    <h5 {...{\n      \"id\": \"srcindexscss\"\n    }}>{`src/index.scss`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@import 'carbon-components/scss/globals/scss/styles.scss';\n`}</code></pre>\n    <p>{`This will take a moment for the Sass to compile. Once compiled, you’ll notice that the Carbon base styling is applied (IBM Plex Sans font family, font size, weight, colors, etc.)`}</p>\n    <p>{`Because any change to `}<inlineCode parentName=\"p\">{`index.scss`}</inlineCode>{` will re-compile all of the Carbon Sass, create an `}<inlineCode parentName=\"p\">{`app.scss`}</inlineCode>{` file in the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` directory and in `}<inlineCode parentName=\"p\">{`App.js`}</inlineCode>{`, import that new file.`}</p>\n    <h5 {...{\n      \"id\": \"srcappjs\"\n    }}>{`src/App.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import './app.scss';\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: To optimize our Sass compile time, we’ll be adding app-specific styling to`}</em>{` `}<inlineCode parentName=\"p\">{`app.scss`}</inlineCode>{` `}<em parentName=\"p\">{`and only modifying`}</em>{` `}<inlineCode parentName=\"p\">{`index.scss`}</inlineCode>{` `}<em parentName=\"p\">{`when necessary.`}</em></p>\n    <p>{`Next we’ll import a `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{` from Carbon to test that our dependencies are working properly. At the top of `}<inlineCode parentName=\"p\">{`App.js`}</inlineCode>{`, import the `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{` by adding the following:`}</p>\n    <h5 {...{\n      \"id\": \"srcappjs-1\"\n    }}>{`src/App.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Button } from 'carbon-components-react';\n`}</code></pre>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`App`}</inlineCode>{` component return, you can now replace:`}</p>\n    <h5 {...{\n      \"id\": \"srcappjs-2\"\n    }}>{`src/App.js`}</h5>\n    {\n      /* prettier-ignore-start */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div>\n  Hello Carbon! Well, not quite yet. This is the starting point for the Carbon tutorial.\n</div>\n`}</code></pre>\n    {\n      /* prettier-ignore-end */\n    }\n    <p>{`with:`}</p>\n    <h5 {...{\n      \"id\": \"srcappjs-3\"\n    }}>{`src/App.js`}</h5>\n    {\n      /* prettier-ignore-start */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<Button>Button</Button>\n`}</code></pre>\n    {\n      /* prettier-ignore-end */\n    }\n    <p>{`Congratulations, you’ve imported your first component! You should see a Carbon styled button on the page.`}</p>\n    <h2 {...{\n      \"id\": \"add-ui-shell\"\n    }}>{`Add UI Shell`}</h2>\n    <p><em parentName=\"p\">{`Note: The UI Shell has experimental status at the moment. We do not recommend using it for production until it is stable, but if doing so, know that there may be breaking changes in the future.`}</em></p>\n    <p>{`Next we’re going to create a React component called `}<inlineCode parentName=\"p\">{`TutorialHeader`}</inlineCode>{` to use with the UI Shell Carbon component. In the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` directory, create a `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` directory and inside of that, a `}<inlineCode parentName=\"p\">{`TutorialHeader`}</inlineCode>{` directory. Create the following files inside `}<inlineCode parentName=\"p\">{`src/components/TutorialHeader`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`src/components/TutorialHeader\n├──_tutorial-header.scss\n├──index.js\n└──TutorialHeader.js\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"add-ui-shell-sass\"\n    }}>{`Add UI Shell Sass`}</h3>\n    <p>{`In `}<inlineCode parentName=\"p\">{`index.scss`}</inlineCode>{` add the following feature-flag `}<strong parentName=\"p\">{`above`}</strong>{` the Carbon styles import like so:`}</p>\n    <h5 {...{\n      \"id\": \"srcindexscss-1\"\n    }}>{`src/index.scss`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`$feature-flags: (\n  ui-shell: true,\n);\n`}</code></pre>\n    <p>{`This is because our UI Shell is in experimental mode and the styles need to be manually imported.`}</p>\n    <p>{`Next, in `}<inlineCode parentName=\"p\">{`app.scss`}</inlineCode>{`, we’ll import our `}<inlineCode parentName=\"p\">{`TutorialHeader`}</inlineCode>{` styles. Your file should now look like this:`}</p>\n    <h5 {...{\n      \"id\": \"srcappscss\"\n    }}>{`src/app.scss`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@import './components/TutorialHeader/tutorial-header.scss';\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"import-and-export-the-header\"\n    }}>{`Import and export the header`}</h3>\n    <p>{`In `}<inlineCode parentName=\"p\">{`src/components/TutorialHeader/index.js`}</inlineCode>{`, import and export our `}<inlineCode parentName=\"p\">{`TutorialHeader`}</inlineCode>{` component like so:`}</p>\n    <h5 {...{\n      \"id\": \"srccomponentstutorialheaderindexjs\"\n    }}>{`src/components/TutorialHeader/index.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import TutorialHeader from './TutorialHeader';\nexport default TutorialHeader;\n`}</code></pre>\n    <p>{`Next we’ll import our Carbon UI Shell components into `}<inlineCode parentName=\"p\">{`TutorialHeader.js`}</inlineCode>{`. Set up the file like so:`}</p>\n    <h5 {...{\n      \"id\": \"srccomponentstutorialheadertutorialheaderjs\"\n    }}>{`src/components/TutorialHeader/TutorialHeader.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\nimport {\n  Header,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n} from 'carbon-components-react/lib/components/UIShell';\n\nconst TutorialHeader = () => (\n  <Header aria-label=\"Carbon Tutorial\">\n    <SkipToContent />\n    <HeaderName href=\"/\" prefix=\"IBM\">\n      Carbon Tutorial\n    </HeaderName>\n    <HeaderNavigation aria-label=\"Carbon Tutorial\">\n      <HeaderMenuItem href=\"/repos\">Repositories</HeaderMenuItem>\n    </HeaderNavigation>\n    <HeaderGlobalBar />\n  </Header>\n);\n\nexport default TutorialHeader;\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: you can find a description of the different components used UI Shell in our `}<a parentName=\"em\" {...{\n          \"href\": \"https://github.com/carbon-design-system/carbon/tree/master/packages/react/src/components/UIShell\"\n        }}>{`carbon-components-react`}</a>{` package.`}</em></p>\n    <p><em parentName=\"p\">{`Note: When creating navigation headers, it’s important to have a`}</em>{` `}<inlineCode parentName=\"p\">{`Skip to content`}</inlineCode>{` `}<em parentName=\"p\">{`link so keyboard users can skip the navigation items and go straight to the main content.`}</em></p>\n    <p><em parentName=\"p\">{`Note: It’s important that the`}</em>{` `}<inlineCode parentName=\"p\">{`TutorialHeader`}</inlineCode>{` `}<em parentName=\"p\">{`returns the Carbon`}</em>{` `}<inlineCode parentName=\"p\">{`Header`}</inlineCode>{` `}<em parentName=\"p\">{`as it’s containing element, as we’ll later be rendering`}</em>{` `}<inlineCode parentName=\"p\">{`TutorialHeader`}</inlineCode>{` `}<em parentName=\"p\">{`in`}</em>{` `}<inlineCode parentName=\"p\">{`App.js`}</inlineCode>{` `}<em parentName=\"p\">{`as a preceeding sibling of`}</em>{` `}<inlineCode parentName=\"p\">{`Content`}</inlineCode><em parentName=\"p\">{`, another UI Shell component. Those components need to live one after another for the UI Shell to properly render.`}</em></p>\n    <h3 {...{\n      \"id\": \"import-icons\"\n    }}>{`Import icons`}</h3>\n    <p>{`Now let’s import the icons from our `}<inlineCode parentName=\"p\">{`@carbon/icons-react`}</inlineCode>{` elements package. In the `}<inlineCode parentName=\"p\">{`TutorialHeader.js`}</inlineCode>{` file, we need to import each individual icon we will use.`}</p>\n    <h5 {...{\n      \"id\": \"srccomponentstutorialheadertutorialheaderjs-1\"\n    }}>{`src/components/TutorialHeader/TutorialHeader.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import Notification20 from '@carbon/icons-react/lib/notification/20';\nimport UserAvatar20 from '@carbon/icons-react/lib/user--avatar/20';\nimport AppSwitcher20 from '@carbon/icons-react/lib/app-switcher/20';\n`}</code></pre>\n    <p>{`Then we need to add the `}<inlineCode parentName=\"p\">{`HeaderGlobalAction`}</inlineCode>{` component inside of the `}<inlineCode parentName=\"p\">{`HeaderGlobalBar`}</inlineCode>{` where we will add our icons. These represent actions in the header a user can make. Replace:`}</p>\n    <h5 {...{\n      \"id\": \"srccomponentstutorialheadertutorialheaderjs-2\"\n    }}>{`src/components/TutorialHeader/TutorialHeader.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<HeaderGlobalBar />\n`}</code></pre>\n    <p>{`With:`}</p>\n    <h5 {...{\n      \"id\": \"srccomponentstutorialheadertutorialheaderjs-3\"\n    }}>{`src/components/TutorialHeader/TutorialHeader.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<HeaderGlobalBar>\n  <HeaderGlobalAction aria-label=\"Notifications\">\n    <Notification20 />\n  </HeaderGlobalAction>\n  <HeaderGlobalAction aria-label=\"User Avatar\">\n    <UserAvatar20 />\n  </HeaderGlobalAction>\n  <HeaderGlobalAction aria-label=\"App Switcher\">\n    <AppSwitcher20 />\n  </HeaderGlobalAction>\n</HeaderGlobalBar>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"render-the-header\"\n    }}>{`Render the header`}</h3>\n    <p>{`Next we’ll render our UI Shell by importing our `}<inlineCode parentName=\"p\">{`TutorialHeader`}</inlineCode>{` component and `}<inlineCode parentName=\"p\">{`Content`}</inlineCode>{` into `}<inlineCode parentName=\"p\">{`App.js`}</inlineCode>{`. Your imports should look like this:`}</p>\n    <h5 {...{\n      \"id\": \"srcappjs-4\"\n    }}>{`src/App.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport './app.scss';\nimport { Button } from 'carbon-components-react';\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\nimport TutorialHeader from './components/TutorialHeader';\n`}</code></pre>\n    <p>{`Our `}<inlineCode parentName=\"p\">{`return`}</inlineCode>{` currently just contains a `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{`. Let’s update that to include our imported components. This should look like the following:`}</p>\n    <h5 {...{\n      \"id\": \"srcappjs-5\"\n    }}>{`src/App.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`class App extends Component {\n  render() {\n    return (\n      <>\n        <TutorialHeader />\n        <Content>\n          <Button>Button</Button>\n        </Content>\n      </>\n    );\n  }\n}\n`}</code></pre>\n    <p>{`You should now see a styled UI Shell header and a button below it.`}</p>\n    <h2 {...{\n      \"id\": \"create-pages\"\n    }}>{`Create pages`}</h2>\n    <p>{`Next thing we need to do is create the files for our content. Start by creating a folder called `}<inlineCode parentName=\"p\">{`content`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{`. This should be a sibling of `}<inlineCode parentName=\"p\">{`src/components`}</inlineCode>{`.`}</p>\n    <p>{`Since our app will have two pages, we’ll create two folders in `}<inlineCode parentName=\"p\">{`src/content`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`src/content\n├── LandingPage\n└── RepoPage\n`}</code></pre>\n    <p>{`Next we’ll set up these folders the same way we set up `}<inlineCode parentName=\"p\">{`src/components/TutorialHeader`}</inlineCode>{`.`}</p>\n    <p>{`Create the following files in the `}<inlineCode parentName=\"p\">{`LandingPage`}</inlineCode>{` folder:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`src/content/LandingPage\n├── _landing-page.scss\n├── index.js\n└── LandingPage.js\n`}</code></pre>\n    <p>{`Create the following files in the `}<inlineCode parentName=\"p\">{`RepoPage`}</inlineCode>{` folder:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`src/content/RepoPage\n├── _repo-page.scss\n├── index.js\n└── RepoPage.js\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"set-up-content-sass\"\n    }}>{`Set up content Sass`}</h3>\n    <p>{`Next, we’ll import our content Sass files in `}<inlineCode parentName=\"p\">{`app.scss`}</inlineCode>{`, like so:`}</p>\n    <h5 {...{\n      \"id\": \"srcappscss-1\"\n    }}>{`src/app.scss`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@import './components/TutorialHeader/tutorial-header.scss';\n@import './content/LandingPage/landing-page.scss';\n@import './content/RepoPage/repo-page.scss';\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"import-and-export-content-pages\"\n    }}>{`Import and export content pages`}</h3>\n    <p>{`Now that our stylesheets are set up, we need to create our pages’ components. Starting with `}<inlineCode parentName=\"p\">{`LandingPage`}</inlineCode>{`, just like with our header, we need to export the component in `}<inlineCode parentName=\"p\">{`src/content/LandingPage/index.js`}</inlineCode>{` by adding:`}</p>\n    <h5 {...{\n      \"id\": \"srccontentlandingpageindexjs\"\n    }}>{`src/content/LandingPage/index.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import LandingPage from './LandingPage';\nexport default LandingPage;\n`}</code></pre>\n    <p>{`Next in `}<inlineCode parentName=\"p\">{`LandingPage.js`}</inlineCode>{` we’ll create our component.`}</p>\n    <h5 {...{\n      \"id\": \"srccontentlandingpagelandingpagejs\"\n    }}>{`src/content/LandingPage/LandingPage.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\n\nconst LandingPage = () => {\n  return <div>LANDING PAGE</div>;\n};\n\nexport default LandingPage;\n`}</code></pre>\n    <p>{`We’ll repeat this process with `}<inlineCode parentName=\"p\">{`RepoPage`}</inlineCode>{`.`}</p>\n    <p>{`In `}<inlineCode parentName=\"p\">{`src/content/RepoPage/index.js`}</inlineCode>{`, import and export the `}<inlineCode parentName=\"p\">{`RepoPage`}</inlineCode>{` component like so:`}</p>\n    <h5 {...{\n      \"id\": \"srccontentrepopageindexjs\"\n    }}>{`src/content/RepoPage/index.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import RepoPage from './RepoPage';\nexport default RepoPage;\n`}</code></pre>\n    <p>{`Then in `}<inlineCode parentName=\"p\">{`RepoPage.js`}</inlineCode>{` create the component.`}</p>\n    <h5 {...{\n      \"id\": \"srccontentrepopagerepopagejs\"\n    }}>{`src/content/RepoPage/RepoPage.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\n\nconst RepoPage = () => {\n  return <div>REPO PAGE</div>;\n};\n\nexport default RepoPage;\n`}</code></pre>\n    <p>{`Awesome! We’ve just created our content pages. Next thing we need to do is render them with our router.`}</p>\n    <h2 {...{\n      \"id\": \"add-routing\"\n    }}>{`Add routing`}</h2>\n    <p>{`We’ve updated our app to render our header, but now we need to add routing functionality. To do this we need to install `}<inlineCode parentName=\"p\">{`react-router-dom`}</inlineCode>{`. Go ahead and stop your development server (with `}<inlineCode parentName=\"p\">{`CTRL-C`}</inlineCode>{`) and then:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn add react-router-dom\n$ yarn start\n`}</code></pre>\n    <p>{`First, we need to wrap our app in the `}<inlineCode parentName=\"p\">{`Router`}</inlineCode>{` component. In the root `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{`, add the import:`}</p>\n    <h5 {...{\n      \"id\": \"srcindexjs\"\n    }}>{`src/index.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { HashRouter as Router } from 'react-router-dom';\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: We’re using`}</em>{` `}<inlineCode parentName=\"p\">{`HashRouter`}</inlineCode>{` `}<em parentName=\"p\">{`instead of`}</em>{` `}<inlineCode parentName=\"p\">{`BrowserRouter`}</inlineCode>{` `}<em parentName=\"p\">{`to simplify deployments in upcoming tutorial steps. Learn more about the React Router `}<a parentName=\"em\" {...{\n          \"href\": \"https://reacttraining.com/react-router/web/api/BrowserRouter\"\n        }}>{`here`}</a>{`.`}</em></p>\n    <p>{`Then, update the `}<inlineCode parentName=\"p\">{`render()`}</inlineCode>{` function to include the `}<inlineCode parentName=\"p\">{`Router`}</inlineCode>{`.`}</p>\n    <h5 {...{\n      \"id\": \"srcindexjs-1\"\n    }}>{`src/index.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`ReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n`}</code></pre>\n    <p>{`In order to render our content pages, we need to add the following imports in `}<inlineCode parentName=\"p\">{`App.js`}</inlineCode>{` below our existing imports.`}</p>\n    <h5 {...{\n      \"id\": \"srcappjs-6\"\n    }}>{`src/App.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Route, Switch } from 'react-router-dom';\nimport LandingPage from './content/LandingPage';\nimport RepoPage from './content/RepoPage';\n`}</code></pre>\n    <p>{`This allows us to use our page content components and routing components from `}<inlineCode parentName=\"p\">{`react-router-dom`}</inlineCode>{`.`}</p>\n    <p>{`Next thing we need to is update what we’re returning in `}<inlineCode parentName=\"p\">{`App.js`}</inlineCode>{` . We currently just have a button in our content. In order to render our pages correctly, we need to delete the `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{` component within `}<inlineCode parentName=\"p\">{`Content`}</inlineCode>{` (and remove the Button import).`}</p>\n    <p>{`Now inside `}<inlineCode parentName=\"p\">{`Content`}</inlineCode>{` we’ll add the following:`}</p>\n    <h5 {...{\n      \"id\": \"srcappjs-7\"\n    }}>{`src/App.js`}</h5>\n    {\n      /* prettier-ignore-start */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<Switch>\n  <Route exact path=\"/\" component={LandingPage} />\n  <Route path=\"/repos\" component={RepoPage} />\n</Switch>\n`}</code></pre>\n    {\n      /* prettier-ignore-end */\n    }\n    <p>{`After that we need to do a couple quick fixes to the UI Shell to have it work with the React router.`}</p>\n    <p>{`Add the `}<inlineCode parentName=\"p\">{`Link`}</inlineCode>{` import in `}<inlineCode parentName=\"p\">{`TutorialHeader.js`}</inlineCode>{`:`}</p>\n    <h5 {...{\n      \"id\": \"srccomponentstutorialheadertutorialheaderjs-4\"\n    }}>{`src/components/TutorialHeader/TutorialHeader.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Link } from 'react-router-dom';\n`}</code></pre>\n    <p>{`We need to use the `}<inlineCode parentName=\"p\">{`Link`}</inlineCode>{` component instead of the default anchor elements to prevent full page reload when navigating to different pages with React Router. To use `}<inlineCode parentName=\"p\">{`Link`}</inlineCode>{`, update the `}<inlineCode parentName=\"p\">{`HeaderName`}</inlineCode>{` component to use the `}<inlineCode parentName=\"p\">{`element`}</inlineCode>{` prop and replace the `}<inlineCode parentName=\"p\">{`href`}</inlineCode>{` with `}<inlineCode parentName=\"p\">{`to`}</inlineCode>{`:`}</p>\n    <h5 {...{\n      \"id\": \"srccomponentstutorialheadertutorialheaderjs-5\"\n    }}>{`src/components/TutorialHeader/TutorialHeader.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<HeaderName element={Link} to=\"/\" prefix=\"IBM\">\n  Carbon Tutorial\n</HeaderName>\n`}</code></pre>\n    <p>{`Do the same with the component that contains `}<inlineCode parentName=\"p\">{`href=\"/repos\"`}</inlineCode>{`, updating to:`}</p>\n    <h5 {...{\n      \"id\": \"srccomponentstutorialheadertutorialheaderjs-6\"\n    }}>{`src/components/TutorialHeader/TutorialHeader.js`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<HeaderMenuItem element={Link} to=\"/repos\">\n  Repositories\n</HeaderMenuItem>\n`}</code></pre>\n    <p>{`You should now have a working header that routes to different pages without full page reload!`}</p>\n    <h2 {...{\n      \"id\": \"submit-pull-request\"\n    }}>{`Submit pull request`}</h2>\n    <p>{`We’re going to submit a pull request to verify completion of this tutorial step and demonstrate a couple related concepts.`}</p>\n    <h3 {...{\n      \"id\": \"continuous-integration-ci-check\"\n    }}>{`Continuous integration (CI) check`}</h3>\n    <p>{`We have a `}<inlineCode parentName=\"p\">{`ci-check`}</inlineCode>{` script defined in `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` that verifies file formatting for files that have been touched since the last Git commit with a tool called `}<a parentName=\"p\" {...{\n        \"href\": \"https://prettier.io\"\n      }}>{`Prettier`}</a>{`. You’d typically also have that script run your test suite as part of your CI build. Go ahead and make sure everything looks good with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn ci-check\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: If the`}</em>{` `}<inlineCode parentName=\"p\">{`ci-check`}</inlineCode>{` `}<em parentName=\"p\">{`is giving an error, it’s likely that some of your source files are not properly formatted. This could happen if your text editor isn’t formatting with Prettier on save. To get`}</em>{` `}<inlineCode parentName=\"p\">{`ci-check`}</inlineCode>{` `}<em parentName=\"p\">{`to pass, run`}</em>{` `}<inlineCode parentName=\"p\">{`yarn format`}</inlineCode><em parentName=\"p\">{` then re-run`}</em>{` `}<inlineCode parentName=\"p\">{`yarn ci-check`}</inlineCode><em parentName=\"p\">{`.`}</em></p>\n    <h3 {...{\n      \"id\": \"git-commit-and-push\"\n    }}>{`Git commit and push`}</h3>\n    <p>{`Before we can create a pull request, stage and commit all of your changes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ git add --all && git commit -m \"feat(tutorial): complete step 1\"\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: You’ll notice that your commit includes binaries in the `}</em><inlineCode parentName=\"p\">{`.yarn-offline-mirror`}</inlineCode><em parentName=\"p\">{` folder. That’s expected as the repository is configured to run `}<a parentName=\"em\" {...{\n          \"href\": \"https://yarnpkg.com/blog/2016/11/24/offline-mirror\"\n        }}>{`Yarn offline`}</a>{` for more reliable builds. Future tutorial steps that don’t install new packages won’t have `}</em><inlineCode parentName=\"p\">{`.yarn-offline-mirror`}</inlineCode><em parentName=\"p\">{` commit changes.`}</em></p>\n    <p>{`Then, push to your repository:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ git push origin react-step-1\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: If your Git remote protocol is HTTPS instead of SSH, you may be prompted to authenticate with GitHub when you push changes. If your GitHub account has two-factor authentication enabled, we recommend that you follow these instructions to `}<a parentName=\"em\" {...{\n          \"href\": \"https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line\"\n        }}>{`create a personal access token for the command line`}</a>{`. That lets you use your token instead of password when performing Git operations over HTTPS.`}</em></p>\n    <p><em parentName=\"p\">{`Note: If you receive a`}</em>{` `}<inlineCode parentName=\"p\">{`non-fast-forward`}</inlineCode>{` `}<em parentName=\"p\">{`error, it’s likely that your forked repository is behind the original repository and needs updated. This can happen if the tutorial was updated after you began working on it. To fix, run`}</em>{` `}<inlineCode parentName=\"p\">{`git pull upstream react-step-1`}</inlineCode>{` `}<em parentName=\"p\">{`to merge the changes into your branch, then you can try pushing again. Or, you can `}<a parentName=\"em\" {...{\n          \"href\": \"https://help.github.com/en/articles/syncing-a-fork\"\n        }}>{`manually merge`}</a>{` in the upstream changes.`}</em></p>\n    <h3 {...{\n      \"id\": \"pull-request-pr\"\n    }}>{`Pull request (PR)`}</h3>\n    <p>{`Finally, visit `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-tutorial\"\n      }}>{`carbon-tutorial`}</a>{` to “Compare & pull request”. In doing so, make sure that you are comparing to `}<inlineCode parentName=\"p\">{`react-step-1`}</inlineCode>{` into `}<inlineCode parentName=\"p\">{`base: react-step-1`}</inlineCode>{`. Take notice of the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.netlify.com\"\n      }}>{`Netlify`}</a>{` bot that deploys a preview of your PR every time that you push new commits. These previews can be shared and viewed by anybody to assist the PR review process.`}</p>\n    <p><em parentName=\"p\">{`Note: Expect your tutorial step PRs to be reviewed by the Carbon team but not merged. We’ll close your PR so we can keep the repository’s remote branches pristine and ready for the next person!`}</em></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}