{"version":3,"sources":["webpack:///./src/pages/tutorial/react-step-5/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","AnchorLinks","AnchorLink","Row","Column","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","id","parentName","href","offsetLg","height","title","src","frameBorder","allowtransparency","allowFullScreen","className","isMDXComponent","components_PageHeader","_cx","children","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-tutorial-react-step-5-index-mdx-0e89494ebe7496ab5555.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/vincepicone/Programming/Work/carbon-www/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"this-step-takes-what-weve-built-so-far-and-optimizes-the-app-for-a-production-environment-well-be-deploying-the-production-build-to-ibm-cloud\"\n    }}>{`This step takes what we’ve built so far and optimizes the app for a production environment. We’ll be deploying the production build to IBM Cloud.`}</h3>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n      <AnchorLink mdxType=\"AnchorLink\">Fork, clone and branch</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Create IBM Cloud account</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Optimize Sass</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Build for production</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Create manifest file</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Create static file</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Deploy app</AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">Submit pull request</AnchorLink>\n    </AnchorLinks>\n    <h2 {...{\n      \"id\": \"preview\"\n    }}>{`Preview`}</h2>\n    <p>{`A `}<a parentName=\"p\" {...{\n        \"href\": \"https://react-step-6--carbon-tutorial.netlify.com\"\n      }}>{`preview`}</a>{` of what you’ll build (visually no different, but built for production):`}</p>\n    <Row mdxType=\"Row\">\n  <Column offsetLg=\"4\" mdxType=\"Column\">\n    <iframe height=\"400\" title=\"Carbon Tutorial Step 5\" src=\"https://react-step-6--carbon-tutorial.netlify.com\" frameBorder=\"no\" allowtransparency=\"true\" allowFullScreen=\"true\" className=\"bx--iframe bx--iframe--border\" />\n  </Column>\n    </Row>\n    <h2 {...{\n      \"id\": \"fork-clone-and-branch\"\n    }}>{`Fork, clone and branch`}</h2>\n    <p>{`This tutorial has an accompanying GitHub repository called `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-tutorial\"\n      }}>{`carbon-tutorial`}</a>{` that we’ll use as a starting point for each step. If you haven’t forked and cloned that repository yet, and haven’t added the upstream remote, go ahead and do so by following the `}<a parentName=\"p\" {...{\n        \"href\": \"/tutorial/react-step-1#fork-clone--branch\"\n      }}>{`step 1 instructions`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"branch\"\n    }}>{`Branch`}</h3>\n    <p>{`With your repository all set up, let’s check out the branch for this tutorial step’s starting point.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ git fetch upstream\n$ git checkout -b react-step-5 upstream/react-step-5\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: This builds on top of step 4, but be sure to check out the upstream step 5 branch because it includes the static assets required to get through this step.`}</em></p>\n    <h3 {...{\n      \"id\": \"build-and-start-app\"\n    }}>{`Build and start app`}</h3>\n    <p>{`Install the app’s dependencies (in case you’re starting fresh in your current directory and not continuing from the previous step):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn\n`}</code></pre>\n    <p>{`Then, start the app:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn start\n`}</code></pre>\n    <p>{`You should see something similar to where the `}<a parentName=\"p\" {...{\n        \"href\": \"/tutorial/react-step-4\"\n      }}>{`previous step`}</a>{` left off.`}</p>\n    <h2 {...{\n      \"id\": \"create-ibm-cloud-account\"\n    }}>{`Create IBM Cloud account`}</h2>\n    <p>{`Before we get started, `}<a parentName=\"p\" {...{\n        \"href\": \"https://cloud.ibm.com/registration\"\n      }}>{`create an IBM Cloud account`}</a>{` if you don’t already have one, as we’ll be deploying there in a bit.`}</p>\n    <h2 {...{\n      \"id\": \"optimize-sass\"\n    }}>{`Optimize Sass`}</h2>\n    <p>{`So far we’ve been developing in a, well, development environment where static asset optimization hasn’t been a priority. If you reference `}<inlineCode parentName=\"p\">{`/src/index.scss`}</inlineCode>{`, you’ll see one `}<inlineCode parentName=\"p\">{`@import`}</inlineCode>{` that is pulling in Carbon’s full Sass build.`}</p>\n    <h5 {...{\n      \"id\": \"srcindexscss\"\n    }}>{`src/index.scss`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`$feature-flags: (\n  ui-shell: true,\n  grid-columns-16: true,\n);\n\n@import 'carbon-components/scss/globals/scss/styles.scss';\n`}</code></pre>\n    <p>{`To give you an idea of what’s all included, open up `}<inlineCode parentName=\"p\">{`node_modules/carbon-components/scss/globals/scss/styles.scss`}</inlineCode>{`. You’ll see imports for components like accordion, slider, tooltip, etc. Since we aren’t using those components, let’s exclude them from our built stylesheets. Keeping the `}<inlineCode parentName=\"p\">{`$feature-flags`}</inlineCode>{` Sass map, replace the `}<inlineCode parentName=\"p\">{`styles.scss`}</inlineCode>{` import with:`}</p>\n    <h5 {...{\n      \"id\": \"srcindexscss-1\"\n    }}>{`src/index.scss`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// Feature flags\n$css--font-face: true;\n$css--plex: true;\n\n// Global styles\n@import 'carbon-components/scss/globals/scss/css--font-face';\n@import 'carbon-components/scss/globals/grid/grid';\n\n// Carbon components\n@import 'carbon-components/scss/components/breadcrumb/breadcrumb';\n@import 'carbon-components/scss/components/button/button';\n@import 'carbon-components/scss/components/data-table/data-table';\n@import 'carbon-components/scss/components/link/link';\n@import 'carbon-components/scss/components/pagination/pagination';\n@import 'carbon-components/scss/components/tabs/tabs';\n@import 'carbon-components/scss/components/ui-shell/ui-shell';\n`}</code></pre>\n    <p>{`In comparing to the included `}<inlineCode parentName=\"p\">{`styles.scss`}</inlineCode>{`, you may be asking what happened to importing `}<inlineCode parentName=\"p\">{`_vars.scss`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`_colors.scss`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`_theme.scss`}</inlineCode>{`, etc.? Many of those global Sass partials get imported through the components. For example, open `}<inlineCode parentName=\"p\">{`node_modules/carbon-components/scss/components/button/_button.scss`}</inlineCode>{` to see its dependencies. No harm in importing them as `}<inlineCode parentName=\"p\">{`styles.scss`}</inlineCode>{` does, but for simplicity here, we’ll let the components pull them in.`}</p>\n    <p>{`You can read more about optimizing Carbon’s Sass in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/carbondesign/minimal-css-with-carbon-b0c089ccfa71\"\n      }}>{`Carbon Design System publication`}</a>{` on Medium.`}</p>\n    <h2 {...{\n      \"id\": \"build-for-production\"\n    }}>{`Build for production`}</h2>\n    <p>{`Before we deploy our app, we need to create an optimized production build with this command. You may need to `}<inlineCode parentName=\"p\">{`CTRL-C`}</inlineCode>{` to stop the development environment first.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn build\n`}</code></pre>\n    <p>{`Looking at `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`, you’ll find `}<inlineCode parentName=\"p\">{`yarn build`}</inlineCode>{` to run `}<inlineCode parentName=\"p\">{`react-scripts build`}</inlineCode>{`. This builds the app for production to the `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` folder. It bundles React in production mode and optimizes the build for the best performance. It even goes so far to minify files and include hashes in filenames for caching.`}</p>\n    <p>{`As a lot of this may seem like magic since the build configuration came from Create React App, go ahead and check out their `}<a parentName=\"p\" {...{\n        \"href\": \"https://facebook.github.io/create-react-app/docs/production-build\"\n      }}>{`production build guidelines`}</a>{` for a full description of what’s happening.`}</p>\n    <h2 {...{\n      \"id\": \"create-manifest-file\"\n    }}>{`Create manifest file`}</h2>\n    <p>{`Now that we have a production build, let’s get it on the cloud. We’re going to use `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cloudfoundry/staticfile-buildpack.git\"\n      }}>{`staticfile-buildpack`}</a>{` to deploy our webapp. Since this is a Cloud Foundry buildpack, we’ll be using the `}<inlineCode parentName=\"p\">{`cf`}</inlineCode>{` command line interface (CLI). If running `}<inlineCode parentName=\"p\">{`cf --help`}</inlineCode>{` doesn’t work for you, chances are you need to `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.cloudfoundry.org/cf-cli/install-go-cli.html\"\n      }}>{`install the CLI`}</a>{`.`}</p>\n    <p><em parentName=\"p\">{`Note: If unfamiliar with buildpacks, the `}<a parentName=\"em\" {...{\n          \"href\": \"https://docs.cloudfoundry.org/buildpacks/staticfile/index.html\"\n        }}>{`staticfile buildpack docs`}</a>{` has good definitions and configuration documentation.`}</em></p>\n    <p>{`With the Cloud Foundry CLI installed, next, we need to create a `}<inlineCode parentName=\"p\">{`manifest.yml`}</inlineCode>{` file in the root of the project. To prevent multiple apps trying to use the `}<inlineCode parentName=\"p\">{`carbon-tutorial`}</inlineCode>{` name, replace `}<inlineCode parentName=\"p\">{`USERNAME`}</inlineCode>{` with your GitHub username below to make sure our apps are uniquely named.`}</p>\n    <h5 {...{\n      \"id\": \"manifestyml\"\n    }}>{`manifest.yml`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`---\napplications:\n  - name: carbon-tutorial-USERNAME\n    memory: 64M\n    buildpack: https://github.com/cloudfoundry/staticfile-buildpack.git\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: With this set-up we’re still using a GitHub personal access token saved in `}</em><inlineCode parentName=\"p\">{`.env.local`}</inlineCode><em parentName=\"p\">{`. If you haven’t created a GitHub access token yet, see `}<a parentName=\"em\" {...{\n          \"href\": \"/tutorial/react-step-3#create-access-token\"\n        }}>{`step 3`}</a>{`. You can put the environment variable in the manifest file, or manually add it in the IBM Cloud dashboard, but since we’re building off previous tutorial steps nothing more is needed.`}</em></p>\n    <h2 {...{\n      \"id\": \"create-static-file\"\n    }}>{`Create static file`}</h2>\n    <p>{`Create a new static file in the root of the project named `}<inlineCode parentName=\"p\">{`Staticfile`}</inlineCode>{`. This tells the app to deploy from the `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` folder and not the root of the project.`}</p>\n    <h5 {...{\n      \"id\": \"staticfile\"\n    }}>{`Staticfile`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`root: build\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"cloud-foundry-ignore\"\n    }}>{`Cloud Foundry ignore`}</h3>\n    <p>{`After telling Cloud Foundry what to include, we can also specify what to ignore. Create a top-level `}<inlineCode parentName=\"p\">{`.cfignore`}</inlineCode>{` file. Cloud Foundry doesn’t let you push read-only files (specifically, files with permissions <`}<inlineCode parentName=\"p\">{`400`}</inlineCode>{`), so to prevent issues with the deploy, add:`}</p>\n    <h5 {...{\n      \"id\": \"cfignore\"\n    }}>{`.cfignore`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`node_modules/.cache\n`}</code></pre>\n    <p>{`You can speed up deploys by decreasing the files uploaded through cloud foundry. To accomplish this, ignore any folder not required by the production application on IBM Cloud. For example, in the case of serving static files, you can ignore `}<inlineCode parentName=\"p\">{`node_modules/`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`src/`}</inlineCode>{` because the only folder being served is `}<inlineCode parentName=\"p\">{`build/`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"deploy-app\"\n    }}>{`Deploy app`}</h2>\n    <p>{`Login to IBM Cloud with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ cf login -a https://api.ng.bluemix.net -sso\n`}</code></pre>\n    <p>{`Deploy app using the `}<inlineCode parentName=\"p\">{`cf push`}</inlineCode>{` command. Since `}<inlineCode parentName=\"p\">{`manifest.yml`}</inlineCode>{` is in our root directory, we don’t need to specify it in the push command. But, if you have multiple manifest files that target different environments, it’s good practice to specify the file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ cf push -f manifest.yml\n`}</code></pre>\n    <p>{`To make it easy on ourselves by not needing to remember that command, let’s add a script in `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`. We can combine the build and deploy steps to make sure we only deploy immediately after running the build. In the `}<inlineCode parentName=\"p\">{`\"scripts\"`}</inlineCode>{` object in `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`, add:`}</p>\n    <h5 {...{\n      \"id\": \"packagejson\"\n    }}>{`package.json`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`\"deploy\": \"rm -rf ./build && yarn build && cf push -f manifest.yml\"\n`}</code></pre>\n    <p>{`Next time you want to deploy, you can simply run `}<inlineCode parentName=\"p\">{`yarn deploy`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"submit-pull-request\"\n    }}>{`Submit pull request`}</h2>\n    <p>{`That does it! We’re going to submit a pull request to verify completion of this tutorial step. In doing so, `}<strong parentName=\"p\">{`please include the mybluemix.net URL for your deployed app in your pull request description`}</strong>{`.`}</p>\n    <h3 {...{\n      \"id\": \"continuous-integration-ci-check\"\n    }}>{`Continuous integration (CI) check`}</h3>\n    <p>{`Run the CI check to make sure we’re all set to submit a pull request.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn ci-check\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: Having issues running the CI check? `}<a parentName=\"em\" {...{\n          \"href\": \"/tutorial/react-step-1#continuous-integration-(ci)-check\"\n        }}>{`Step 1`}</a>{` has troubleshooting notes that may help.`}</em></p>\n    <h3 {...{\n      \"id\": \"git-commit-and-push\"\n    }}>{`Git commit and push`}</h3>\n    <p>{`Before we can create a pull request, stage and commit all of your changes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ git add --all && git commit -m \"feat(tutorial): complete step 5\"\n`}</code></pre>\n    <p>{`Then, push to your repository:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ git push origin react-step-5\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: Having issues pushing your changes? `}<a parentName=\"em\" {...{\n          \"href\": \"/tutorial/react-step-1#git-commit-and-push\"\n        }}>{`Step 1`}</a>{` has troubleshooting notes that may help.`}</em></p>\n    <h3 {...{\n      \"id\": \"pull-request-pr\"\n    }}>{`Pull request (PR)`}</h3>\n    <p>{`Finally, visit `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-tutorial\"\n      }}>{`carbon-tutorial`}</a>{` to “Compare & pull request”. In doing so, make sure that you are comparing to `}<inlineCode parentName=\"p\">{`react-step-5`}</inlineCode>{` into `}<inlineCode parentName=\"p\">{`base: react-step-5`}</inlineCode>{`.`}</p>\n    <p><em parentName=\"p\">{`Note: Expect your tutorial step PRs to be reviewed by the Carbon team but not merged. We’ll close your PR so we can keep the repository’s remote branches pristine and ready for the next person!`}</em></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}