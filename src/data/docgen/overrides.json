{
  "Button": {
    "description": "",
    "methods": [],
    "props": {
      "tabIndex": {
        "defaultValue": {
          "value": "0",
          "computed": false
        },
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Optional prop to specify the tabIndex of the Button"
      },
      "type": {
        "defaultValue": {
          "value": "'button'",
          "computed": false
        },
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'button'",
              "computed": false
            },
            {
              "value": "'reset'",
              "computed": false
            },
            {
              "value": "'submit'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Optional prop to specify the type of the Button"
      },
      "disabled": {
        "defaultValue": {
          "value": "false",
          "computed": false
        },
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Specify whether the Button should be disabled, or not"
      },
      "kind": {
        "defaultValue": {
          "value": "'primary'",
          "computed": false
        },
        "type": {
          "name": "enum",
          "description": "Specify the kind of Button you want to create",
          "value": [
            {
              "value": "'primary'"
            },
            {
              "value": "'secondary'"
            },
            {
              "value": "'danger'"
            },
            {
              "value": "'ghost'"
            },
            {
              "value": "'danger-primary'"
            },
            {
              "value": "'tertiary'"
            }
          ]
        },
        "required": false,
        "description": "Specify the kind of Button you want to create"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Specify the content of your Button"
      },
      "as": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "Specify how the button itself should be rendered.\nMake sure to apply all props to the root node and render children appropriately"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Specify an optional className to be added to your Button"
      },
      "size": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'default'",
              "computed": false
            },
            {
              "value": "'field'",
              "computed": false
            },
            {
              "value": "'small'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Specify the size of the button, from a list of available sizes.\nFor `default` buttons, this prop can remain unspecified."
      },
      "small": {
        "type": {
          "name": "custom",
          "raw": "deprecate(PropTypes.bool, \"\\nThe prop `small` for Button has been deprecated in favor of `size`. Please use `size=\\\"small\\\"` instead.\")"
        },
        "required": false,
        "description": "Deprecated in v10 in favor of `size`.\nSpecify whether the Button should be a small variant"
      },
      "href": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optionally specify an href for your Button to become an <a> element"
      },
      "role": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optional prop to specify the role of the Button"
      },
      "renderIcon": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func"
            },
            {
              "name": "object"
            }
          ]
        },
        "required": false,
        "description": "Optional prop to allow overriding the icon rendering.\nCan be a React component class"
      },
      "iconDescription": {
        "type": {
          "name": "custom",
          "raw": "function iconDescription(props) {\n  if (props.renderIcon && !props.children && !props.iconDescription) {\n    return new Error('renderIcon property specified without also providing an iconDescription property.');\n  }\n\n  return undefined;\n}"
        },
        "required": false,
        "description": "If specifying the `renderIcon` prop, provide a description for that icon that can\nbe read by screen readers"
      },
      "hasIconOnly": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Specify if the button is an icon-only button"
      },
      "tooltipPosition": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'top'",
              "computed": false
            },
            {
              "value": "'right'",
              "computed": false
            },
            {
              "value": "'bottom'",
              "computed": false
            },
            {
              "value": "'left'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Specify the direction of the tooltip for icon-only buttons.\nCan be either top, right, bottom, or left."
      },
      "tooltipAlignment": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'start'",
              "computed": false
            },
            {
              "value": "'center'",
              "computed": false
            },
            {
              "value": "'end'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Specify the alignment of the tooltip to the icon-only button.\nCan be one of: start, center, or end."
      }
    }
  }
}
